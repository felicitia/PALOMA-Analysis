--------- beginning of /dev/log/main
I/Icing   (  746): Indexing 9EBFE84EABD9270B25A97439CA522B4FC49A4875 from com.google.android.gms
I/Icing   (  746): Indexing done 9EBFE84EABD9270B25A97439CA522B4FC49A4875
D/AndroidRuntime( 8296): 
D/AndroidRuntime( 8296): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime( 8296): CheckJNI is OFF
D/dalvikvm( 8296): Using executionMode 2
D/dalvikvm( 8296): Trying to load lib libjavacore.so 0x0
D/dalvikvm( 8296): Added shared lib libjavacore.so 0x0
D/dalvikvm( 8296): Trying to load lib libnativehelper.so 0x0
D/dalvikvm( 8296): Added shared lib libnativehelper.so 0x0
D/dalvikvm( 8296): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm( 8296): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack( 8296): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug( 8296): failed to load memtrack module: -2
D/AndroidRuntime( 8296): Calling main entry com.android.commands.monkey.Monkey
--------- beginning of /dev/log/system
W/BroadcastQueue(  470): Skipping deliver [background] BroadcastRecord{4affb8cc u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4b1e8038 8296 (unknown name)/0/u-1 remote:4aae9b60}: process crashing
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=8306 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/dalvikvm( 8306): ignoring registerObject request in thread=1
I/dalvikvm( 8306): ignoring registerObject request in thread=1
D/dalvikvm( 8306): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8306): GC_CONCURRENT freed 190K, 8% free 3168K/3420K, paused 1ms+3ms, total 7ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8306): GC_CONCURRENT freed 170K, 7% free 3395K/3636K, paused 3ms+0ms, total 6ms
I/CrashlyticsCore( 8306): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8306): GC_CONCURRENT freed 154K, 6% free 3625K/3852K, paused 2ms+0ms, total 3ms
D/dalvikvm( 8306): GC_CONCURRENT freed 176K, 7% free 3847K/4104K, paused 1ms+1ms, total 4ms
I/dalvikvm( 8306): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8306): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8306): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 8306): GC_CONCURRENT freed 116K, 5% free 4119K/4316K, paused 1ms+0ms, total 4ms
I/dalvikvm( 8306): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8306): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8306): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8306): GC_CONCURRENT freed 192K, 6% free 4403K/4684K, paused 1ms+4ms, total 7ms
D/dalvikvm( 8306): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8306): VFY: unable to resolve instance field 38765
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 8306): <init> androidContext: 'com.mint.app.MintApp@4a7b12e8' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 8306): GC_CONCURRENT freed 317K, 9% free 4492K/4896K, paused 2ms+2ms, total 5ms
W/dalvikvm( 8306): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8306): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8306): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8306): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8306): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8306): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8306): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8306): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8306): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8306): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8306): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:1
I/System.out( 8306): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8306): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8306): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8306): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8306): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8306): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8306): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.lang.String getQueryString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.net.HttpURLConnection getUrlConnection(java.lang.String)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.mint.data.service.ConnectionUtil: java.net.HttpURLConnection getUrlConnection(java.lang.String)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0)###https://mobile.mint.com/testing.xevent?platform=ANDROID_TABLET&buildNumber=4.8.8.1&deviceName=SM-G9350&systemVersion=19&systemName=SM-G9350&deviceModel=SM-G9350&clientID=3ace0108121e3573&apiProtocol=3.0.0&clientVersion=4.8.8.1&clientType=Mint
D/dalvikvm( 8306): GC_CONCURRENT freed 1537K, 33% free 3382K/5016K, paused 1ms+0ms, total 4ms
I/Authorization( 8306): getAuthorizationState
I/com.newrelic.agent.android( 8306): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='null', data_report_period=60, data_token=[0, 0], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=0, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: java.net.HttpURLConnection getUrlConnection(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:22
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/com.newrelic.agent.android( 8306): Application state monitor has started
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: void addCookiesAndTimeout(java.net.HttpURLConnection)>	sig:$r2 = staticinvoke <java.net.CookieHandler: java.net.CookieHandler getDefault()>()	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: void addCookiesAndTimeout(java.net.HttpURLConnection)>	sig:specialinvoke $r1.<java.net.CookieManager: void <init>()>()	timediff:0
I/com.newrelic.agent.android( 8306): Created random UUID: 7bfc8c7b-b77c-44ce-af9d-2d5f581e2292
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: void addCookiesAndTimeout(java.net.HttpURLConnection)>	sig:staticinvoke <java.net.CookieHandler: void setDefault(java.net.CookieHandler)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: void addCookiesAndTimeout(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: void addCookiesAndTimeout(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.mint.data.service.ConnectionUtil: void addCookiesAndTimeout(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://mobile.mint.com/testing.xevent?platform=ANDROID_TABLET&buildNumber=4.8.8.1&deviceName=SM-G9350&systemVersion=19&systemName=SM-G9350&deviceModel=SM-G9350&clientID=3ace0108121e3573&apiProtocol=3.0.0&clientVersion=4.8.8.1&clientType=Mint
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://mobile.mint.com/testing.xevent
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/com.newrelic.agent.android( 8306): Analytics Controller started.
D/dalvikvm( 8306): GC_CONCURRENT freed 246K, 30% free 3520K/5016K, paused 1ms+0ms, total 4ms
I/com.newrelic.agent.android( 8306): Measurement Engine initialized.
I/com.newrelic.agent.android( 8306): New Relic Agent v5.4.0
D/dalvikvm( 8306): GC_CONCURRENT freed 143K, 26% free 3761K/5016K, paused 2ms+1ms, total 5ms
I/dalvikvm( 8306): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8306): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8306): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8306): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm( 8306): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 8306): VFY: unable to resolve instance field 38470
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8306): GC_CONCURRENT freed 398K, 23% free 3874K/5016K, paused 1ms+3ms, total 10ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/Lifecycle( 8306): onActivityCreated: core.overview.RouterActivity
W/dalvikvm( 8306): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8306): VFY: unable to resolve instance field 2423
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8306): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8306): VFY: unable to resolve instance field 2423
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8306): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm( 8306): VFY: unable to resolve instance field 38747
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0007
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
D/dalvikvm( 8306): GC_CONCURRENT freed 362K, 23% free 3895K/5016K, paused 1ms+1ms, total 4ms
I/System.out( 8306): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/com.newrelic.agent.android( 8306): Connecting, saved state is not available: DataToken{accountId=0, agentId=0}
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/Authorization( 8306): getAuthorizationState
W/dalvikvm( 8306): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8306): VFY: unable to resolve instance field 2423
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 8306): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8306): VFY: unable to resolve instance field 2423
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8306): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8306): VFY: unable to resolve instance field 2423
D/dalvikvm( 8306): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:8
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 8306
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:4
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 8306): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8306): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8306): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=81e87847-d025-45ce-a619-7ff81df26ee8
I/System.out( 8306): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=81e87847-d025-45ce-a619-7ff81df26ee8
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
V/WebViewChromium( 8306): Binding Chromium to the background looper Looper (main, tid 1) {4a7abfec}
I/chromium( 8306): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 8306): Initializing chromium process, renderers=0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:7
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
D/dalvikvm( 8306): GC_CONCURRENT freed 390K, 20% free 4017K/5016K, paused 1ms+3ms, total 13ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:11
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:1
W/chromium( 8306): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
D/dalvikvm( 8306): GC_CONCURRENT freed 371K, 20% free 4029K/5016K, paused 1ms+1ms, total 4ms
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:164
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:$r18 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:169
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://mobile.mint.com/testing.xevent
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/libEGL  ( 8306): loaded /system/lib/egl/libEGL_adreno.so
D/dalvikvm( 8306): GC_CONCURRENT freed 450K, 19% free 4090K/5016K, paused 2ms+1ms, total 22ms
D/        ( 8306): HostConnection::get() New Host Connection established 0xb8eb7e70, tid 8306
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 17ms
D/libEGL  ( 8306): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 8306): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:100
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:$r14 = virtualinvoke $r16.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Type")	timediff:100
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://mobile.mint.com/testing.xevent?platform=ANDROID_TABLET&buildNumber=4.8.8.1&deviceName=SM-G9350&systemVersion=19&systemName=SM-G9350&deviceModel=SM-G9350&clientID=3ace0108121e3573&apiProtocol=3.0.0&clientVersion=4.8.8.1&clientType=Mint;%;true;%;Not found;%;no-cache, no-store, must-revalidate,;%;0;%;Not found;%;incap_ses_133_1064157=a9OiGWd5nRuIhw8dHYPYAY6Q0VoAAAAAlqO+7mMCQPijtdAglR7LlQ==; path=/; Domain=.mint.com
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
W/com.newrelic.agent.android( 8306): setStatusCode(...) called on TransactionState in COMPLETE state
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:$r20 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:3
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;1;%;<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>;%;$r20 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://mobile.mint.com/testing.xevent?platform=ANDROID_TABLET&buildNumber=4.8.8.1&deviceName=SM-G9350&systemVersion=19&systemName=SM-G9350&deviceModel=SM-G9350&clientID=3ace0108121e3573&apiProtocol=3.0.0&clientVersion=4.8.8.1&clientType=Mint;%;true;%;Not found;%;no-cache, no-store, must-revalidate,;%;0;%;Not found;%;incap_ses_133_1064157=a9OiGWd5nRuIhw8dHYPYAY6Q0VoAAAAAlqO+7mMCQPijtdAglR7LlQ==; path=/; Domain=.mint.com
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:$i0 = virtualinvoke $r16.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
D/dalvikvm( 8306): GC_CONCURRENT freed 369K, 17% free 4165K/5016K, paused 1ms+1ms, total 9ms
D/dalvikvm( 8306): GC_FOR_ALLOC freed 49K, 17% free 4186K/5016K, paused 3ms, total 3ms
I/dalvikvm-heap( 8306): Grow heap (frag case) to 4.752MB for 635808-byte allocation
D/dalvikvm( 8306): GC_FOR_ALLOC freed 0K, 15% free 4807K/5640K, paused 3ms, total 3ms
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:194
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=81e87847-d025-45ce-a619-7ff81df26ee8;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:195
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;3;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=81e87847-d025-45ce-a619-7ff81df26ee8;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8306): GC_CONCURRENT freed 162K, 14% free 4894K/5640K, paused 1ms+2ms, total 22ms
D/yeshen  ( 6059): launcher onstop
E/ActivityThread( 8306): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/AndroidRuntime( 8306): Shutting down VM
W/dalvikvm( 8306): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.mint.data.service.api.APIHttpService: com.mint.data.dto.ResponseDto performRequest(java.lang.String,java.util.Map,java.lang.String,com.mint.data.service.api.BaseParser,boolean)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8306): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/dalvikvm( 8306): GC_FOR_ALLOC freed 348K, 14% free 4869K/5640K, paused 21ms, total 21ms
W/c.t.tdm.TrustDefenderMo( 8306): Scan  already in progress or cancel requested, aborting
I/com.newrelic.agent.android( 8306): Saving configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.3, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/dalvikvm( 8306): VMStack.getTraceBuf: threadObj 0x950dcda8 not active
D/dalvikvm( 8306): GC_CONCURRENT freed 361K, 9% free 5184K/5640K, paused 3ms+1ms, total 12ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 8306): GC_FOR_ALLOC freed 254K, 12% free 5299K/5984K, paused 3ms, total 3ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 15ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 16ms
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=ebe9ee6e525046a892922de09709c2f7&osVersion=4.4.2
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 8306): GC_CONCURRENT freed 930K, 17% free 5147K/6140K, paused 3ms+0ms, total 10ms
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 8306): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out( 8306): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings?instance=c7487eb974cfb2961a854a8e46105bb05265534b&source=1&build_version=408080&icon_hash=d39f3079f3d6ca915f70ba90218e4d76fc267c1f&display_version=4.8.8.1
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8306): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings?instance=c7487eb974cfb2961a854a8e46105bb05265534b&source=1&build_version=408080&icon_hash=d39f3079f3d6ca915f70ba90218e4d76fc267c1f&display_version=4.8.8.1
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:3
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings?instance=c7487eb974cfb2961a854a8e46105bb05265534b&source=1&build_version=408080&icon_hash=d39f3079f3d6ca915f70ba90218e4d76fc267c1f&display_version=4.8.8.1
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:141
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:169
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;4;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;5;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/Request ( 8306): Warning: Sessionless Request needs token but missing either application ID or client token.
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8306): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330/activities?format=json&sdk=android
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
D/dalvikvm( 8306): GC_CONCURRENT freed 719K, 16% free 5198K/6140K, paused 4ms+1ms, total 14ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:8
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330/activities?format=json&sdk=android
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330/activities
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
I/System.out( 8306): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r14 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:21
I/System.out( 8306): body:<com.facebook.Request: void processRequest(com.facebook.RequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream)>	sig:$r11 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330/activities
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:477
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:486
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;6;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
D/dalvikvm( 8306): GC_CONCURRENT freed 759K, 15% free 5225K/6140K, paused 1ms+1ms, total 6ms
D/dalvikvm( 8306): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:16
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;7;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:267
D/dalvikvm( 8306): GC_FOR_ALLOC freed 267K, 13% free 5387K/6140K, paused 3ms, total 3ms
D/dalvikvm( 8306): GC_FOR_ALLOC freed 95K, 13% free 5428K/6240K, paused 5ms, total 5ms
D/dalvikvm( 8306): GC_FOR_ALLOC freed 67K, 14% free 5459K/6328K, paused 3ms, total 3ms
I/dalvikvm-heap( 8306): Grow heap (frag case) to 5.514MB for 130822-byte allocation
D/dalvikvm( 8306): GC_FOR_ALLOC freed 85K, 15% free 5501K/6456K, paused 8ms, total 8ms
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:189
I/System.out( 8306): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:189
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;8;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330/activities?format=json&sdk=android;%;true;%;16;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
W/com.newrelic.agent.android( 8306): setBytesReceived(...) called on TransactionState in COMPLETE state
W/com.newrelic.agent.android( 8306): setStatusCode(...) called on TransactionState in COMPLETE state
I/System.out( 8306): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;9;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330/activities?format=json&sdk=android;%;true;%;16;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:439
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:450
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
D/dalvikvm( 8306): GC_CONCURRENT freed 898K, 17% free 5364K/6456K, paused 1ms+0ms, total 4ms
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:5
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getHeaderFieldInt(java.lang.String,int)>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String,int)>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0)	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;10;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings?instance=c7487eb974cfb2961a854a8e46105bb05265534b&source=1&build_version=408080&icon_hash=d39f3079f3d6ca915f70ba90218e4d76fc267c1f&display_version=4.8.8.1;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>	sig:$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:1
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8306): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8306): URLConn;%;11;%;<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>;%;$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings?instance=c7487eb974cfb2961a854a8e46105bb05265534b&source=1&build_version=408080&icon_hash=d39f3079f3d6ca915f70ba90218e4d76fc267c1f&display_version=4.8.8.1;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8306): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://mobile.mint.com/testing.xevent
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330/activities
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.mint/settings
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:271
I/com.newrelic.agent.android( 8306): Crash 12ff0e4e-d41e-05ad-6b77-5393f60eec30 successfully submitted.
I/System.out( 8306): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/WearableService(  668): Wearable Services stopping
D/dalvikvm( 8306): GC_CONCURRENT freed 911K, 20% free 5168K/6456K, paused 1ms+0ms, total 5ms
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:279
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:281
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8306): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:12
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8306): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8306): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:76
I/System.out( 8306): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
D/dalvikvm( 8306): GC_CONCURRENT freed 579K, 19% free 5238K/6456K, paused 2ms+0ms, total 6ms
I/Process (  470): Sending signal. PID: 8306 SIG: 9
E/AndroidRuntime( 8306): FATAL EXCEPTION: main
E/AndroidRuntime( 8306): Process: com.mint, PID: 8306
E/AndroidRuntime( 8306): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8306): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8306): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8306): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8306): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8306): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8306): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8306): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8306): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8306): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8306): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8306): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8306): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8306): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8306): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8306): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8306): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8306): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8306): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8306): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 8306) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=8391 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 8391): ignoring registerObject request in thread=1
I/dalvikvm( 8391): ignoring registerObject request in thread=1
D/dalvikvm( 8391): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8391): GC_CONCURRENT freed 154K, 7% free 3141K/3360K, paused 8ms+2ms, total 12ms
I/CrashlyticsCore( 8391): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8391): GC_CONCURRENT freed 229K, 8% free 3423K/3716K, paused 1ms+3ms, total 7ms
D/dalvikvm( 8391): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8391): GC_CONCURRENT freed 229K, 8% free 3629K/3928K, paused 2ms+1ms, total 6ms
I/dalvikvm( 8391): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8391): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8391): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 8391): GC_CONCURRENT freed 194K, 7% free 3821K/4092K, paused 1ms+0ms, total 5ms
I/dalvikvm( 8391): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8391): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8391): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8391): GC_CONCURRENT freed 157K, 6% free 4159K/4396K, paused 1ms+2ms, total 9ms
D/dalvikvm( 8391): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 8391): GC_CONCURRENT freed 218K, 7% free 4338K/4652K, paused 1ms+0ms, total 5ms
D/dalvikvm( 8391): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8391): VFY: unable to resolve instance field 38765
D/dalvikvm( 8391): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 8391): <init> androidContext: 'com.mint.app.MintApp@4a7b18e4' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 8391): GC_CONCURRENT freed 254K, 7% free 4578K/4912K, paused 2ms+5ms, total 10ms
W/dalvikvm( 8391): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm( 8391): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8391): WAIT_FOR_CONCURRENT_GC blocked 3ms
W/dalvikvm( 8391): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8391): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8391): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8391): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8391): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8391): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8391): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8391): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8391): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8391): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8391): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8391): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8391): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8391): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8391): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8391): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8391): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:1
I/System.out( 8391): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 8391): getAuthorizationState
D/dalvikvm( 8391): WAIT_FOR_CONCURRENT_GC blocked 26ms
I/com.newrelic.agent.android( 8391): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8391): Application state monitor has started
I/com.newrelic.agent.android( 8391): Analytics Controller started.
I/com.newrelic.agent.android( 8391): Measurement Engine initialized.
D/dalvikvm( 8391): GC_CONCURRENT freed 1705K, 35% free 3379K/5160K, paused 4ms+1ms, total 12ms
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 8391): New Relic Agent v5.4.0
I/System.out( 8391): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:2
I/System.out( 8391): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 8391): GC_FOR_ALLOC freed 92K, 34% free 3424K/5160K, paused 3ms, total 4ms
I/dalvikvm-heap( 8391): Grow heap (frag case) to 3.479MB for 79888-byte allocation
D/dalvikvm( 8391): GC_FOR_ALLOC freed 1K, 34% free 3501K/5240K, paused 4ms, total 4ms
D/dalvikvm( 8391): GC_FOR_ALLOC freed 12K, 33% free 3551K/5240K, paused 7ms, total 7ms
I/dalvikvm-heap( 8391): Grow heap (frag case) to 3.603MB for 79888-byte allocation
D/dalvikvm( 8391): GC_FOR_ALLOC freed <1K, 32% free 3629K/5320K, paused 5ms, total 5ms
I/com.newrelic.agent.android( 8391): Harvester: connected
I/com.newrelic.agent.android( 8391): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8391): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8391): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8391): Harvester: Sending 0 analytics events.
D/dalvikvm( 8391): GC_CONCURRENT freed 240K, 30% free 3773K/5320K, paused 2ms+1ms, total 7ms
D/dalvikvm( 8391): GC_CONCURRENT freed 205K, 26% free 3980K/5320K, paused 3ms+2ms, total 11ms
I/dalvikvm( 8391): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8391): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8391): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8391): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 8391): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8391): VFY: unable to resolve instance field 2423
D/dalvikvm( 8391): VFY: replacing opcode 0x54 at 0x0000
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:112
W/dalvikvm( 8391): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8391): VFY: unable to resolve instance field 2423
D/dalvikvm( 8391): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8391): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8391): VFY: unable to resolve instance field 2423
D/dalvikvm( 8391): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 8391): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8391): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8391): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=cc6922ce-afac-4d7a-9565-e57a9d07b077
I/System.out( 8391): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
W/dalvikvm( 8391): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8391): VFY: unable to resolve instance field 2423
D/dalvikvm( 8391): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8391): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8391): VFY: unable to resolve instance field 2423
D/dalvikvm( 8391): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8391): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8391): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8391): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=cc6922ce-afac-4d7a-9565-e57a9d07b077
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:2
D/dalvikvm( 8391): GC_CONCURRENT freed 395K, 24% free 4087K/5320K, paused 2ms+10ms, total 19ms
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:1
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
D/AndroidRuntime( 8391): Shutting down VM
W/dalvikvm( 8391): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8391): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8391): GC_CONCURRENT freed 399K, 24% free 4071K/5320K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8391): GC_CONCURRENT freed 129K, 19% free 4326K/5320K, paused 1ms+0ms, total 4ms
D/dalvikvm( 8391): GC_FOR_ALLOC freed 103K, 19% free 4334K/5320K, paused 3ms, total 3ms
I/dalvikvm-heap( 8391): Grow heap (frag case) to 4.346MB for 58146-byte allocation
D/dalvikvm( 8391): GC_FOR_ALLOC freed <1K, 19% free 4391K/5380K, paused 5ms, total 5ms
D/dalvikvm( 8391): GC_FOR_ALLOC freed 104K, 20% free 4357K/5380K, paused 3ms, total 3ms
I/dalvikvm-heap( 8391): Grow heap (frag case) to 4.397MB for 87216-byte allocation
D/dalvikvm( 8391): GC_FOR_ALLOC freed 56K, 20% free 4386K/5468K, paused 3ms, total 3ms
D/dalvikvm( 8391): GC_FOR_ALLOC freed 10K, 20% free 4388K/5468K, paused 3ms, total 3ms
I/dalvikvm-heap( 8391): Grow heap (frag case) to 4.426MB for 86126-byte allocation
D/dalvikvm( 8391): GC_FOR_ALLOC freed 221K, 24% free 4250K/5556K, paused 3ms, total 3ms
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8391): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:129
I/System.out( 8391): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=cc6922ce-afac-4d7a-9565-e57a9d07b077;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8391): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:130
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8391): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8391): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=cc6922ce-afac-4d7a-9565-e57a9d07b077;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8391): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8391): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:1
D/dalvikvm( 6059): GC_FOR_ALLOC freed 4922K, 5% free 107927K/113436K, paused 20ms, total 20ms
D/dalvikvm( 6059): GC_FOR_ALLOC freed 485K, 5% free 110566K/115308K, paused 13ms, total 13ms
D/dalvikvm( 6059): GC_FOR_ALLOC freed 253K, 4% free 113415K/118116K, paused 13ms, total 13ms
D/dalvikvm( 8391): GC_CONCURRENT freed 388K, 23% free 4290K/5556K, paused 42ms+0ms, total 45ms
D/dalvikvm( 8391): GC_CONCURRENT freed 378K, 23% free 4296K/5556K, paused 1ms+1ms, total 4ms
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:264
D/dalvikvm( 8391): GC_CONCURRENT freed 212K, 20% free 4496K/5556K, paused 1ms+1ms, total 6ms
D/dalvikvm( 8391): GC_FOR_ALLOC freed 142K, 19% free 4522K/5556K, paused 4ms, total 4ms
I/dalvikvm-heap( 8391): Grow heap (frag case) to 4.557MB for 86126-byte allocation
D/dalvikvm( 8391): GC_FOR_ALLOC freed <1K, 19% free 4606K/5644K, paused 4ms, total 4ms
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:345
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:375
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8391): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8391): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 8391): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:291
I/com.newrelic.agent.android( 8391): Crash 5dcbfc4a-fa93-dabd-9dfd-b5472c281365 successfully submitted.
I/System.out( 8391): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8391): GC_CONCURRENT freed 781K, 25% free 4286K/5644K, paused 2ms+0ms, total 4ms
D/dalvikvm( 8391): GC_CONCURRENT freed 385K, 25% free 4285K/5644K, paused 2ms+1ms, total 5ms
I/Process (  470): Sending signal. PID: 8391 SIG: 9
E/AndroidRuntime( 8391): FATAL EXCEPTION: main
E/AndroidRuntime( 8391): Process: com.mint, PID: 8391
E/AndroidRuntime( 8391): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8391): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8391): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8391): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8391): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8391): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8391): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8391): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8391): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8391): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8391): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8391): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8391): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8391): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8391): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8391): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8391): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8391): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8391): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8391): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 8391) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=8442 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
D/dalvikvm(  746): GC_CONCURRENT freed 2063K, 22% free 9187K/11636K, paused 1ms+2ms, total 18ms
I/dalvikvm( 8442): ignoring registerObject request in thread=1
I/dalvikvm( 8442): ignoring registerObject request in thread=1
D/dalvikvm( 8442): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8442): GC_CONCURRENT freed 157K, 7% free 3074K/3296K, paused 3ms+0ms, total 6ms
I/CrashlyticsCore( 8442): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8442): GC_CONCURRENT freed 217K, 8% free 3262K/3544K, paused 1ms+0ms, total 3ms
D/dalvikvm( 8442): GC_CONCURRENT freed 216K, 8% free 3553K/3836K, paused 2ms+0ms, total 9ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/dalvikvm( 8442): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8442): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8442): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 8442): GC_CONCURRENT freed 224K, 8% free 3834K/4128K, paused 2ms+1ms, total 7ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/dalvikvm( 8442): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8442): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8442): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8442): GC_CONCURRENT freed 189K, 6% free 4145K/4408K, paused 1ms+0ms, total 8ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 8442): GC_CONCURRENT freed 294K, 9% free 4341K/4720K, paused 2ms+1ms, total 8ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8442): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8442): VFY: unable to resolve instance field 38765
D/dalvikvm( 8442): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 8442): <init> androidContext: 'com.mint.app.MintApp@4a7b2008' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 8442): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8442): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8442): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8442): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8442): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8442): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8442): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8442): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8442): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8442): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8442): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8442): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8442): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8442): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8442): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8442): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8442): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8442): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8442): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 8442): GC_CONCURRENT freed 1521K, 33% free 3279K/4876K, paused 2ms+1ms, total 8ms
I/Authorization( 8442): getAuthorizationState
I/com.newrelic.agent.android( 8442): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8442): Application state monitor has started
I/com.newrelic.agent.android( 8442): Analytics Controller started.
D/dalvikvm( 8442): GC_CONCURRENT freed 299K, 32% free 3363K/4876K, paused 2ms+1ms, total 4ms
I/com.newrelic.agent.android( 8442): Measurement Engine initialized.
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/com.newrelic.agent.android( 8442): New Relic Agent v5.4.0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8442): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 8442): GC_FOR_ALLOC freed 123K, 30% free 3424K/4876K, paused 4ms, total 4ms
I/dalvikvm-heap( 8442): Grow heap (frag case) to 3.479MB for 79888-byte allocation
D/dalvikvm( 8442): GC_FOR_ALLOC freed 1K, 30% free 3501K/4956K, paused 4ms, total 4ms
D/dalvikvm( 8442): GC_FOR_ALLOC freed 51K, 30% free 3515K/4956K, paused 5ms, total 5ms
I/dalvikvm-heap( 8442): Grow heap (frag case) to 3.567MB for 79888-byte allocation
D/dalvikvm( 8442): GC_FOR_ALLOC freed <1K, 29% free 3593K/5036K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 8442): Harvester: connected
I/com.newrelic.agent.android( 8442): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8442): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8442): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8442): Harvester: Sending 0 analytics events.
D/dalvikvm( 8442): GC_CONCURRENT freed 203K, 23% free 3901K/5036K, paused 2ms+1ms, total 7ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm( 8442): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8442): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8442): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8442): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 8442): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8442): VFY: unable to resolve instance field 2423
D/dalvikvm( 8442): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 8442): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8442): VFY: unable to resolve instance field 2423
D/dalvikvm( 8442): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8442): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8442): VFY: unable to resolve instance field 2423
D/dalvikvm( 8442): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8442): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8442): VFY: unable to resolve instance field 2423
D/dalvikvm( 8442): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8442): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8442): VFY: unable to resolve instance field 2423
D/dalvikvm( 8442): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8442): GC_CONCURRENT freed 362K, 21% free 3984K/5036K, paused 1ms+1ms, total 12ms
D/AndroidRuntime( 8442): Shutting down VM
W/dalvikvm( 8442): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8442): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8442): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8442): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out( 8442): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7004a69d-a586-45b4-a169-1e8a92912da4
I/System.out( 8442): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8442): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8442): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8442): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7004a69d-a586-45b4-a169-1e8a92912da4
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:130
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:1
D/dalvikvm( 8442): GC_CONCURRENT freed 228K, 16% free 4268K/5036K, paused 2ms+4ms, total 15ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8442): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8442): GC_FOR_ALLOC freed 154K, 16% free 4273K/5036K, paused 4ms, total 4ms
I/dalvikvm-heap( 8442): Grow heap (frag case) to 4.287MB for 58146-byte allocation
D/dalvikvm( 8442): GC_FOR_ALLOC freed 37K, 16% free 4292K/5096K, paused 4ms, total 4ms
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:18
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8442): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8442): GC_FOR_ALLOC freed 255K, 16% free 4311K/5096K, paused 7ms, total 7ms
I/dalvikvm-heap( 8442): Grow heap (frag case) to 4.352MB for 87216-byte allocation
D/dalvikvm( 8442): GC_FOR_ALLOC freed <1K, 16% free 4396K/5184K, paused 5ms, total 5ms
D/dalvikvm( 8442): GC_FOR_ALLOC freed 150K, 16% free 4371K/5184K, paused 4ms, total 4ms
I/dalvikvm-heap( 8442): Grow heap (frag case) to 4.402MB for 79050-byte allocation
D/dalvikvm( 8442): GC_FOR_ALLOC freed <1K, 16% free 4447K/5264K, paused 4ms, total 4ms
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:1
I/System.out( 8442): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:152
I/System.out( 8442): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7004a69d-a586-45b4-a169-1e8a92912da4;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8442): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:157
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:1
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8442): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8442): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7004a69d-a586-45b4-a169-1e8a92912da4;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8442): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8442): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8442): GC_CONCURRENT freed 655K, 19% free 4268K/5264K, paused 0ms+1ms, total 3ms
D/dalvikvm( 8442): GC_CONCURRENT freed 372K, 19% free 4279K/5264K, paused 1ms+0ms, total 4ms
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:226
D/dalvikvm( 8442): GC_CONCURRENT freed 298K, 17% free 4383K/5264K, paused 2ms+0ms, total 16ms
D/dalvikvm( 8442): GC_FOR_ALLOC freed 254K, 15% free 4497K/5264K, paused 2ms, total 2ms
I/dalvikvm-heap( 8442): Grow heap (frag case) to 4.525MB for 79050-byte allocation
D/dalvikvm( 8442): GC_FOR_ALLOC freed <1K, 15% free 4574K/5344K, paused 4ms, total 4ms
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:292
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:312
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8442): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8442): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:81
I/System.out( 8442): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:81
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:273
I/com.newrelic.agent.android( 8442): Crash f38f4879-4306-99c6-71c9-0195cde531de successfully submitted.
I/System.out( 8442): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8442): GC_CONCURRENT freed 747K, 20% free 4277K/5344K, paused 2ms+1ms, total 5ms
D/dalvikvm( 8442): GC_CONCURRENT freed 385K, 20% free 4276K/5344K, paused 1ms+0ms, total 4ms
I/Process (  470): Sending signal. PID: 8442 SIG: 9
E/AndroidRuntime( 8442): FATAL EXCEPTION: main
E/AndroidRuntime( 8442): Process: com.mint, PID: 8442
E/AndroidRuntime( 8442): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8442): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8442): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8442): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8442): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8442): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8442): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8442): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8442): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8442): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8442): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8442): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8442): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8442): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8442): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8442): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8442): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8442): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8442): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8442): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 8442) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/ActivityManager(  470): Force removing ActivityRecord{4ae735f8 u0 com.mint/.core.overview.LoginActivity$XLarge t49}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae76aa8 attribute=android.view.inputmethod.EditorInfo@4af97fa0, token = android.os.BinderProxy@4ac7d000
E/FastMixer(  168): did not receive expected priority boost
W/Launcher( 6059): No global search activity found.
W/Launcher( 6059): No global search activity found.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=8497 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 8497): ignoring registerObject request in thread=1
I/dalvikvm( 8497): ignoring registerObject request in thread=1
D/dalvikvm( 8497): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8497): GC_CONCURRENT freed 163K, 7% free 3154K/3380K, paused 1ms+4ms, total 7ms
I/CrashlyticsCore( 8497): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8497): GC_CONCURRENT freed 251K, 9% free 3346K/3664K, paused 1ms+2ms, total 6ms
D/dalvikvm( 8497): GC_CONCURRENT freed 159K, 7% free 3571K/3800K, paused 2ms+1ms, total 5ms
D/dalvikvm( 8497): GC_CONCURRENT freed 212K, 8% free 3828K/4124K, paused 2ms+0ms, total 9ms
D/dalvikvm( 8497): GC_CONCURRENT freed 190K, 7% free 4138K/4404K, paused 1ms+0ms, total 7ms
D/dalvikvm( 8497): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8497): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 8497): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8497): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8497): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 8497): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8497): VFY: unable to resolve instance field 38765
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8497): GC_CONCURRENT freed 236K, 7% free 4294K/4612K, paused 2ms+0ms, total 6ms
I/dalvikvm( 8497): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
I/Authorization( 8497): <init> androidContext: 'com.mint.app.MintApp@4a7b27e8' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 8497): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8497): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8497): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8497): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8497): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8497): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8497): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8497): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8497): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8497): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8497): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8497): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8497): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8497): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8497): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8497): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8497): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/dalvikvm( 8497): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8497): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 8497): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8497): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8497): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8497): GC_CONCURRENT freed 261K, 7% free 4529K/4868K, paused 6ms+2ms, total 15ms
D/dalvikvm( 8497): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 8497): WAIT_FOR_CONCURRENT_GC blocked 10ms
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:9
I/System.out( 8497): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 8497): getAuthorizationState
I/com.newrelic.agent.android( 8497): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8497): Application state monitor has started
D/dalvikvm( 8497): GC_CONCURRENT freed 400K, 10% free 4573K/5048K, paused 2ms+1ms, total 5ms
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/com.newrelic.agent.android( 8497): Analytics Controller started.
I/com.newrelic.agent.android( 8497): Measurement Engine initialized.
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:5
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:1
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8497): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 8497): New Relic Agent v5.4.0
D/dalvikvm( 8497): GC_FOR_ALLOC freed 1379K, 32% free 3551K/5168K, paused 10ms, total 10ms
I/dalvikvm-heap( 8497): Grow heap (frag case) to 3.602MB for 79888-byte allocation
D/dalvikvm( 8497): GC_FOR_ALLOC freed <1K, 31% free 3628K/5248K, paused 5ms, total 5ms
I/com.newrelic.agent.android( 8497): Harvester: connected
I/com.newrelic.agent.android( 8497): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8497): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8497): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8497): Harvester: Sending 0 analytics events.
D/dalvikvm( 8497): GC_FOR_ALLOC freed 234K, 31% free 3662K/5248K, paused 3ms, total 3ms
D/dalvikvm( 8497): GC_CONCURRENT freed 173K, 26% free 3896K/5248K, paused 2ms+2ms, total 12ms
I/dalvikvm( 8497): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8497): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8497): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8497): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm( 8497): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 8497): VFY: unable to resolve instance field 38470
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0005
D/Lifecycle( 8497): onActivityCreated: core.overview.RouterActivity
I/System.out( 8497): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 8497): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8497): VFY: unable to resolve instance field 2423
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8497): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8497): VFY: unable to resolve instance field 2423
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 8497): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8497): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=78237b00-48a5-48e3-85fc-e2b711087190
D/dalvikvm( 8497): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm( 8497): VFY: unable to resolve instance field 38747
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0007
D/dalvikvm( 8497): GC_CONCURRENT freed 334K, 24% free 4032K/5248K, paused 6ms+2ms, total 19ms
I/System.out( 8497): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8497): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8497): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/Authorization( 8497): getAuthorizationState
W/dalvikvm( 8497): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8497): VFY: unable to resolve instance field 2423
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 8497): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8497): VFY: unable to resolve instance field 2423
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8497): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8497): VFY: unable to resolve instance field 2423
D/dalvikvm( 8497): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 8497): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:29
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:149
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 8497
V/WebViewChromium( 8497): Binding Chromium to the background looper Looper (main, tid 1) {4a7ad564}
I/chromium( 8497): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 8497): Initializing chromium process, renderers=0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:1
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=78237b00-48a5-48e3-85fc-e2b711087190
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out( 8497): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8497): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:1
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
D/dalvikvm( 8497): GC_CONCURRENT freed 291K, 22% free 4130K/5248K, paused 10ms+1ms, total 35ms
W/chromium( 8497): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
D/dalvikvm( 8497): GC_CONCURRENT freed 332K, 21% free 4182K/5248K, paused 2ms+1ms, total 6ms
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/libEGL  ( 8497): loaded /system/lib/egl/libEGL_adreno.so
D/        ( 8497): HostConnection::get() New Host Connection established 0xb8ecb350, tid 8497
D/libEGL  ( 8497): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 8497): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm( 8497): GC_FOR_ALLOC freed 304K, 21% free 4196K/5248K, paused 4ms, total 4ms
I/dalvikvm-heap( 8497): Grow heap (frag case) to 4.210MB for 56388-byte allocation
D/dalvikvm( 8497): GC_FOR_ALLOC freed <1K, 20% free 4251K/5304K, paused 9ms, total 9ms
D/dalvikvm( 8497): GC_FOR_ALLOC freed <1K, 20% free 4252K/5304K, paused 7ms, total 7ms
I/dalvikvm-heap( 8497): Grow heap (frag case) to 4.817MB for 635808-byte allocation
D/dalvikvm( 8497): GC_FOR_ALLOC freed 6K, 18% free 4866K/5928K, paused 4ms, total 4ms
D/dalvikvm( 8497): GC_CONCURRENT freed <1K, 18% free 4874K/5928K, paused 0ms+4ms, total 15ms
E/ActivityThread( 8497): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
W/c.t.tdm.TrustDefenderMo( 8497): Scan  already in progress or cancel requested, aborting
D/yeshen  ( 6059): launcher onstop
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=24e3fb8e29e94ed58d261584cf078654&osVersion=4.4.2
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:358
D/AndroidRuntime( 8497): Shutting down VM
W/dalvikvm( 8497): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=78237b00-48a5-48e3-85fc-e2b711087190;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:380
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 8497): GC_CONCURRENT freed 431K, 16% free 4994K/5928K, paused 7ms+0ms, total 16ms
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:19
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=78237b00-48a5-48e3-85fc-e2b711087190;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8497): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8497): GC_FOR_ALLOC freed 138K, 11% free 5332K/5928K, paused 3ms, total 4ms
D/dalvikvm( 8497): GC_FOR_ALLOC freed 141K, 12% free 5397K/6116K, paused 13ms, total 13ms
D/dalvikvm( 8497): GC_FOR_ALLOC freed 93K, 13% free 5441K/6244K, paused 7ms, total 7ms
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 8497): GC_CONCURRENT freed 910K, 16% free 5272K/6248K, paused 2ms+0ms, total 5ms
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:596
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:601
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:496
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:643
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:1
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
D/dalvikvm( 8497): GC_CONCURRENT freed 680K, 16% free 5276K/6248K, paused 2ms+1ms, total 5ms
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:6
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8497): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8497): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:111
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:111
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:242
D/dalvikvm( 8497): GC_FOR_ALLOC freed 360K, 12% free 5533K/6248K, paused 4ms, total 4ms
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8497): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8497): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8497): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:391
I/com.newrelic.agent.android( 8497): Crash 2782771d-38a8-cb2a-a3ea-775850d26eaa successfully submitted.
I/System.out( 8497): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8497): GC_CONCURRENT freed 990K, 19% free 5312K/6484K, paused 1ms+0ms, total 4ms
D/dalvikvm( 8497): GC_CONCURRENT freed 706K, 19% free 5302K/6484K, paused 3ms+0ms, total 6ms
I/Process (  470): Sending signal. PID: 8497 SIG: 9
E/AndroidRuntime( 8497): FATAL EXCEPTION: main
E/AndroidRuntime( 8497): Process: com.mint, PID: 8497
E/AndroidRuntime( 8497): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8497): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8497): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8497): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8497): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8497): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8497): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8497): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8497): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8497): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8497): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8497): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8497): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8497): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8497): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8497): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8497): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8497): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8497): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8497): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 8497) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=8577 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 8577): ignoring registerObject request in thread=1
I/dalvikvm( 8577): ignoring registerObject request in thread=1
D/dalvikvm( 8577): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8577): GC_CONCURRENT freed 174K, 7% free 3184K/3420K, paused 3ms+3ms, total 8ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/CrashlyticsCore( 8577): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8577): GC_CONCURRENT freed 257K, 9% free 3318K/3640K, paused 3ms+1ms, total 6ms
D/dalvikvm( 8577): GC_CONCURRENT freed 141K, 6% free 3574K/3792K, paused 3ms+0ms, total 5ms
D/dalvikvm( 8577): GC_CONCURRENT freed 158K, 6% free 3800K/4036K, paused 1ms+1ms, total 4ms
I/dalvikvm( 8577): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8577): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8577): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 8577): GC_CONCURRENT freed 248K, 8% free 4053K/4376K, paused 4ms+1ms, total 10ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 8577): GC_CONCURRENT freed 142K, 6% free 4296K/4524K, paused 2ms+0ms, total 6ms
I/dalvikvm( 8577): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8577): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8577): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8577): VFY: unable to resolve instance field 38765
D/dalvikvm( 8577): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 8577): <init> androidContext: 'com.mint.app.MintApp@4a7b2e5c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 8577): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8577): GC_CONCURRENT freed 322K, 9% free 4461K/4868K, paused 2ms+2ms, total 8ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 7ms
W/dalvikvm( 8577): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8577): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8577): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8577): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8577): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8577): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8577): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8577): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8577): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8577): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8577): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8577): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8577): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8577): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8577): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8577): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8577): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8577): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8577): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 8577): getAuthorizationState
I/com.newrelic.agent.android( 8577): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8577): Application state monitor has started
D/dalvikvm( 8577): GC_CONCURRENT freed 330K, 9% free 4586K/4996K, paused 1ms+5ms, total 9ms
I/com.newrelic.agent.android( 8577): Analytics Controller started.
I/com.newrelic.agent.android( 8577): Measurement Engine initialized.
I/com.newrelic.agent.android( 8577): New Relic Agent v5.4.0
I/com.newrelic.agent.android( 8577): Harvester: connected
I/com.newrelic.agent.android( 8577): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8577): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8577): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8577): Harvester: Sending 0 analytics events.
D/dalvikvm( 8577): GC_CONCURRENT freed 1532K, 31% free 3629K/5232K, paused 2ms+5ms, total 11ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8577): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:12
D/dalvikvm( 8577): GC_CONCURRENT freed 220K, 28% free 3809K/5232K, paused 1ms+2ms, total 10ms
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/dalvikvm( 8577): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8577): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8577): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8577): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 8577): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8577): VFY: unable to resolve instance field 2423
D/dalvikvm( 8577): VFY: replacing opcode 0x54 at 0x0000
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
W/dalvikvm( 8577): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8577): VFY: unable to resolve instance field 2423
D/dalvikvm( 8577): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8577): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8577): VFY: unable to resolve instance field 2423
D/dalvikvm( 8577): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 8577): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8577): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8577): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=fa41a521-6bb9-4100-a69b-baa239a3023a
I/System.out( 8577): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8577): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8577): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8577): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=fa41a521-6bb9-4100-a69b-baa239a3023a
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:6
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
D/dalvikvm( 8577): GC_CONCURRENT freed 363K, 26% free 3885K/5232K, paused 2ms+0ms, total 8ms
W/dalvikvm( 8577): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8577): VFY: unable to resolve instance field 2423
D/dalvikvm( 8577): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:1
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
D/dalvikvm( 8577): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
W/dalvikvm( 8577): VFY: unable to resolve instance field 2423
D/dalvikvm( 8577): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
D/AndroidRuntime( 8577): Shutting down VM
W/dalvikvm( 8577): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8577): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8577): GC_CONCURRENT freed 195K, 20% free 4201K/5232K, paused 2ms+1ms, total 12ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8577): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/dalvikvm-heap( 8577): Grow heap (frag case) to 4.279MB for 38766-byte allocation
D/dalvikvm( 8577): GC_FOR_ALLOC freed 131K, 21% free 4189K/5272K, paused 4ms, total 4ms
D/dalvikvm( 8577): GC_FOR_ALLOC freed 26K, 21% free 4189K/5272K, paused 4ms, total 4ms
I/dalvikvm-heap( 8577): Grow heap (frag case) to 4.206MB for 58146-byte allocation
D/dalvikvm( 8577): GC_FOR_ALLOC freed <1K, 21% free 4246K/5332K, paused 4ms, total 4ms
D/dalvikvm( 8577): GC_FOR_ALLOC freed 372K, 21% free 4216K/5332K, paused 3ms, total 3ms
I/dalvikvm-heap( 8577): Grow heap (frag case) to 4.259MB for 87216-byte allocation
D/dalvikvm( 8577): GC_FOR_ALLOC freed <1K, 21% free 4301K/5420K, paused 4ms, total 4ms
D/dalvikvm( 8577): GC_FOR_ALLOC freed 65K, 22% free 4246K/5420K, paused 4ms, total 4ms
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8577): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:252
I/System.out( 8577): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=fa41a521-6bb9-4100-a69b-baa239a3023a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8577): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:254
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:1
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8577): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8577): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=fa41a521-6bb9-4100-a69b-baa239a3023a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8577): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 8577): GC_CONCURRENT freed 466K, 24% free 4166K/5420K, paused 2ms+0ms, total 5ms
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8577): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8577): GC_CONCURRENT freed 372K, 23% free 4178K/5420K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8577): GC_CONCURRENT freed 388K, 24% free 4173K/5420K, paused 2ms+0ms, total 12ms
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:328
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:361
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8577): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:302
D/dalvikvm( 8577): GC_CONCURRENT freed 210K, 20% free 4346K/5420K, paused 1ms+0ms, total 4ms
D/dalvikvm( 8577): GC_FOR_ALLOC freed 1K, 20% free 4346K/5420K, paused 4ms, total 4ms
I/dalvikvm-heap( 8577): Grow heap (frag case) to 4.358MB for 58146-byte allocation
D/dalvikvm( 8577): GC_FOR_ALLOC freed <1K, 20% free 4403K/5480K, paused 4ms, total 4ms
D/dalvikvm( 8577): GC_FOR_ALLOC freed 44K, 21% free 4367K/5480K, paused 3ms, total 3ms
I/dalvikvm-heap( 8577): Grow heap (frag case) to 4.406MB for 87216-byte allocation
D/dalvikvm( 8577): GC_FOR_ALLOC freed 56K, 22% free 4395K/5568K, paused 3ms, total 3ms
I/System.out( 8577): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:273
I/com.newrelic.agent.android( 8577): Crash 2b42fe42-fcf2-ab5a-d3d6-a3afb9c8be07 successfully submitted.
I/System.out( 8577): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8577): GC_CONCURRENT freed 613K, 26% free 4174K/5568K, paused 2ms+0ms, total 5ms
D/dalvikvm( 8577): GC_CONCURRENT freed 385K, 26% free 4172K/5568K, paused 2ms+0ms, total 5ms
D/dalvikvm( 8577): GC_CONCURRENT freed 376K, 25% free 4180K/5568K, paused 1ms+0ms, total 4ms
I/System.out( 8577): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
E/AndroidRuntime( 8577): FATAL EXCEPTION: main
E/AndroidRuntime( 8577): Process: com.mint, PID: 8577
E/AndroidRuntime( 8577): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8577): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8577): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8577): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8577): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8577): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8577): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8577): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8577): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8577): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8577): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8577): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8577): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8577): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8577): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8577): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8577): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8577): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8577): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8577): 	at dalvik.system.NativeStart.main(Native Method)
I/Process (  470): Sending signal. PID: 8577 SIG: 9
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 8577) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=8626 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 8626): ignoring registerObject request in thread=1
I/dalvikvm( 8626): ignoring registerObject request in thread=1
D/dalvikvm( 8626): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8626): GC_CONCURRENT freed 168K, 7% free 3190K/3420K, paused 3ms+2ms, total 7ms
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8626): GC_CONCURRENT freed 256K, 9% free 3444K/3764K, paused 1ms+1ms, total 6ms
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/CrashlyticsCore( 8626): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8626): GC_CONCURRENT freed 192K, 7% free 3639K/3904K, paused 0ms+0ms, total 3ms
D/dalvikvm( 8626): GC_CONCURRENT freed 157K, 6% free 3866K/4100K, paused 2ms+0ms, total 5ms
D/dalvikvm( 8626): GC_CONCURRENT freed 146K, 6% free 4105K/4332K, paused 2ms+1ms, total 5ms
I/dalvikvm( 8626): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8626): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8626): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 8626): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8626): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8626): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8626): GC_CONCURRENT freed 259K, 8% free 4337K/4676K, paused 1ms+1ms, total 7ms
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8626): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8626): VFY: unable to resolve instance field 38765
D/dalvikvm( 8626): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8626): GC_CONCURRENT freed 330K, 9% free 4493K/4912K, paused 1ms+2ms, total 5ms
I/Authorization( 8626): <init> androidContext: 'com.mint.app.MintApp@4a7b3580' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8626): WAIT_FOR_CONCURRENT_GC blocked 1ms
W/dalvikvm( 8626): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8626): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8626): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8626): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8626): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8626): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8626): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8626): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8626): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8626): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8626): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8626): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8626): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8626): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8626): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8626): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8626): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8626): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8626): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 8626): getAuthorizationState
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 8626): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
D/dalvikvm( 8626): GC_CONCURRENT freed 1540K, 32% free 3408K/4996K, paused 1ms+0ms, total 6ms
I/System.out( 8626): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/com.newrelic.agent.android( 8626): Application state monitor has started
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8626): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 8626): GC_FOR_ALLOC freed 101K, 33% free 3353K/4996K, paused 8ms, total 8ms
I/dalvikvm-heap( 8626): Grow heap (frag case) to 3.371MB for 39950-byte allocation
D/dalvikvm( 8626): GC_FOR_ALLOC freed <1K, 33% free 3391K/5036K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 8626): Analytics Controller started.
D/dalvikvm( 8626): GC_FOR_ALLOC freed 9K, 33% free 3397K/5036K, paused 2ms, total 2ms
I/dalvikvm-heap( 8626): Grow heap (frag case) to 3.452MB for 79888-byte allocation
D/dalvikvm( 8626): GC_FOR_ALLOC freed <1K, 33% free 3474K/5116K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 8626): Measurement Engine initialized.
I/com.newrelic.agent.android( 8626): New Relic Agent v5.4.0
I/com.newrelic.agent.android( 8626): Harvester: connected
I/com.newrelic.agent.android( 8626): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8626): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8626): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8626): Harvester: Sending 0 analytics events.
D/dalvikvm( 8626): GC_FOR_ALLOC freed 185K, 32% free 3494K/5116K, paused 3ms, total 3ms
D/dalvikvm( 8626): GC_FOR_ALLOC freed 62K, 31% free 3546K/5116K, paused 4ms, total 4ms
I/dalvikvm-heap( 8626): Grow heap (frag case) to 3.597MB for 79888-byte allocation
D/dalvikvm( 8626): GC_FOR_ALLOC freed <1K, 31% free 3624K/5196K, paused 4ms, total 4ms
D/dalvikvm( 8626): GC_CONCURRENT freed 105K, 25% free 3903K/5196K, paused 3ms+1ms, total 6ms
I/dalvikvm( 8626): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8626): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8626): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8626): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 8626): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8626): VFY: unable to resolve instance field 2423
D/dalvikvm( 8626): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 8626): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8626): VFY: unable to resolve instance field 2423
D/dalvikvm( 8626): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8626): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8626): VFY: unable to resolve instance field 2423
D/dalvikvm( 8626): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8626): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8626): VFY: unable to resolve instance field 2423
D/dalvikvm( 8626): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8626): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8626): VFY: unable to resolve instance field 2423
D/dalvikvm( 8626): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8626): GC_CONCURRENT freed 364K, 24% free 3962K/5196K, paused 3ms+0ms, total 10ms
D/AndroidRuntime( 8626): Shutting down VM
W/dalvikvm( 8626): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8626): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8626): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8626): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8626): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=70496a46-6851-4fe6-92ca-9c8138b52ff1
D/dalvikvm( 8626): GC_CONCURRENT freed 108K, 19% free 4247K/5196K, paused 2ms+1ms, total 5ms
D/dalvikvm( 8626): GC_FOR_ALLOC freed 50K, 19% free 4235K/5196K, paused 5ms, total 5ms
I/dalvikvm-heap( 8626): Grow heap (frag case) to 4.250MB for 58146-byte allocation
D/dalvikvm( 8626): GC_FOR_ALLOC freed <1K, 19% free 4292K/5256K, paused 4ms, total 4ms
I/System.out( 8626): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:41
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8626): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8626): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8626): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=70496a46-6851-4fe6-92ca-9c8138b52ff1
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8626): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:149
D/dalvikvm( 8626): GC_FOR_ALLOC freed 126K, 19% free 4267K/5256K, paused 5ms, total 5ms
I/dalvikvm-heap( 8626): Grow heap (frag case) to 4.308MB for 87216-byte allocation
D/dalvikvm( 8626): GC_FOR_ALLOC freed 1K, 19% free 4351K/5344K, paused 4ms, total 4ms
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 8626): GC_FOR_ALLOC freed 92K, 20% free 4301K/5344K, paused 3ms, total 3ms
I/dalvikvm-heap( 8626): Grow heap (frag case) to 4.333MB for 77998-byte allocation
D/dalvikvm( 8626): GC_FOR_ALLOC freed 0K, 20% free 4378K/5424K, paused 4ms, total 4ms
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 8626): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8626): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8626): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 8626): GC_CONCURRENT freed 547K, 23% free 4217K/5424K, paused 1ms+0ms, total 5ms
D/dalvikvm( 8626): GC_CONCURRENT freed 342K, 22% free 4259K/5424K, paused 3ms+0ms, total 6ms
D/dalvikvm( 8626): GC_CONCURRENT freed 384K, 22% free 4259K/5424K, paused 2ms+1ms, total 5ms
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:244
D/dalvikvm( 8626): GC_CONCURRENT freed 214K, 18% free 4484K/5424K, paused 2ms+1ms, total 6ms
D/dalvikvm( 8626): GC_FOR_ALLOC freed 44K, 19% free 4447K/5424K, paused 4ms, total 4ms
I/dalvikvm-heap( 8626): Grow heap (frag case) to 4.485MB for 87216-byte allocation
D/dalvikvm( 8626): GC_FOR_ALLOC freed <1K, 18% free 4532K/5512K, paused 4ms, total 4ms
D/dalvikvm( 8626): GC_FOR_ALLOC freed 127K, 19% free 4475K/5512K, paused 4ms, total 4ms
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:279
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:292
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:6
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8626): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8626): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:273
I/com.newrelic.agent.android( 8626): Crash bb2d4bbb-ab93-9c12-5b3a-8249e66f42af successfully submitted.
I/System.out( 8626): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8626): GC_CONCURRENT freed 621K, 23% free 4271K/5512K, paused 2ms+0ms, total 6ms
D/dalvikvm( 8626): GC_CONCURRENT freed 385K, 23% free 4270K/5512K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8626): GC_CONCURRENT freed 383K, 23% free 4270K/5512K, paused 1ms+0ms, total 4ms
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8626): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8626): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/Process (  470): Sending signal. PID: 8626 SIG: 9
E/AndroidRuntime( 8626): FATAL EXCEPTION: main
E/AndroidRuntime( 8626): Process: com.mint, PID: 8626
E/AndroidRuntime( 8626): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8626): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8626): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8626): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8626): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8626): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8626): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8626): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8626): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8626): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8626): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8626): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8626): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8626): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8626): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8626): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8626): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8626): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8626): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8626): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/ActivityManager(  470): Process com.mint (pid 8626) has died.
W/ActivityManager(  470): Force removing ActivityRecord{4aff00bc u0 com.mint/.core.overview.LoginActivity$XLarge t50}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/FirebaseApp( 6059): Notifying background state change listeners.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1484290, downTime=1484290, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4afb4978 attribute=null, token = android.os.BinderProxy@4ac7d000
E/FastMixer(  168): did not receive expected priority boost
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/dalvikvm( 6059): GC_FOR_ALLOC freed 2898K, 4% free 117351K/121660K, paused 22ms, total 22ms
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
D/yeshen  ( 6059): launcher onpause
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=8687 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=air.com.playtika.slotomania/com.playtika.Slotomania bnds=[130,428][334,555] (has extras)} from pid 6059
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/dalvikvm( 8687): ignoring registerObject request in thread=1
I/dalvikvm( 8687): ignoring registerObject request in thread=1
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
D/dalvikvm( 8687): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8687): GC_CONCURRENT freed 261K, 10% free 3097K/3420K, paused 3ms+3ms, total 15ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/CrashlyticsCore( 8687): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8687): GC_CONCURRENT freed 184K, 8% free 3312K/3564K, paused 2ms+0ms, total 6ms
D/dalvikvm( 8687): GC_CONCURRENT freed 207K, 8% free 3615K/3888K, paused 2ms+1ms, total 10ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8687): GC_CONCURRENT freed 248K, 8% free 3871K/4188K, paused 4ms+1ms, total 9ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 31ms
I/dalvikvm( 8687): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8687): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8687): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 8687): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8687): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8687): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 16ms
D/dalvikvm( 8687): GC_CONCURRENT freed 175K, 6% free 4192K/4444K, paused 2ms+2ms, total 12ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 10ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 10ms
D/dalvikvm( 8687): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8687): VFY: unable to resolve instance field 38765
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8687): GC_FOR_ALLOC freed 260K, 8% free 4428K/4768K, paused 7ms, total 8ms
I/Authorization( 8687): <init> androidContext: 'com.mint.app.MintApp@4a7b3d5c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 8687): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8687): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8687): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8687): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8687): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8687): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8687): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8687): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8687): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8687): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8687): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8687): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8687): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8687): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8687): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8687): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8687): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8687): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 8687): GC_CONCURRENT freed 323K, 9% free 4540K/4944K, paused 2ms+10ms, total 14ms
I/Authorization( 8687): getAuthorizationState
I/com.newrelic.agent.android( 8687): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8687): Application state monitor has started
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 8687): Analytics Controller started.
I/com.newrelic.agent.android( 8687): Measurement Engine initialized.
I/System.out( 8687): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 8687): New Relic Agent v5.4.0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8687): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 8687): GC_CONCURRENT freed 1600K, 33% free 3443K/5116K, paused 1ms+0ms, total 17ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/dalvikvm-heap( 8687): Grow heap (frag case) to 3.498MB for 79888-byte allocation
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
D/dalvikvm( 8687): GC_FOR_ALLOC freed 40K, 33% free 3481K/5196K, paused 7ms, total 7ms
W/InputManager(  470): Input event injection from pid 8296 failed.
D/dalvikvm( 8687): GC_FOR_ALLOC freed 9K, 33% free 3512K/5196K, paused 4ms, total 4ms
I/dalvikvm-heap( 8687): Grow heap (frag case) to 3.564MB for 79888-byte allocation
D/dalvikvm( 8687): GC_FOR_ALLOC freed <1K, 32% free 3590K/5276K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 8687): Harvester: connected
I/com.newrelic.agent.android( 8687): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8687): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8687): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8687): Harvester: Sending 0 analytics events.
D/dalvikvm( 8687): GC_CONCURRENT freed 200K, 29% free 3773K/5276K, paused 2ms+1ms, total 7ms
D/dalvikvm( 8687): GC_CONCURRENT freed 240K, 26% free 3917K/5276K, paused 2ms+1ms, total 6ms
I/dalvikvm( 8687): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8687): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8687): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8687): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 8687): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
D/dalvikvm( 8687): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 8687): VFY: unable to resolve instance field 38470
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 8687): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8687): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out( 8687): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=70496a46-6851-4fe6-92ca-9c8138b52ff1
D/Lifecycle( 8687): onActivityCreated: core.overview.RouterActivity
W/dalvikvm( 8687): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8687): VFY: unable to resolve instance field 2423
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8687): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8687): VFY: unable to resolve instance field 2423
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8687): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm( 8687): VFY: unable to resolve instance field 38747
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0007
D/dalvikvm( 8687): GC_CONCURRENT freed 276K, 24% free 4028K/5276K, paused 2ms+0ms, total 4ms
I/Authorization( 8687): getAuthorizationState
W/dalvikvm( 8687): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8687): VFY: unable to resolve instance field 2423
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 8687): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8687): VFY: unable to resolve instance field 2423
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8687): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8687): VFY: unable to resolve instance field 2423
D/dalvikvm( 8687): VFY: replacing opcode 0x54 at 0x0002
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 8687
I/System.out( 8687): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:83
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=70496a46-6851-4fe6-92ca-9c8138b52ff1
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:195
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:1
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:7
D/dalvikvm( 8687): GC_CONCURRENT freed 294K, 22% free 4117K/5276K, paused 2ms+1ms, total 9ms
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:1
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 8687): GC_CONCURRENT freed 366K, 22% free 4139K/5276K, paused 2ms+0ms, total 6ms
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(  470): GC_EXPLICIT freed 7239K, 46% free 13342K/24284K, paused 1ms+18ms, total 115ms
V/WebViewChromium( 8687): Binding Chromium to the background looper Looper (main, tid 1) {4a7aeadc}
I/chromium( 8687): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 8687): Initializing chromium process, renderers=0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:26
I/System.out( 8687): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8687): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8687): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/chromium( 8687): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:188
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=70496a46-6851-4fe6-92ca-9c8138b52ff1;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:190
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
D/libEGL  ( 8687): loaded /system/lib/egl/libEGL_adreno.so
D/        ( 8687): HostConnection::get() New Host Connection established 0xb8edf780, tid 8687
D/libEGL  ( 8687): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 8687): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:38
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=70496a46-6851-4fe6-92ca-9c8138b52ff1;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8687): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8687): GC_CONCURRENT freed 419K, 20% free 4223K/5276K, paused 34ms+2ms, total 48ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 8687): GC_FOR_ALLOC freed 294K, 21% free 4215K/5276K, paused 7ms, total 7ms
I/dalvikvm-heap( 8687): Grow heap (frag case) to 4.229MB for 56388-byte allocation
D/dalvikvm( 8687): GC_FOR_ALLOC freed <1K, 20% free 4270K/5332K, paused 4ms, total 4ms
D/dalvikvm( 8687): GC_FOR_ALLOC freed 2K, 20% free 4268K/5332K, paused 9ms, total 9ms
I/dalvikvm-heap( 8687): Grow heap (frag case) to 4.833MB for 635808-byte allocation
D/dalvikvm( 8687): GC_FOR_ALLOC freed <1K, 18% free 4889K/5956K, paused 3ms, total 3ms
D/dalvikvm( 8687): GC_CONCURRENT freed 3K, 18% free 4886K/5956K, paused 2ms+1ms, total 9ms
D/AndroidRuntime( 8687): Shutting down VM
W/dalvikvm( 8687): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
E/ActivityThread( 8687): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
I/dalvikvm( 8687): VMStack.getTraceBuf: threadObj 0x95042118 not active
W/c.t.tdm.TrustDefenderMo( 8687): Scan  already in progress or cancel requested, aborting
D/dalvikvm( 8687): GC_CONCURRENT freed 343K, 13% free 5222K/5956K, paused 1ms+1ms, total 8ms
D/dalvikvm( 8687): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 8687): GC_FOR_ALLOC freed 121K, 13% free 5272K/6016K, paused 3ms, total 3ms
D/dalvikvm( 8687): GC_FOR_ALLOC freed 67K, 14% free 5303K/6104K, paused 3ms, total 3ms
I/dalvikvm-heap( 8687): Grow heap (frag case) to 5.362MB for 130822-byte allocation
D/dalvikvm( 8687): GC_FOR_ALLOC freed 85K, 15% free 5345K/6232K, paused 5ms, total 5ms
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=53aaccd426c74a878f0f28421e1d67cc&osVersion=4.4.2
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:354
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:358
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:2
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8687): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8687): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8687): GC_CONCURRENT freed 826K, 15% free 5342K/6232K, paused 2ms+1ms, total 11ms
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:475
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:548
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:230
D/dalvikvm( 8687): GC_FOR_ALLOC freed 728K, 13% free 5445K/6236K, paused 4ms, total 5ms
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:87
D/dalvikvm( 8687): GC_CONCURRENT freed 15K, 13% free 5533K/6324K, paused 2ms+2ms, total 9ms
D/dalvikvm( 8687): GC_FOR_ALLOC freed 146K, 15% free 5517K/6452K, paused 4ms, total 4ms
I/dalvikvm-heap( 8687): Grow heap (frag case) to 5.532MB for 89998-byte allocation
D/dalvikvm( 8687): GC_FOR_ALLOC freed 146K, 17% free 5458K/6540K, paused 4ms, total 4ms
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:91
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8687): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8687): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8687): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:284
I/com.newrelic.agent.android( 8687): Crash 3c0b5ab0-8bc0-a18c-f3b7-37816a17aea7 successfully submitted.
I/System.out( 8687): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8687): GC_CONCURRENT freed 937K, 20% free 5266K/6540K, paused 2ms+1ms, total 6ms
E/AndroidRuntime( 8687): FATAL EXCEPTION: main
E/AndroidRuntime( 8687): Process: com.mint, PID: 8687
E/AndroidRuntime( 8687): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8687): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8687): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8687): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8687): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8687): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8687): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8687): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8687): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8687): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8687): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8687): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8687): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8687): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8687): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8687): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8687): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8687): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8687): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8687): 	at dalvik.system.NativeStart.main(Native Method)
I/Process (  470): Sending signal. PID: 8687 SIG: 9
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 8687) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=8768 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 8768): ignoring registerObject request in thread=1
I/dalvikvm( 8768): ignoring registerObject request in thread=1
D/dalvikvm( 8768): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8768): GC_CONCURRENT freed 186K, 8% free 3172K/3420K, paused 3ms+7ms, total 12ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/CrashlyticsCore( 8768): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8768): GC_CONCURRENT freed 286K, 10% free 3343K/3696K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8768): GC_CONCURRENT freed 185K, 7% free 3666K/3920K, paused 1ms+0ms, total 7ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/dalvikvm( 8768): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8768): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8768): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 8768): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8768): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8768): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8768): GC_CONCURRENT freed 262K, 8% free 3906K/4240K, paused 3ms+2ms, total 14ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8768): GC_CONCURRENT freed 132K, 5% free 4159K/4376K, paused 2ms+1ms, total 6ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 32ms
D/dalvikvm( 8768): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8768): VFY: unable to resolve instance field 38765
D/dalvikvm( 8768): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8768): GC_CONCURRENT freed 231K, 6% free 4477K/4736K, paused 2ms+1ms, total 11ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/Authorization( 8768): <init> androidContext: 'com.mint.app.MintApp@4a7b43d0' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 6ms
W/dalvikvm( 8768): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 9ms
W/dalvikvm( 8768): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8768): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8768): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8768): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8768): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8768): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8768): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8768): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8768): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8768): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8768): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8768): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8768): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8768): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8768): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8768): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8768): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8768): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 8768): getAuthorizationState
D/dalvikvm( 8768): GC_CONCURRENT freed 446K, 11% free 4557K/5084K, paused 3ms+9ms, total 15ms
I/com.newrelic.agent.android( 8768): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8768): Application state monitor has started
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/com.newrelic.agent.android( 8768): Analytics Controller started.
I/com.newrelic.agent.android( 8768): Measurement Engine initialized.
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/com.newrelic.agent.android( 8768): New Relic Agent v5.4.0
I/System.out( 8768): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 8768): GC_CONCURRENT freed 1492K, 31% free 3536K/5104K, paused 2ms+1ms, total 7ms
D/dalvikvm( 8768): GC_FOR_ALLOC freed 100K, 32% free 3493K/5104K, paused 6ms, total 6ms
I/com.newrelic.agent.android( 8768): Harvester: connected
I/com.newrelic.agent.android( 8768): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8768): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8768): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8768): Harvester: Sending 0 analytics events.
D/dalvikvm( 8768): GC_FOR_ALLOC freed 110K, 31% free 3553K/5104K, paused 2ms, total 2ms
I/dalvikvm-heap( 8768): Grow heap (frag case) to 3.604MB for 79888-byte allocation
D/dalvikvm( 8768): GC_FOR_ALLOC freed <1K, 30% free 3630K/5184K, paused 4ms, total 4ms
D/dalvikvm( 8768): GC_CONCURRENT freed 110K, 25% free 3909K/5184K, paused 3ms+1ms, total 6ms
I/dalvikvm( 8768): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8768): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8768): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8768): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 8768): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8768): VFY: unable to resolve instance field 2423
D/dalvikvm( 8768): VFY: replacing opcode 0x54 at 0x0000
D/dalvikvm( 8768): GC_CONCURRENT freed 334K, 24% free 3959K/5184K, paused 2ms+1ms, total 5ms
W/dalvikvm( 8768): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8768): VFY: unable to resolve instance field 2423
D/dalvikvm( 8768): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8768): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8768): VFY: unable to resolve instance field 2423
D/dalvikvm( 8768): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8768): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8768): VFY: unable to resolve instance field 2423
D/dalvikvm( 8768): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8768): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8768): VFY: unable to resolve instance field 2423
D/dalvikvm( 8768): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 8768): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8768): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
D/AndroidRuntime( 8768): Shutting down VM
W/dalvikvm( 8768): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8768): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=3b10c15b-638f-49c6-812a-b43a728238f5
I/System.out( 8768): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:21
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8768): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8768): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8768): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=3b10c15b-638f-49c6-812a-b43a728238f5
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:169
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 8768): GC_CONCURRENT freed 231K, 19% free 4239K/5184K, paused 1ms+2ms, total 11ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8768): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
D/dalvikvm( 8768): GC_FOR_ALLOC freed 95K, 18% free 4253K/5184K, paused 5ms, total 5ms
I/dalvikvm-heap( 8768): Grow heap (frag case) to 4.267MB for 58146-byte allocation
D/dalvikvm( 8768): GC_FOR_ALLOC freed <1K, 18% free 4309K/5244K, paused 4ms, total 4ms
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:12
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8768): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8768): GC_FOR_ALLOC freed 205K, 19% free 4297K/5244K, paused 6ms, total 6ms
I/dalvikvm-heap( 8768): Grow heap (frag case) to 4.338MB for 87216-byte allocation
D/dalvikvm( 8768): GC_FOR_ALLOC freed 1K, 18% free 4381K/5332K, paused 4ms, total 4ms
D/dalvikvm( 8768): GC_FOR_ALLOC freed 72K, 19% free 4336K/5332K, paused 4ms, total 4ms
I/dalvikvm-heap( 8768): Grow heap (frag case) to 4.362MB for 72190-byte allocation
D/dalvikvm( 8768): GC_FOR_ALLOC freed <1K, 19% free 4406K/5404K, paused 3ms, total 3ms
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8768): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 8768): GC_CONCURRENT freed 657K, 22% free 4239K/5404K, paused 2ms+0ms, total 11ms
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:150
I/System.out( 8768): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=3b10c15b-638f-49c6-812a-b43a728238f5;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8768): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:152
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8768): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8768): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=3b10c15b-638f-49c6-812a-b43a728238f5;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8768): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8768): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8768): GC_CONCURRENT freed 358K, 22% free 4264K/5404K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8768): GC_CONCURRENT freed 378K, 21% free 4270K/5404K, paused 2ms+0ms, total 5ms
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:238
D/dalvikvm( 8768): GC_CONCURRENT freed 213K, 18% free 4449K/5404K, paused 2ms+0ms, total 14ms
D/dalvikvm( 8768): GC_FOR_ALLOC freed 138K, 18% free 4474K/5404K, paused 4ms, total 4ms
I/dalvikvm-heap( 8768): Grow heap (frag case) to 4.497MB for 72190-byte allocation
D/dalvikvm( 8768): GC_FOR_ALLOC freed <1K, 18% free 4545K/5476K, paused 4ms, total 4ms
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:311
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:331
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8768): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8768): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:88
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:88
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:292
I/com.newrelic.agent.android( 8768): Crash 76e80b77-8be4-45eb-15c3-9cab1cdc028c successfully submitted.
I/System.out( 8768): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8768): GC_CONCURRENT freed 714K, 22% free 4272K/5476K, paused 2ms+0ms, total 4ms
D/dalvikvm( 8768): GC_CONCURRENT freed 385K, 23% free 4270K/5476K, paused 2ms+0ms, total 5ms
D/dalvikvm( 8768): GC_CONCURRENT freed 377K, 22% free 4277K/5476K, paused 2ms+0ms, total 5ms
I/System.out( 8768): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 8768 SIG: 9
E/AndroidRuntime( 8768): FATAL EXCEPTION: main
E/AndroidRuntime( 8768): Process: com.mint, PID: 8768
E/AndroidRuntime( 8768): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8768): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8768): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8768): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8768): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8768): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8768): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8768): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8768): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8768): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8768): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8768): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8768): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8768): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8768): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8768): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8768): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8768): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8768): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8768): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 8768) has died.
D/dalvikvm(  166): GC_EXPLICIT freed 40K, 4% free 2845K/2952K, paused 0ms+1ms, total 3ms
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2845K/2952K, paused 0ms+0ms, total 3ms
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=8818 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2845K/2952K, paused 1ms+1ms, total 9ms
I/dalvikvm( 8818): ignoring registerObject request in thread=1
I/dalvikvm( 8818): ignoring registerObject request in thread=1
D/dalvikvm( 8818): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8818): GC_CONCURRENT freed 213K, 9% free 3107K/3384K, paused 3ms+4ms, total 11ms
D/dalvikvm( 8818): GC_CONCURRENT freed 189K, 8% free 3301K/3560K, paused 1ms+0ms, total 4ms
I/CrashlyticsCore( 8818): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8818): GC_CONCURRENT freed 160K, 6% free 3527K/3752K, paused 1ms+0ms, total 3ms
I/dalvikvm( 8818): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8818): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8818): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 8818): GC_CONCURRENT freed 183K, 7% free 3728K/3984K, paused 2ms+1ms, total 5ms
I/dalvikvm( 8818): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8818): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8818): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8818): GC_CONCURRENT freed 193K, 7% free 4037K/4304K, paused 4ms+2ms, total 8ms
D/dalvikvm( 8818): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 8818): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8818): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8818): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8818): GC_CONCURRENT freed 137K, 5% free 4304K/4528K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8818): GC_CONCURRENT freed 344K, 9% free 4346K/4776K, paused 1ms+0ms, total 3ms
D/dalvikvm( 8818): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8818): VFY: unable to resolve instance field 38765
D/dalvikvm( 8818): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 8818): <init> androidContext: 'com.mint.app.MintApp@4a7b4afc' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 8818): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8818): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8818): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8818): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8818): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8818): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8818): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8818): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8818): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8818): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8818): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
D/dalvikvm( 8818): GC_CONCURRENT freed 1462K, 33% free 3270K/4812K, paused 1ms+0ms, total 4ms
I/System.out( 8818): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8818): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8818): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8818): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8818): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8818): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8818): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8818): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 8818): getAuthorizationState
I/com.newrelic.agent.android( 8818): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/com.newrelic.agent.android( 8818): Application state monitor has started
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8818): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 8818): GC_FOR_ALLOC freed 272K, 31% free 3361K/4812K, paused 6ms, total 6ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 3.378MB for 39950-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed <1K, 30% free 3399K/4852K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 8818): Analytics Controller started.
D/dalvikvm( 8818): GC_FOR_ALLOC freed 39K, 30% free 3407K/4852K, paused 5ms, total 5ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 3.462MB for 79888-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed <1K, 30% free 3485K/4932K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 8818): Measurement Engine initialized.
I/com.newrelic.agent.android( 8818): New Relic Agent v5.4.0
D/dalvikvm( 8818): GC_FOR_ALLOC freed 135K, 30% free 3500K/4932K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 8818): Harvester: connected
I/com.newrelic.agent.android( 8818): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8818): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8818): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8818): Harvester: Sending 0 analytics events.
D/dalvikvm( 8818): GC_FOR_ALLOC freed 103K, 28% free 3554K/4932K, paused 3ms, total 3ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 3.605MB for 79888-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed <1K, 28% free 3632K/5012K, paused 3ms, total 3ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 100K, 27% free 3678K/5012K, paused 6ms, total 7ms
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/dalvikvm( 8818): GC_CONCURRENT freed 178K, 22% free 3918K/5012K, paused 2ms+2ms, total 8ms
I/dalvikvm( 8818): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8818): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8818): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8818): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 8818): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8818): VFY: unable to resolve instance field 2423
D/dalvikvm( 8818): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 8818): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8818): VFY: unable to resolve instance field 2423
D/dalvikvm( 8818): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8818): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8818): VFY: unable to resolve instance field 2423
D/dalvikvm( 8818): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 8818): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8818): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8818): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1f3a17d-92b0-4ea3-b970-05b61276c372
W/dalvikvm( 8818): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8818): VFY: unable to resolve instance field 2423
D/dalvikvm( 8818): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8818): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8818): VFY: unable to resolve instance field 2423
D/dalvikvm( 8818): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime( 8818): Shutting down VM
W/dalvikvm( 8818): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8818): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:24
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8818): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8818): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8818): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1f3a17d-92b0-4ea3-b970-05b61276c372
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8818): GC_CONCURRENT freed 301K, 21% free 4000K/5012K, paused 2ms+0ms, total 5ms
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:143
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8818): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8818): GC_CONCURRENT freed 243K, 15% free 4260K/5012K, paused 2ms+2ms, total 11ms
D/dalvikvm( 8818): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 24K, 15% free 4264K/5012K, paused 3ms, total 3ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 4.260MB for 38766-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed 0K, 15% free 4302K/5052K, paused 4ms, total 4ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 196K, 16% free 4273K/5052K, paused 3ms, total 5ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 4.287MB for 58146-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed <1K, 16% free 4330K/5112K, paused 5ms, total 5ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 46K, 16% free 4296K/5112K, paused 5ms, total 5ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 4.337MB for 87216-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed 5K, 16% free 4376K/5200K, paused 5ms, total 5ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 114K, 17% free 4356K/5200K, paused 4ms, total 4ms
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8818): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 8818): GC_CONCURRENT freed 505K, 19% free 4235K/5200K, paused 1ms+1ms, total 12ms
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:154
I/System.out( 8818): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1f3a17d-92b0-4ea3-b970-05b61276c372;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8818): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:162
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8818): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8818): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1f3a17d-92b0-4ea3-b970-05b61276c372;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8818): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8818): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8818): GC_CONCURRENT freed 352K, 18% free 4267K/5200K, paused 1ms+0ms, total 4ms
D/dalvikvm( 8818): GC_CONCURRENT freed 380K, 18% free 4275K/5200K, paused 2ms+1ms, total 5ms
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:227
D/dalvikvm( 8818): GC_CONCURRENT freed 214K, 15% free 4459K/5200K, paused 2ms+0ms, total 5ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 76K, 15% free 4454K/5200K, paused 3ms, total 3ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 4.492MB for 87216-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed <1K, 15% free 4539K/5288K, paused 5ms, total 5ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 63K, 16% free 4484K/5288K, paused 3ms, total 3ms
D/dalvikvm( 8818): GC_FOR_ALLOC freed 121K, 17% free 4436K/5288K, paused 3ms, total 3ms
I/dalvikvm-heap( 8818): Grow heap (frag case) to 4.427MB for 38002-byte allocation
D/dalvikvm( 8818): GC_FOR_ALLOC freed 93K, 18% free 4380K/5328K, paused 3ms, total 3ms
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:301
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:329
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8818): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8818): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:83
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:83
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:272
I/com.newrelic.agent.android( 8818): Crash beeeccc4-88ad-8231-ab64-595ff439a4e1 successfully submitted.
I/System.out( 8818): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8818): GC_CONCURRENT freed 494K, 20% free 4273K/5328K, paused 1ms+0ms, total 4ms
D/dalvikvm( 8818): GC_CONCURRENT freed 386K, 20% free 4271K/5328K, paused 2ms+0ms, total 5ms
D/dalvikvm( 8818): GC_CONCURRENT freed 373K, 20% free 4281K/5328K, paused 3ms+0ms, total 6ms
I/System.out( 8818): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 8818 SIG: 9
E/AndroidRuntime( 8818): FATAL EXCEPTION: main
E/AndroidRuntime( 8818): Process: com.mint, PID: 8818
E/AndroidRuntime( 8818): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8818): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8818): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8818): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8818): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8818): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8818): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8818): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8818): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8818): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8818): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8818): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8818): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8818): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8818): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8818): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8818): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8818): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8818): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8818): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 8818) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/ActivityManager(  470): Force removing ActivityRecord{4afb6d7c u0 com.mint/.core.overview.LoginActivity$XLarge t51}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/FirebaseApp( 6059): Notifying background state change listeners.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9ef134 attribute=null, token = android.os.BinderProxy@4ac7d000
I/ActivityManager(  470): START u0 {act=com.android.systemui.recent.action.TOGGLE_RECENTS flg=0x10800000 cmp=com.android.systemui/.recent.RecentsActivity} from pid 556
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=8877 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 8877): ignoring registerObject request in thread=1
I/dalvikvm( 8877): ignoring registerObject request in thread=1
D/dalvikvm( 8877): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8877): GC_CONCURRENT freed 151K, 7% free 3207K/3420K, paused 1ms+8ms, total 11ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/CrashlyticsCore( 8877): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8877): GC_CONCURRENT freed 247K, 9% free 3350K/3664K, paused 5ms+1ms, total 10ms
D/dalvikvm( 8877): GC_CONCURRENT freed 134K, 6% free 3601K/3808K, paused 2ms+1ms, total 5ms
D/dalvikvm( 8877): GC_CONCURRENT freed 234K, 8% free 3873K/4176K, paused 1ms+0ms, total 10ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/dalvikvm( 8877): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8877): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8877): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 8877): GC_CONCURRENT freed 190K, 7% free 4180K/4448K, paused 2ms+0ms, total 10ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm( 8877): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 8877): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8877): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8877): GC_CONCURRENT freed 270K, 8% free 4362K/4712K, paused 1ms+0ms, total 9ms
D/dalvikvm( 8877): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8877): VFY: unable to resolve instance field 38765
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 8877): <init> androidContext: 'com.mint.app.MintApp@4a7b0344' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 8877): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8877): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8877): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8877): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8877): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8877): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8877): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8877): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8877): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8877): VFY: replacing opcode 0x72 at 0x0006
D/dalvikvm( 8877): GC_CONCURRENT freed 329K, 9% free 4530K/4936K, paused 2ms+4ms, total 14ms
I/System.out( 8877): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:1
I/System.out( 8877): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8877): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 8877): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8877): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8877): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8877): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 8877): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/Authorization( 8877): getAuthorizationState
I/com.newrelic.agent.android( 8877): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8877): Application state monitor has started
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 8877): Analytics Controller started.
I/com.newrelic.agent.android( 8877): Measurement Engine initialized.
I/System.out( 8877): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:1
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8877): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 8877): GC_CONCURRENT freed 1600K, 34% free 3386K/5064K, paused 2ms+0ms, total 7ms
D/dalvikvm( 8877): GC_FOR_ALLOC freed 7K, 34% free 3383K/5064K, paused 4ms, total 4ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 3.400MB for 39950-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed <1K, 33% free 3422K/5104K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 8877): New Relic Agent v5.4.0
D/dalvikvm( 8877): GC_FOR_ALLOC freed 15K, 33% free 3420K/5104K, paused 3ms, total 3ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 3.474MB for 79888-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed <1K, 33% free 3498K/5184K, paused 3ms, total 3ms
D/dalvikvm( 8877): GC_FOR_ALLOC freed 58K, 33% free 3512K/5184K, paused 8ms, total 8ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 3.527MB for 39950-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed 39K, 33% free 3512K/5224K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 8877): Harvester: connected
I/com.newrelic.agent.android( 8877): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8877): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8877): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8877): Harvester: Sending 0 analytics events.
D/dalvikvm( 8877): GC_FOR_ALLOC freed 13K, 33% free 3520K/5224K, paused 3ms, total 3ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 3.573MB for 79888-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed 1K, 33% free 3597K/5304K, paused 5ms, total 5ms
D/dalvikvm( 8877): GC_CONCURRENT freed 183K, 29% free 3798K/5304K, paused 1ms+0ms, total 4ms
I/dalvikvm( 8877): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8877): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8877): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 8877): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm( 8877): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 8877): VFY: unable to resolve instance field 38470
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8877): GC_CONCURRENT freed 341K, 26% free 3942K/5304K, paused 2ms+2ms, total 14ms
D/Lifecycle( 8877): onActivityCreated: core.overview.RouterActivity
I/System.out( 8877): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8877): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8877): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out( 8877): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89
W/dalvikvm( 8877): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8877): VFY: unable to resolve instance field 2423
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8877): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8877): VFY: unable to resolve instance field 2423
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8877): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm( 8877): VFY: unable to resolve instance field 38747
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0007
I/Authorization( 8877): getAuthorizationState
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/dalvikvm( 8877): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8877): VFY: unable to resolve instance field 2423
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0000
W/InputManager(  470): Input event injection from pid 8296 failed.
W/dalvikvm( 8877): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 8877): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
W/dalvikvm( 8877): VFY: unable to resolve instance field 2423
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8877): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8877): VFY: unable to resolve instance field 2423
D/dalvikvm( 8877): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 8877): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8877): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 8877
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
V/WebViewChromium( 8877): Binding Chromium to the background looper Looper (main, tid 1) {4a7ac1f8}
I/chromium( 8877): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 8877): Initializing chromium process, renderers=0
W/chromium( 8877): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:192
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:50
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 8877): GC_CONCURRENT freed 319K, 23% free 4135K/5304K, paused 2ms+21ms, total 59ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:2
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8877): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 8877): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:2
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
D/libEGL  ( 8877): loaded /system/lib/egl/libEGL_adreno.so
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 8877): GC_CONCURRENT freed 395K, 22% free 4163K/5304K, paused 1ms+0ms, total 15ms
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:5
D/        ( 8877): HostConnection::get() New Host Connection established 0xb8e3ab10, tid 8877
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:2
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
D/libEGL  ( 8877): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 8877): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8877): GC_CONCURRENT freed 454K, 21% free 4221K/5304K, paused 3ms+2ms, total 21ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8877): GC_FOR_ALLOC freed 5K, 21% free 4221K/5304K, paused 6ms, total 6ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 4.235MB for 56388-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed 0K, 21% free 4276K/5360K, paused 5ms, total 5ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 15ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 17ms
D/dalvikvm( 8877): GC_FOR_ALLOC freed 51K, 21% free 4260K/5360K, paused 6ms, total 6ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 4.825MB for 635808-byte allocation
D/dalvikvm( 8877): GC_CONCURRENT freed <1K, 19% free 4881K/5984K, paused 1ms+7ms, total 10ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/yeshen  ( 6059): launcher onstop
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
E/ActivityThread( 8877): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/AndroidRuntime( 8877): Shutting down VM
W/dalvikvm( 8877): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/dalvikvm( 8877): VMStack.getTraceBuf: threadObj 0x94f549e0 not active
I/dalvikvm( 8877): VMStack.getTraceBuf: threadObj 0x94f71320 not active
W/c.t.tdm.TrustDefenderMo( 8877): Scan  already in progress or cancel requested, aborting
D/dalvikvm( 8877): GC_CONCURRENT freed 357K, 14% free 5205K/5984K, paused 2ms+1ms, total 11ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 8877): GC_FOR_ALLOC freed 31K, 14% free 5217K/6024K, paused 4ms, total 4ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 5.208MB for 58146-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed 0K, 14% free 5274K/6084K, paused 7ms, total 7ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 21ms
D/dalvikvm( 8877): WAIT_FOR_CONCURRENT_GC blocked 21ms
D/dalvikvm( 8877): GC_FOR_ALLOC freed 52K, 14% free 5291K/6084K, paused 5ms, total 5ms
D/dalvikvm( 8877): GC_FOR_ALLOC freed 68K, 14% free 5322K/6172K, paused 4ms, total 4ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 5.380MB for 130822-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed <1K, 14% free 5449K/6300K, paused 6ms, total 6ms
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:272
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:279
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8877): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:1
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=6a0d067e91e04194822d0d8f3e93feec&osVersion=4.4.2
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8877): GC_CONCURRENT freed 1039K, 18% free 5231K/6368K, paused 3ms+1ms, total 8ms
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:337
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:393
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:1
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8877): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8877): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 8877): GC_CONCURRENT freed 707K, 18% free 5234K/6368K, paused 2ms+4ms, total 11ms
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:385
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:399
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:220
D/dalvikvm( 8877): GC_FOR_ALLOC freed 321K, 15% free 5468K/6368K, paused 4ms, total 4ms
I/dalvikvm-heap( 8877): Grow heap (frag case) to 5.523MB for 130822-byte allocation
D/dalvikvm( 8877): GC_FOR_ALLOC freed <1K, 14% free 5595K/6496K, paused 7ms, total 7ms
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:84
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:84
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8877): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8877): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 8877): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:284
I/com.newrelic.agent.android( 8877): Crash 8a21af4d-27be-59f7-72b6-638c281a1d0d successfully submitted.
I/System.out( 8877): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8877): GC_CONCURRENT freed 1123K, 19% free 5264K/6496K, paused 1ms+1ms, total 5ms
D/dalvikvm( 8877): GC_CONCURRENT freed 673K, 19% free 5272K/6496K, paused 3ms+0ms, total 6ms
I/Process (  470): Sending signal. PID: 8877 SIG: 9
E/AndroidRuntime( 8877): FATAL EXCEPTION: main
E/AndroidRuntime( 8877): Process: com.mint, PID: 8877
E/AndroidRuntime( 8877): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8877): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8877): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8877): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8877): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8877): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8877): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8877): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8877): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8877): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8877): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8877): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8877): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8877): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8877): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8877): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8877): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8877): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8877): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8877): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 8877) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=8957 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 8957): ignoring registerObject request in thread=1
I/dalvikvm( 8957): ignoring registerObject request in thread=1
D/dalvikvm( 8957): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 8957): GC_CONCURRENT freed 159K, 7% free 3199K/3420K, paused 1ms+3ms, total 7ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8957): GC_CONCURRENT freed 240K, 9% free 3469K/3772K, paused 3ms+1ms, total 11ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/CrashlyticsCore( 8957): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 8957): GC_CONCURRENT freed 188K, 7% free 3698K/3960K, paused 1ms+0ms, total 4ms
I/dalvikvm( 8957): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 8957): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 8957): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 8957): GC_CONCURRENT freed 159K, 6% free 3924K/4164K, paused 1ms+0ms, total 5ms
I/dalvikvm( 8957): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
D/dalvikvm( 8957): GC_CONCURRENT freed 167K, 6% free 4254K/4500K, paused 4ms+6ms, total 13ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 14ms
W/dalvikvm( 8957): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 8957): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 8957): GC_CONCURRENT freed 313K, 9% free 4328K/4720K, paused 3ms+1ms, total 6ms
D/dalvikvm( 8957): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 8957): VFY: unable to resolve instance field 38765
D/dalvikvm( 8957): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 8957): <init> androidContext: 'com.mint.app.MintApp@4a7b09b4' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 8957): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 8957): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8957): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 8957): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 8957): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 8957): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 8957): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 8957): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 8957): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 8957): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 8957): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 8957): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 8957): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:1
I/System.out( 8957): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 8957): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 8957): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 8957): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8957): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:1
I/System.out( 8957): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 8957): GC_CONCURRENT freed 236K, 7% free 4562K/4876K, paused 1ms+7ms, total 10ms
I/Authorization( 8957): getAuthorizationState
I/com.newrelic.agent.android( 8957): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 8957): Application state monitor has started
I/com.newrelic.agent.android( 8957): Analytics Controller started.
I/com.newrelic.agent.android( 8957): Measurement Engine initialized.
I/com.newrelic.agent.android( 8957): New Relic Agent v5.4.0
D/dalvikvm( 8957): GC_CONCURRENT freed 1644K, 34% free 3390K/5108K, paused 1ms+9ms, total 19ms
I/com.newrelic.agent.android( 8957): Harvester: connected
I/com.newrelic.agent.android( 8957): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 8957): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 8957): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 8957): Harvester: Sending 0 analytics events.
D/dalvikvm( 8957): GC_FOR_ALLOC freed 130K, 33% free 3446K/5108K, paused 6ms, total 6ms
I/dalvikvm-heap( 8957): Grow heap (frag case) to 3.500MB for 79888-byte allocation
D/dalvikvm( 8957): GC_FOR_ALLOC freed <1K, 33% free 3524K/5188K, paused 4ms, total 4ms
D/dalvikvm( 8957): GC_FOR_ALLOC freed <1K, 33% free 3526K/5188K, paused 3ms, total 3ms
I/dalvikvm-heap( 8957): Grow heap (frag case) to 3.541MB for 39950-byte allocation
D/dalvikvm( 8957): GC_FOR_ALLOC freed 39K, 33% free 3526K/5228K, paused 6ms, total 6ms
D/dalvikvm( 8957): GC_FOR_ALLOC freed 32K, 32% free 3560K/5228K, paused 4ms, total 4ms
I/dalvikvm-heap( 8957): Grow heap (frag case) to 3.611MB for 79888-byte allocation
D/dalvikvm( 8957): GC_FOR_ALLOC freed <1K, 32% free 3637K/5308K, paused 5ms, total 5ms
D/dalvikvm( 8957): GC_CONCURRENT freed 217K, 26% free 3932K/5308K, paused 2ms+4ms, total 14ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 9ms
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 8957): WAIT_FOR_CONCURRENT_GC blocked 10ms
I/System.out( 8957): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
D/dalvikvm( 8957): GC_CONCURRENT freed 374K, 25% free 4018K/5308K, paused 1ms+3ms, total 12ms
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:2
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 8957): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:8
I/dalvikvm( 8957): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 8957): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 8957): VFY: replacing opcode 0x71 at 0x0030
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/MixpanelAPI.AL( 8957): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 8957): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 8957): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 8957): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89
I/System.out( 8957): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:1
W/dalvikvm( 8957): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8957): VFY: unable to resolve instance field 2423
D/dalvikvm( 8957): VFY: replacing opcode 0x54 at 0x0000
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
W/dalvikvm( 8957): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8957): VFY: unable to resolve instance field 2423
D/dalvikvm( 8957): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 8957): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 8957): VFY: unable to resolve instance field 2423
D/dalvikvm( 8957): VFY: replacing opcode 0x54 at 0x0002
D/dalvikvm( 8957): GC_CONCURRENT freed 384K, 25% free 4028K/5308K, paused 2ms+5ms, total 9ms
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:7
W/dalvikvm( 8957): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
W/dalvikvm( 8957): VFY: unable to resolve instance field 2423
D/dalvikvm( 8957): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 8957): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 8957): VFY: unable to resolve instance field 2423
D/dalvikvm( 8957): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:4
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
D/AndroidRuntime( 8957): Shutting down VM
W/dalvikvm( 8957): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8957): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 8957): GC_CONCURRENT freed 146K, 20% free 4291K/5308K, paused 2ms+0ms, total 4ms
D/dalvikvm( 8957): GC_FOR_ALLOC freed 48K, 20% free 4289K/5308K, paused 5ms, total 5ms
I/dalvikvm-heap( 8957): Grow heap (frag case) to 4.302MB for 58146-byte allocation
D/dalvikvm( 8957): GC_FOR_ALLOC freed 0K, 20% free 4345K/5368K, paused 4ms, total 4ms
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm( 8957): GC_FOR_ALLOC freed 48K, 20% free 4314K/5368K, paused 3ms, total 3ms
I/dalvikvm-heap( 8957): Grow heap (frag case) to 4.354MB for 87216-byte allocation
D/dalvikvm( 8957): GC_FOR_ALLOC freed <1K, 20% free 4398K/5456K, paused 4ms, total 4ms
D/dalvikvm( 8957): GC_FOR_ALLOC freed 64K, 21% free 4343K/5456K, paused 5ms, total 5ms
I/dalvikvm-heap( 8957): Grow heap (frag case) to 4.373MB for 76602-byte allocation
D/dalvikvm( 8957): GC_FOR_ALLOC freed 207K, 24% free 4210K/5532K, paused 3ms, total 3ms
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 8957): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:15
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 8957): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8957): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 8957): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 8957): GC_CONCURRENT freed 361K, 24% free 4234K/5532K, paused 2ms+0ms, total 5ms
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:119
I/System.out( 8957): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8957): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:121
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:1
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 8957): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 8957): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=45fd028e-9a42-4136-90d4-4b1977960d89;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 8957): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 8957): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8957): GC_CONCURRENT freed 351K, 23% free 4267K/5532K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8957): GC_CONCURRENT freed 377K, 23% free 4274K/5532K, paused 1ms+0ms, total 5ms
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:224
D/dalvikvm( 8957): GC_CONCURRENT freed 209K, 19% free 4491K/5532K, paused 2ms+1ms, total 5ms
D/dalvikvm( 8957): GC_FOR_ALLOC freed 109K, 19% free 4484K/5532K, paused 2ms, total 2ms
I/dalvikvm-heap( 8957): Grow heap (frag case) to 4.511MB for 76602-byte allocation
D/dalvikvm( 8957): GC_FOR_ALLOC freed <1K, 19% free 4559K/5608K, paused 4ms, total 4ms
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:279
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:309
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 8957): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 8957): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 8957): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:273
I/com.newrelic.agent.android( 8957): Crash 4b243a59-1784-c5c6-7a06-77c833e76487 successfully submitted.
I/System.out( 8957): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 8957): GC_CONCURRENT freed 732K, 24% free 4273K/5608K, paused 2ms+0ms, total 5ms
D/dalvikvm( 8957): GC_CONCURRENT freed 386K, 24% free 4271K/5608K, paused 1ms+1ms, total 4ms
D/dalvikvm( 8957): GC_CONCURRENT freed 377K, 24% free 4277K/5608K, paused 2ms+1ms, total 5ms
E/AndroidRuntime( 8957): FATAL EXCEPTION: main
E/AndroidRuntime( 8957): Process: com.mint, PID: 8957
E/AndroidRuntime( 8957): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 8957): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 8957): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 8957): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 8957): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 8957): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 8957): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 8957): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 8957): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 8957): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 8957): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 8957): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 8957): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8957): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8957): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 8957): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 8957): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 8957): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 8957): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 8957): 	at dalvik.system.NativeStart.main(Native Method)
I/Process (  470): Sending signal. PID: 8957 SIG: 9
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 8957) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9007): ignoring registerObject request in thread=1
I/dalvikvm( 9007): ignoring registerObject request in thread=1
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9007 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm( 9007): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9007): GC_CONCURRENT freed 215K, 9% free 3143K/3420K, paused 2ms+0ms, total 7ms
D/dalvikvm( 9007): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/CrashlyticsCore( 9007): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9007): GC_CONCURRENT freed 200K, 8% free 3331K/3596K, paused 1ms+0ms, total 3ms
D/dalvikvm( 9007): WAIT_FOR_CONCURRENT_GC blocked 17ms
D/dalvikvm( 9007): GC_CONCURRENT freed 199K, 7% free 3638K/3904K, paused 3ms+3ms, total 7ms
D/dalvikvm( 9007): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9007): GC_CONCURRENT freed 139K, 6% free 3883K/4100K, paused 2ms+0ms, total 4ms
I/dalvikvm( 9007): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9007): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9007): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9007): GC_CONCURRENT freed 218K, 7% free 4161K/4460K, paused 2ms+1ms, total 8ms
D/dalvikvm( 9007): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9007): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9007): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9007): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/dalvikvm( 9007): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9007): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9007): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9007): GC_CONCURRENT freed 253K, 8% free 4310K/4648K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9007): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9007): VFY: unable to resolve instance field 38765
D/dalvikvm( 9007): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9007): GC_CONCURRENT freed 1515K, 33% free 3250K/4840K, paused 2ms+2ms, total 11ms
I/Authorization( 9007): <init> androidContext: 'com.mint.app.MintApp@4a7b10dc' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9007): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9007): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9007): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9007): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9007): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9007): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9007): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9007): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9007): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9007): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9007): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9007): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9007): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9007): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9007): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9007): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9007): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9007): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9007): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9007): getAuthorizationState
I/com.newrelic.agent.android( 9007): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
D/dalvikvm( 9007): GC_CONCURRENT freed 261K, 30% free 3402K/4840K, paused 2ms+1ms, total 6ms
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 9007): Application state monitor has started
I/System.out( 9007): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9007): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9007): GC_FOR_ALLOC freed 135K, 31% free 3353K/4840K, paused 7ms, total 8ms
I/dalvikvm-heap( 9007): Grow heap (frag case) to 3.372MB for 39950-byte allocation
D/dalvikvm( 9007): GC_FOR_ALLOC freed 1K, 31% free 3391K/4880K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9007): Analytics Controller started.
I/com.newrelic.agent.android( 9007): Measurement Engine initialized.
D/dalvikvm( 9007): GC_FOR_ALLOC freed 48K, 31% free 3414K/4880K, paused 3ms, total 3ms
I/dalvikvm-heap( 9007): Grow heap (frag case) to 3.468MB for 79888-byte allocation
D/dalvikvm( 9007): GC_FOR_ALLOC freed <1K, 30% free 3492K/4960K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9007): New Relic Agent v5.4.0
D/dalvikvm( 9007): GC_FOR_ALLOC freed 104K, 30% free 3479K/4960K, paused 5ms, total 5ms
I/com.newrelic.agent.android( 9007): Harvester: connected
I/com.newrelic.agent.android( 9007): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9007): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9007): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9007): Harvester: Sending 0 analytics events.
D/dalvikvm( 9007): GC_FOR_ALLOC freed 105K, 29% free 3548K/4960K, paused 3ms, total 3ms
I/dalvikvm-heap( 9007): Grow heap (frag case) to 3.599MB for 79888-byte allocation
D/dalvikvm( 9007): GC_FOR_ALLOC freed <1K, 29% free 3626K/5040K, paused 3ms, total 3ms
D/dalvikvm( 9007): GC_CONCURRENT freed 104K, 23% free 3908K/5040K, paused 1ms+1ms, total 4ms
I/dalvikvm( 9007): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9007): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9007): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9007): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 9007): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9007): VFY: unable to resolve instance field 2423
D/dalvikvm( 9007): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9007): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9007): VFY: unable to resolve instance field 2423
D/dalvikvm( 9007): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9007): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9007): VFY: unable to resolve instance field 2423
D/dalvikvm( 9007): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9007): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9007): VFY: unable to resolve instance field 2423
D/dalvikvm( 9007): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9007): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9007): VFY: unable to resolve instance field 2423
D/dalvikvm( 9007): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9007): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 9007): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9007): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=280ce812-f78a-431c-8896-5be9d89fc5c9
D/dalvikvm( 9007): GC_CONCURRENT freed 371K, 22% free 3962K/5040K, paused 2ms+2ms, total 12ms
D/AndroidRuntime( 9007): Shutting down VM
W/dalvikvm( 9007): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm( 9007): GC_CONCURRENT freed 111K, 16% free 4251K/5040K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9007): GC_FOR_ALLOC freed 45K, 17% free 4231K/5040K, paused 6ms, total 6ms
I/dalvikvm-heap( 9007): Grow heap (frag case) to 4.246MB for 58146-byte allocation
D/dalvikvm( 9007): GC_FOR_ALLOC freed <1K, 16% free 4287K/5100K, paused 4ms, total 4ms
I/System.out( 9007): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:46
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9007): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9007): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9007): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=280ce812-f78a-431c-8896-5be9d89fc5c9
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
D/dalvikvm( 9007): GC_FOR_ALLOC freed 92K, 17% free 4262K/5100K, paused 4ms, total 4ms
I/dalvikvm-heap( 9007): Grow heap (frag case) to 4.304MB for 87216-byte allocation
D/dalvikvm( 9007): GC_FOR_ALLOC freed <1K, 17% free 4347K/5188K, paused 4ms, total 4ms
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9007): GC_FOR_ALLOC freed 97K, 18% free 4303K/5188K, paused 3ms, total 3ms
I/dalvikvm-heap( 9007): Grow heap (frag case) to 4.335MB for 78728-byte allocation
D/dalvikvm( 9007): GC_FOR_ALLOC freed <1K, 17% free 4380K/5268K, paused 4ms, total 4ms
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:155
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:1
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9007): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9007): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 9007): GC_CONCURRENT freed 533K, 20% free 4232K/5268K, paused 3ms+0ms, total 6ms
D/dalvikvm( 9007): GC_CONCURRENT freed 364K, 20% free 4253K/5268K, paused 2ms+1ms, total 7ms
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:157
I/System.out( 9007): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=280ce812-f78a-431c-8896-5be9d89fc5c9;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9007): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:171
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9007): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9007): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=280ce812-f78a-431c-8896-5be9d89fc5c9;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9007): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9007): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9007): GC_CONCURRENT freed 396K, 19% free 4271K/5268K, paused 0ms+1ms, total 4ms
D/dalvikvm( 9007): GC_CONCURRENT freed 374K, 19% free 4281K/5268K, paused 2ms+0ms, total 4ms
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:231
D/dalvikvm( 9007): GC_CONCURRENT freed 216K, 16% free 4448K/5268K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9007): GC_FOR_ALLOC freed 111K, 15% free 4499K/5268K, paused 3ms, total 3ms
I/dalvikvm-heap( 9007): Grow heap (frag case) to 4.527MB for 78728-byte allocation
D/dalvikvm( 9007): GC_FOR_ALLOC freed <1K, 15% free 4575K/5348K, paused 4ms, total 4ms
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:265
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:267
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9007): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9007): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 9007): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:269
I/com.newrelic.agent.android( 9007): Crash fa6a79bf-1fbf-eeed-6194-61d64f9a473c successfully submitted.
I/System.out( 9007): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9007): GC_CONCURRENT freed 746K, 20% free 4280K/5348K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9007): GC_CONCURRENT freed 386K, 20% free 4278K/5348K, paused 1ms+1ms, total 4ms
I/Process (  470): Sending signal. PID: 9007 SIG: 9
E/AndroidRuntime( 9007): FATAL EXCEPTION: main
E/AndroidRuntime( 9007): Process: com.mint, PID: 9007
E/AndroidRuntime( 9007): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9007): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9007): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9007): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9007): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9007): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9007): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9007): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9007): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9007): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9007): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9007): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9007): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9007): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9007): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9007): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9007): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9007): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9007): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9007): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/ActivityManager(  470): Process com.mint (pid 9007) has died.
W/ActivityManager(  470): Force removing ActivityRecord{4a97b7cc u0 com.mint/.core.overview.LoginActivity$XLarge t52}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/FirebaseApp( 6059): Notifying background state change listeners.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/dalvikvm(  668): GC_EXPLICIT freed 1012K, 17% free 6673K/7960K, paused 3ms+2ms, total 24ms
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1491861, downTime=1491861, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b09e02c attribute=null, token = android.os.BinderProxy@4ac7d000
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
D/dalvikvm(  746): GC_EXPLICIT freed 607K, 22% free 9163K/11636K, paused 1ms+1ms, total 30ms
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
I/qtaguid ( 6059): Untagging socket 67 failed errno=-13
W/NetworkManagementSocketTagger( 6059): untagSocket(67) failed with errno -13
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=air.com.hypah.io.slither/.AppEntry bnds=[946,301][1150,428] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
I/qtaguid ( 6059): Tagging socket 67 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger( 6059): tagSocketFd(67, 1239581248, -1) failed with errno-13
I/qtaguid ( 6059): Tagging socket 102 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger( 6059): tagSocketFd(102, 1239581248, -1) failed with errno-13
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=9086 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9086): ignoring registerObject request in thread=1
I/dalvikvm( 9086): ignoring registerObject request in thread=1
D/dalvikvm( 9086): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9086): GC_CONCURRENT freed 154K, 7% free 3198K/3416K, paused 4ms+7ms, total 14ms
I/CrashlyticsCore( 9086): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9086): GC_CONCURRENT freed 275K, 10% free 3314K/3656K, paused 3ms+0ms, total 8ms
D/dalvikvm( 9086): GC_CONCURRENT freed 256K, 9% free 3564K/3888K, paused 4ms+1ms, total 10ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/dalvikvm( 9086): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9086): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9086): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 9086): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9086): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9086): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 10ms
D/dalvikvm( 9086): GC_CONCURRENT freed 249K, 8% free 3822K/4140K, paused 2ms+4ms, total 12ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9086): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9086): VFY: unable to resolve instance field 38765
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 9086): <init> androidContext: 'com.mint.app.MintApp@4a7b18bc' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9086): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9086): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9086): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9086): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9086): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9086): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
D/dalvikvm( 9086): GC_CONCURRENT freed 214K, 7% free 4102K/4396K, paused 2ms+1ms, total 14ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 8ms
W/dalvikvm( 9086): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 31ms
I/dalvikvm( 9086): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9086): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9086): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9086): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9086): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9086): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9086): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9086): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9086): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/System.out( 9086): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 16ms
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9086): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 9086): GC_CONCURRENT freed 169K, 6% free 4318K/4568K, paused 6ms+1ms, total 9ms
I/Authorization( 9086): getAuthorizationState
D/dalvikvm( 9086): GC_CONCURRENT freed 167K, 6% free 4549K/4804K, paused 2ms+0ms, total 6ms
I/com.newrelic.agent.android( 9086): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9086): Application state monitor has started
I/com.newrelic.agent.android( 9086): Analytics Controller started.
I/com.newrelic.agent.android( 9086): Measurement Engine initialized.
I/com.newrelic.agent.android( 9086): New Relic Agent v5.4.0
D/dalvikvm( 9086): GC_CONCURRENT freed 492K, 11% free 4610K/5176K, paused 2ms+1ms, total 8ms
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/com.newrelic.agent.android( 9086): Harvester: connected
I/com.newrelic.agent.android( 9086): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9086): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9086): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9086): Harvester: Sending 0 analytics events.
I/System.out( 9086): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9086): GC_CONCURRENT freed 1467K, 32% free 3607K/5256K, paused 1ms+1ms, total 5ms
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:22
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9086): GC_CONCURRENT freed 142K, 25% free 3954K/5256K, paused 3ms+2ms, total 14ms
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm( 9086): GC_CONCURRENT freed 442K, 25% free 3969K/5256K, paused 2ms+1ms, total 13ms
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:1
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/dalvikvm( 9086): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9086): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9086): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9086): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:7
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:1
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:2
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9086): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 9086): VFY: unable to resolve instance field 38470
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
D/Lifecycle( 9086): onActivityCreated: core.overview.RouterActivity
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
W/dalvikvm( 9086): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9086): VFY: unable to resolve instance field 2423
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9086): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9086): VFY: unable to resolve instance field 2423
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9086): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
W/dalvikvm( 9086): VFY: unable to resolve instance field 38747
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0007
D/dalvikvm( 9086): GC_CONCURRENT freed 363K, 23% free 4059K/5256K, paused 3ms+5ms, total 18ms
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 9086): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9086): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=60746a4d-18f8-44d7-811a-31b8ed8a18c0
I/System.out( 9086): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9086): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9086): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=60746a4d-18f8-44d7-811a-31b8ed8a18c0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/Authorization( 9086): getAuthorizationState
W/dalvikvm( 9086): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9086): VFY: unable to resolve instance field 2423
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9086): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9086): VFY: unable to resolve instance field 2423
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9086): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9086): VFY: unable to resolve instance field 2423
D/dalvikvm( 9086): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9086): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9086): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9086): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 9086
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
V/WebViewChromium( 9086): Binding Chromium to the background looper Looper (main, tid 1) {4a7ad76c}
I/chromium( 9086): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/System.out( 9086): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:3
I/BrowserProcessMain( 9086): Initializing chromium process, renderers=0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 9086): GC_CONCURRENT freed 372K, 21% free 4198K/5256K, paused 2ms+8ms, total 30ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 10ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out( 9086): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:16
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 9086): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9086): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9086): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9086): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
W/chromium( 9086): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out( 9086): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:164
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=60746a4d-18f8-44d7-811a-31b8ed8a18c0;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:169
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:13
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=60746a4d-18f8-44d7-811a-31b8ed8a18c0;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/libEGL  ( 9086): loaded /system/lib/egl/libEGL_adreno.so
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9086): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/        ( 9086): HostConnection::get() New Host Connection established 0xb8ed9980, tid 9086
D/libEGL  ( 9086): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 9086): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm( 9086): GC_CONCURRENT freed 398K, 20% free 4219K/5256K, paused 1ms+3ms, total 17ms
D/dalvikvm( 9086): GC_CONCURRENT freed 381K, 19% free 4301K/5256K, paused 2ms+3ms, total 13ms
I/dalvikvm-heap( 9086): Grow heap (frag case) to 4.866MB for 635808-byte allocation
D/dalvikvm( 9086): GC_FOR_ALLOC freed 16K, 17% free 4906K/5880K, paused 2ms, total 2ms
D/AndroidRuntime( 9086): Shutting down VM
W/dalvikvm( 9086): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
E/ActivityThread( 9086): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/c.t.tdm.TrustDefenderMo( 9086): Scan  already in progress or cancel requested, aborting
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=26679d3ed8cf414a80f752bfd520017a&osVersion=4.4.2
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:361
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:415
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9086): GC_CONCURRENT freed 402K, 12% free 5193K/5880K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm( 9086): GC_FOR_ALLOC freed 218K, 12% free 5360K/6028K, paused 5ms, total 5ms
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:76
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9086): GC_CONCURRENT freed 828K, 16% free 5281K/6252K, paused 1ms+2ms, total 7ms
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:397
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:481
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:1
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9086): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9086): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:227
D/dalvikvm( 9086): GC_CONCURRENT freed 526K, 12% free 5529K/6252K, paused 2ms+1ms, total 8ms
D/dalvikvm( 9086): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9086): GC_FOR_ALLOC freed 374K, 16% free 5475K/6476K, paused 3ms, total 4ms
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9086): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9086): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9086): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:281
I/com.newrelic.agent.android( 9086): Crash f37c921e-7b1e-7626-bc3a-04aa0d4c1d7d successfully submitted.
I/System.out( 9086): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9086): GC_CONCURRENT freed 941K, 19% free 5285K/6476K, paused 2ms+1ms, total 6ms
D/dalvikvm( 9086): GC_CONCURRENT freed 701K, 17% free 5400K/6476K, paused 2ms+4ms, total 13ms
I/Process (  470): Sending signal. PID: 9086 SIG: 9
E/AndroidRuntime( 9086): FATAL EXCEPTION: main
E/AndroidRuntime( 9086): Process: com.mint, PID: 9086
E/AndroidRuntime( 9086): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9086): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9086): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9086): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9086): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9086): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9086): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9086): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9086): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9086): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9086): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9086): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9086): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9086): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9086): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9086): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9086): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9086): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9086): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9086): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
D/dalvikvm(  470): GC_EXPLICIT freed 1773K, 45% free 13399K/24284K, paused 0ms+2ms, total 18ms
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9086) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9167 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9167): ignoring registerObject request in thread=1
I/dalvikvm( 9167): ignoring registerObject request in thread=1
D/dalvikvm( 9167): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9167): GC_CONCURRENT freed 206K, 8% free 3152K/3420K, paused 1ms+3ms, total 6ms
I/CrashlyticsCore( 9167): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9167): GC_CONCURRENT freed 201K, 8% free 3338K/3608K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9167): GC_CONCURRENT freed 162K, 7% free 3566K/3800K, paused 1ms+1ms, total 4ms
I/dalvikvm( 9167): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9167): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9167): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9167): GC_CONCURRENT freed 151K, 6% free 3806K/4036K, paused 2ms+0ms, total 5ms
I/dalvikvm( 9167): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9167): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9167): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9167): GC_CONCURRENT freed 259K, 8% free 4050K/4380K, paused 2ms+1ms, total 12ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9167): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9167): VFY: unable to resolve instance field 38765
D/dalvikvm( 9167): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9167): GC_CONCURRENT freed 202K, 6% free 4350K/4624K, paused 1ms+3ms, total 7ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 29ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/Authorization( 9167): <init> androidContext: 'com.mint.app.MintApp@4a7b1f2c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 9ms
W/dalvikvm( 9167): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm( 9167): GC_CONCURRENT freed 264K, 8% free 4506K/4852K, paused 1ms+1ms, total 7ms
W/dalvikvm( 9167): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9167): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9167): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9167): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9167): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9167): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9167): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9167): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9167): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9167): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9167): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9167): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9167): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9167): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9167): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9167): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9167): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9167): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9167): getAuthorizationState
I/com.newrelic.agent.android( 9167): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9167): Application state monitor has started
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 9167): GC_CONCURRENT freed 429K, 10% free 4591K/5092K, paused 1ms+10ms, total 17ms
I/System.out( 9167): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:1
I/System.out( 9167): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9167): Analytics Controller started.
I/com.newrelic.agent.android( 9167): Measurement Engine initialized.
I/com.newrelic.agent.android( 9167): New Relic Agent v5.4.0
D/dalvikvm( 9167): GC_FOR_ALLOC freed 1415K, 33% free 3516K/5212K, paused 6ms, total 6ms
I/dalvikvm-heap( 9167): Grow heap (frag case) to 3.569MB for 79888-byte allocation
D/dalvikvm( 9167): GC_FOR_ALLOC freed <1K, 33% free 3593K/5292K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 9167): Harvester: connected
I/com.newrelic.agent.android( 9167): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9167): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9167): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9167): Harvester: Sending 0 analytics events.
D/dalvikvm( 9167): GC_CONCURRENT freed 222K, 28% free 3854K/5292K, paused 1ms+1ms, total 4ms
I/dalvikvm( 9167): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9167): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9167): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9167): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm( 9167): GC_CONCURRENT freed 267K, 25% free 3976K/5292K, paused 1ms+0ms, total 4ms
W/dalvikvm( 9167): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9167): VFY: unable to resolve instance field 2423
D/dalvikvm( 9167): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9167): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9167): VFY: unable to resolve instance field 2423
D/dalvikvm( 9167): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9167): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 9167): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9167): VFY: unable to resolve instance field 2423
D/dalvikvm( 9167): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9167): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9167): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b46522d4-d7a8-4629-9967-af85a8018e7f
I/System.out( 9167): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
W/dalvikvm( 9167): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
W/dalvikvm( 9167): VFY: unable to resolve instance field 2423
D/dalvikvm( 9167): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9167): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9167): VFY: unable to resolve instance field 2423
D/dalvikvm( 9167): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:3
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9167): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9167): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9167): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b46522d4-d7a8-4629-9967-af85a8018e7f
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/AndroidRuntime( 9167): Shutting down VM
W/dalvikvm( 9167): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:117
D/dalvikvm( 9167): GC_CONCURRENT freed 335K, 24% free 4024K/5292K, paused 2ms+1ms, total 5ms
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:7
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9167): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 9167): GC_CONCURRENT freed 323K, 23% free 4096K/5292K, paused 0ms+1ms, total 8ms
I/System.out( 9167): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9167): GC_CONCURRENT freed 180K, 17% free 4427K/5292K, paused 1ms+5ms, total 11ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/dalvikvm-heap( 9167): Grow heap (frag case) to 4.437MB for 58146-byte allocation
D/dalvikvm( 9167): GC_FOR_ALLOC freed 111K, 19% free 4373K/5352K, paused 4ms, total 4ms
D/dalvikvm( 9167): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9167): GC_FOR_ALLOC freed 38K, 19% free 4361K/5352K, paused 5ms, total 5ms
I/dalvikvm-heap( 9167): Grow heap (frag case) to 4.401MB for 87216-byte allocation
D/dalvikvm( 9167): GC_FOR_ALLOC freed 57K, 20% free 4389K/5440K, paused 5ms, total 5ms
D/dalvikvm( 9167): GC_FOR_ALLOC freed 10K, 20% free 4392K/5440K, paused 4ms, total 4ms
I/dalvikvm-heap( 9167): Grow heap (frag case) to 4.472MB for 130822-byte allocation
D/dalvikvm( 9167): GC_FOR_ALLOC freed 2K, 19% free 4517K/5568K, paused 4ms, total 4ms
D/dalvikvm( 9167): GC_FOR_ALLOC freed 86K, 21% free 4432K/5568K, paused 8ms, total 8ms
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9167): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:188
I/System.out( 9167): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b46522d4-d7a8-4629-9967-af85a8018e7f;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9167): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:195
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9167): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9167): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b46522d4-d7a8-4629-9967-af85a8018e7f;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9167): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9167): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9167): GC_CONCURRENT freed 546K, 23% free 4289K/5568K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9167): GC_CONCURRENT freed 376K, 23% free 4297K/5568K, paused 1ms+0ms, total 5ms
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:262
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:291
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9167): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:213
D/dalvikvm( 9167): GC_CONCURRENT freed 427K, 23% free 4326K/5568K, paused 1ms+1ms, total 4ms
D/dalvikvm( 9167): GC_CONCURRENT freed 143K, 18% free 4582K/5568K, paused 3ms+0ms, total 6ms
D/dalvikvm( 9167): GC_FOR_ALLOC freed 67K, 19% free 4527K/5568K, paused 2ms, total 2ms
I/dalvikvm-heap( 9167): Grow heap (frag case) to 4.604MB for 130822-byte allocation
D/dalvikvm( 9167): GC_FOR_ALLOC freed 85K, 20% free 4570K/5696K, paused 3ms, total 3ms
I/System.out( 9167): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:76
I/System.out( 9167): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:272
I/com.newrelic.agent.android( 9167): Crash 44a16672-cf66-4ebd-337b-c6b7f4c7de12 successfully submitted.
I/System.out( 9167): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9167): GC_CONCURRENT freed 731K, 25% free 4288K/5696K, paused 1ms+0ms, total 5ms
D/dalvikvm( 9167): GC_CONCURRENT freed 385K, 25% free 4287K/5696K, paused 1ms+0ms, total 4ms
I/Process (  470): Sending signal. PID: 9167 SIG: 9
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
E/AndroidRuntime( 9167): FATAL EXCEPTION: main
E/AndroidRuntime( 9167): Process: com.mint, PID: 9167
E/AndroidRuntime( 9167): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9167): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9167): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9167): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9167): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9167): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9167): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9167): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9167): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9167): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9167): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9167): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9167): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9167): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9167): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9167): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9167): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9167): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9167): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9167): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 9167) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9216 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9216): ignoring registerObject request in thread=1
I/dalvikvm( 9216): ignoring registerObject request in thread=1
D/dalvikvm( 9216): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9216): GC_CONCURRENT freed 220K, 9% free 3138K/3420K, paused 3ms+1ms, total 7ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/CrashlyticsCore( 9216): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9216): GC_CONCURRENT freed 198K, 8% free 3325K/3588K, paused 2ms+1ms, total 4ms
I/dalvikvm( 9216): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9216): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9216): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9216): GC_CONCURRENT freed 212K, 8% free 3622K/3900K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/dalvikvm( 9216): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9216): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9216): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9216): GC_CONCURRENT freed 169K, 6% free 3958K/4196K, paused 2ms+4ms, total 8ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9216): GC_CONCURRENT freed 259K, 8% free 4083K/4424K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9216): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9216): VFY: unable to resolve instance field 38765
D/dalvikvm( 9216): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9216): GC_CONCURRENT freed 225K, 7% free 4362K/4660K, paused 4ms+1ms, total 8ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/Authorization( 9216): <init> androidContext: 'com.mint.app.MintApp@4a7b2658' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9216): WAIT_FOR_CONCURRENT_GC blocked 5ms
W/dalvikvm( 9216): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9216): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9216): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9216): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9216): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9216): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9216): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9216): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9216): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9216): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9216): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9216): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9216): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9216): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9216): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9216): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9216): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9216): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 9216): GC_CONCURRENT freed 261K, 8% free 4489K/4860K, paused 1ms+1ms, total 5ms
I/Authorization( 9216): getAuthorizationState
I/com.newrelic.agent.android( 9216): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9216): Application state monitor has started
I/com.newrelic.agent.android( 9216): Analytics Controller started.
D/dalvikvm( 9216): GC_CONCURRENT freed 331K, 9% free 4583K/4988K, paused 2ms+1ms, total 4ms
I/com.newrelic.agent.android( 9216): Measurement Engine initialized.
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 9216): New Relic Agent v5.4.0
I/System.out( 9216): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9216): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9216): Harvester: connected
I/com.newrelic.agent.android( 9216): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9216): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9216): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9216): Harvester: Sending 0 analytics events.
D/dalvikvm( 9216): GC_CONCURRENT freed 1426K, 27% free 3815K/5188K, paused 2ms+0ms, total 14ms
D/dalvikvm( 9216): GC_CONCURRENT freed 297K, 24% free 3944K/5188K, paused 2ms+6ms, total 12ms
I/dalvikvm( 9216): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9216): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9216): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9216): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 9216): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9216): VFY: unable to resolve instance field 2423
D/dalvikvm( 9216): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9216): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9216): VFY: unable to resolve instance field 2423
D/dalvikvm( 9216): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9216): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9216): VFY: unable to resolve instance field 2423
D/dalvikvm( 9216): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9216): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 9216): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9216): VFY: unable to resolve instance field 2423
D/dalvikvm( 9216): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9216): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
I/System.out( 9216): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9216): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=12f28a7c-2e8e-403a-b7f1-8c0776789b27
W/dalvikvm( 9216): VFY: unable to resolve instance field 2423
D/dalvikvm( 9216): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime( 9216): Shutting down VM
W/dalvikvm( 9216): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm( 9216): GC_CONCURRENT freed 302K, 23% free 4038K/5188K, paused 1ms+0ms, total 5ms
D/dalvikvm( 9216): GC_FOR_ALLOC freed 117K, 19% free 4211K/5188K, paused 4ms, total 4ms
I/dalvikvm-heap( 9216): Grow heap (frag case) to 4.226MB for 58146-byte allocation
D/dalvikvm( 9216): GC_FOR_ALLOC freed 37K, 20% free 4229K/5248K, paused 3ms, total 3ms
D/dalvikvm( 9216): GC_FOR_ALLOC freed 15K, 20% free 4247K/5248K, paused 4ms, total 5ms
I/dalvikvm-heap( 9216): Grow heap (frag case) to 4.290MB for 87216-byte allocation
D/dalvikvm( 9216): GC_FOR_ALLOC freed 57K, 20% free 4275K/5336K, paused 3ms, total 3ms
D/dalvikvm( 9216): GC_FOR_ALLOC freed 19K, 20% free 4278K/5336K, paused 4ms, total 4ms
I/dalvikvm-heap( 9216): Grow heap (frag case) to 4.311MB for 78002-byte allocation
D/dalvikvm( 9216): GC_FOR_ALLOC freed <1K, 20% free 4354K/5416K, paused 5ms, total 5ms
I/System.out( 9216): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:66
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9216): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9216): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9216): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=12f28a7c-2e8e-403a-b7f1-8c0776789b27
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:127
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:1
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9216): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:1
I/System.out( 9216): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 9216): GC_CONCURRENT freed 523K, 23% free 4215K/5416K, paused 3ms+0ms, total 7ms
D/dalvikvm( 9216): GC_CONCURRENT freed 400K, 22% free 4253K/5416K, paused 1ms+0ms, total 17ms
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:117
I/System.out( 9216): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=12f28a7c-2e8e-403a-b7f1-8c0776789b27;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9216): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:120
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9216): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9216): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=12f28a7c-2e8e-403a-b7f1-8c0776789b27;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9216): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9216): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9216): GC_CONCURRENT freed 360K, 22% free 4277K/5416K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9216): GC_CONCURRENT freed 384K, 22% free 4276K/5416K, paused 4ms+0ms, total 7ms
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:240
D/dalvikvm( 9216): GC_CONCURRENT freed 293K, 18% free 4455K/5416K, paused 3ms+3ms, total 9ms
D/dalvikvm( 9216): GC_FOR_ALLOC freed 124K, 18% free 4493K/5416K, paused 4ms, total 4ms
I/dalvikvm-heap( 9216): Grow heap (frag case) to 4.521MB for 78002-byte allocation
D/dalvikvm( 9216): GC_FOR_ALLOC freed <1K, 17% free 4570K/5496K, paused 3ms, total 3ms
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:283
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:285
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9216): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9216): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:81
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:81
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:284
I/com.newrelic.agent.android( 9216): Crash 44a3e510-0edd-7ca8-a791-f5ab19bb8df8 successfully submitted.
I/System.out( 9216): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9216): GC_CONCURRENT freed 741K, 23% free 4277K/5496K, paused 1ms+0ms, total 5ms
D/dalvikvm( 9216): GC_CONCURRENT freed 386K, 23% free 4275K/5496K, paused 1ms+1ms, total 4ms
D/dalvikvm( 9216): GC_CONCURRENT freed 376K, 23% free 4283K/5496K, paused 2ms+1ms, total 5ms
I/System.out( 9216): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 9216 SIG: 9
E/AndroidRuntime( 9216): FATAL EXCEPTION: main
E/AndroidRuntime( 9216): Process: com.mint, PID: 9216
E/AndroidRuntime( 9216): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9216): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9216): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9216): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9216): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9216): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9216): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9216): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9216): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9216): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9216): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9216): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9216): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9216): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9216): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9216): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9216): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9216): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9216): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9216): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 9216) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
W/ActivityManager(  470): Force removing ActivityRecord{4ac654d8 u0 com.mint/.core.overview.LoginActivity$XLarge t53}: app died, no saved state
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/FirebaseApp( 6059): Notifying background state change listeners.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
D/yeshen  ( 6059): launcher onpause
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=9267 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/dalvikvm( 9267): ignoring registerObject request in thread=1
I/dalvikvm( 9267): ignoring registerObject request in thread=1
D/dalvikvm( 9267): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9267): GC_CONCURRENT freed 245K, 9% free 3113K/3420K, paused 2ms+1ms, total 10ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/CrashlyticsCore( 9267): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9267): GC_CONCURRENT freed 195K, 8% free 3303K/3564K, paused 2ms+0ms, total 4ms
I/dalvikvm( 9267): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9267): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9267): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9267): GC_CONCURRENT freed 188K, 7% free 3624K/3880K, paused 1ms+5ms, total 12ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 15ms
D/dalvikvm( 9267): GC_CONCURRENT freed 209K, 7% free 3914K/4200K, paused 1ms+0ms, total 8ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/dalvikvm( 9267): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9267): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9267): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9267): GC_CONCURRENT freed 187K, 6% free 4220K/4488K, paused 2ms+1ms, total 11ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9267): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9267): GC_CONCURRENT freed 322K, 9% free 4351K/4752K, paused 1ms+3ms, total 8ms
D/dalvikvm( 9267): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9267): VFY: unable to resolve instance field 38765
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 9267): <init> androidContext: 'com.mint.app.MintApp@4a7b2e30' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 9267): GC_CONCURRENT freed 239K, 7% free 4533K/4852K, paused 2ms+6ms, total 10ms
W/dalvikvm( 9267): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9267): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9267): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9267): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9267): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9267): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9267): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9267): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9267): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9267): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9267): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9267): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9267): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9267): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9267): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9267): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9267): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9267): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9267): getAuthorizationState
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/com.newrelic.agent.android( 9267): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9267): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9267): Application state monitor has started
D/dalvikvm( 9267): GC_CONCURRENT freed 1552K, 32% free 3481K/5108K, paused 2ms+0ms, total 13ms
I/com.newrelic.agent.android( 9267): Analytics Controller started.
I/com.newrelic.agent.android( 9267): Measurement Engine initialized.
I/com.newrelic.agent.android( 9267): New Relic Agent v5.4.0
I/com.newrelic.agent.android( 9267): Harvester: connected
I/com.newrelic.agent.android( 9267): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9267): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9267): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9267): Harvester: Sending 0 analytics events.
D/dalvikvm( 9267): GC_FOR_ALLOC freed 271K, 31% free 3555K/5108K, paused 8ms, total 8ms
I/dalvikvm-heap( 9267): Grow heap (frag case) to 3.607MB for 79888-byte allocation
D/dalvikvm( 9267): GC_FOR_ALLOC freed <1K, 30% free 3633K/5188K, paused 4ms, total 4ms
D/dalvikvm( 9267): GC_CONCURRENT freed 119K, 23% free 4025K/5188K, paused 2ms+9ms, total 16ms
I/dalvikvm( 9267): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9267): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9267): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9267): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm( 9267): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 9267): VFY: unable to resolve instance field 38470
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0005
D/Lifecycle( 9267): onActivityCreated: core.overview.RouterActivity
I/System.out( 9267): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:1
W/dalvikvm( 9267): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9267): VFY: unable to resolve instance field 2423
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9267): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9267): VFY: unable to resolve instance field 2423
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9267): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9267): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=e0cb88a6-3d6c-46a3-b23d-a6b3d124942c
D/dalvikvm( 9267): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm( 9267): VFY: unable to resolve instance field 38747
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0007
D/dalvikvm( 9267): GC_CONCURRENT freed 470K, 23% free 4017K/5188K, paused 2ms+3ms, total 20ms
I/System.out( 9267): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:1
I/Authorization( 9267): getAuthorizationState
W/dalvikvm( 9267): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9267): VFY: unable to resolve instance field 2423
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9267): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9267): VFY: unable to resolve instance field 2423
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9267): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9267): VFY: unable to resolve instance field 2423
D/dalvikvm( 9267): VFY: replacing opcode 0x54 at 0x0002
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 9267
I/System.out( 9267): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9267): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
V/WebViewChromium( 9267): Binding Chromium to the background looper Looper (main, tid 1) {4a7aef38}
I/chromium( 9267): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 9267): Initializing chromium process, renderers=0
D/dalvikvm( 9267): GC_CONCURRENT freed 286K, 21% free 4114K/5188K, paused 2ms+0ms, total 6ms
W/chromium( 9267): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/libEGL  ( 9267): loaded /system/lib/egl/libEGL_adreno.so
D/        ( 9267): HostConnection::get() New Host Connection established 0xb8eb4950, tid 9267
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:1
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9267): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/libEGL  ( 9267): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 9267): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:230
D/dalvikvm( 9267): GC_CONCURRENT freed 335K, 20% free 4163K/5188K, paused 2ms+1ms, total 7ms
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:6
I/System.out( 9267): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9267): GC_FOR_ALLOC freed 72K, 20% free 4190K/5188K, paused 9ms, total 9ms
I/dalvikvm-heap( 9267): Grow heap (frag case) to 4.205MB for 56388-byte allocation
D/dalvikvm( 9267): GC_FOR_ALLOC freed <1K, 20% free 4245K/5244K, paused 9ms, total 9ms
D/dalvikvm( 9267): GC_FOR_ALLOC freed 1K, 20% free 4245K/5244K, paused 9ms, total 9ms
I/dalvikvm-heap( 9267): Grow heap (frag case) to 4.810MB for 635808-byte allocation
D/dalvikvm( 9267): GC_FOR_ALLOC freed <1K, 18% free 4866K/5868K, paused 25ms, total 25ms
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9267): GC_CONCURRENT freed 12K, 18% free 4863K/5868K, paused 3ms+1ms, total 7ms
I/System.out( 9267): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:68
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=e0cb88a6-3d6c-46a3-b23d-a6b3d124942c
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/AndroidRuntime( 9267): Shutting down VM
W/dalvikvm( 9267): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
E/ActivityThread( 9267): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/c.t.tdm.TrustDefenderMo( 9267): Scan  already in progress or cancel requested, aborting
I/dalvikvm( 9267): VMStack.getTraceBuf: threadObj 0x94ffde08 not active
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/dalvikvm( 9267): GC_CONCURRENT freed 450K, 15% free 5000K/5868K, paused 7ms+1ms, total 15ms
D/dalvikvm( 9267): GC_FOR_ALLOC freed 164K, 11% free 5236K/5868K, paused 8ms, total 8ms
D/dalvikvm( 9267): GC_FOR_ALLOC freed 113K, 13% free 5287K/6016K, paused 6ms, total 6ms
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=4ba7916fea714d1f93849ca5f8e999ac&osVersion=4.4.2
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9267): GC_FOR_ALLOC freed 236K, 13% free 5353K/6144K, paused 13ms, total 13ms
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:209
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=e0cb88a6-3d6c-46a3-b23d-a6b3d124942c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:219
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=e0cb88a6-3d6c-46a3-b23d-a6b3d124942c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9267): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9267): GC_CONCURRENT freed 858K, 16% free 5204K/6144K, paused 2ms+1ms, total 5ms
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:324
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:412
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:441
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:447
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:7
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 9267): GC_CONCURRENT freed 657K, 16% free 5214K/6144K, paused 2ms+1ms, total 6ms
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:1
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:1
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:2
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9267): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9267): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:227
D/dalvikvm( 9267): GC_FOR_ALLOC freed 289K, 12% free 5418K/6144K, paused 5ms, total 5ms
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:82
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:84
D/dalvikvm( 9267): GC_FOR_ALLOC freed 72K, 13% free 5450K/6232K, paused 4ms, total 4ms
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9267): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:284
I/com.newrelic.agent.android( 9267): Crash 3a113f07-2236-2eef-eafc-ec8ee8d26e0f successfully submitted.
I/System.out( 9267): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9267): GC_CONCURRENT freed 1002K, 18% free 5226K/6360K, paused 2ms+1ms, total 9ms
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:238
I/System.out( 9267): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:241
I/System.out( 9267): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9267): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9267): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9267): GC_CONCURRENT freed 608K, 17% free 5285K/6360K, paused 2ms+1ms, total 7ms
I/Process (  470): Sending signal. PID: 9267 SIG: 9
E/AndroidRuntime( 9267): FATAL EXCEPTION: main
E/AndroidRuntime( 9267): Process: com.mint, PID: 9267
E/AndroidRuntime( 9267): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9267): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9267): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9267): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9267): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9267): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9267): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9267): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9267): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9267): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9267): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9267): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9267): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9267): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9267): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9267): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9267): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9267): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9267): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9267): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9267) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9347 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9347): ignoring registerObject request in thread=1
I/dalvikvm( 9347): ignoring registerObject request in thread=1
D/dalvikvm( 9347): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9347): GC_CONCURRENT freed 173K, 8% free 3058K/3296K, paused 1ms+1ms, total 4ms
D/dalvikvm( 9347): GC_CONCURRENT freed 208K, 8% free 3235K/3508K, paused 1ms+0ms, total 4ms
I/CrashlyticsCore( 9347): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9347): GC_CONCURRENT freed 140K, 6% free 3479K/3688K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9347): GC_CONCURRENT freed 138K, 6% free 3731K/3944K, paused 2ms+0ms, total 6ms
D/dalvikvm( 9347): GC_CONCURRENT freed 181K, 7% free 4045K/4304K, paused 1ms+5ms, total 8ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/dalvikvm( 9347): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9347): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9347): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 9347): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9347): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9347): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9347): GC_CONCURRENT freed 254K, 8% free 4287K/4620K, paused 5ms+0ms, total 16ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9347): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9347): VFY: unable to resolve instance field 38765
D/dalvikvm( 9347): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9347): GC_CONCURRENT freed 320K, 9% free 4437K/4832K, paused 2ms+5ms, total 12ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/Authorization( 9347): <init> androidContext: 'com.mint.app.MintApp@4a7b3488' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9347): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9347): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9347): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9347): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9347): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9347): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9347): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9347): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9347): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9347): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9347): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9347): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9347): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9347): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9347): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9347): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9347): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9347): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9347): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9347): getAuthorizationState
D/dalvikvm( 9347): GC_CONCURRENT freed 1522K, 33% free 3344K/4944K, paused 2ms+0ms, total 8ms
I/com.newrelic.agent.android( 9347): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9347): Application state monitor has started
I/com.newrelic.agent.android( 9347): Analytics Controller started.
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 9347): Measurement Engine initialized.
I/System.out( 9347): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9347): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9347): New Relic Agent v5.4.0
D/dalvikvm( 9347): GC_FOR_ALLOC freed 317K, 31% free 3443K/4944K, paused 3ms, total 4ms
I/dalvikvm-heap( 9347): Grow heap (frag case) to 3.498MB for 79888-byte allocation
D/dalvikvm( 9347): GC_CONCURRENT freed <1K, 30% free 3521K/5024K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9347): GC_FOR_ALLOC freed 49K, 31% free 3513K/5024K, paused 5ms, total 5ms
I/dalvikvm-heap( 9347): Grow heap (frag case) to 3.566MB for 79888-byte allocation
D/dalvikvm( 9347): GC_FOR_ALLOC freed <1K, 30% free 3591K/5104K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 9347): Harvester: connected
I/com.newrelic.agent.android( 9347): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9347): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9347): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9347): Harvester: Sending 0 analytics events.
D/dalvikvm( 9347): GC_CONCURRENT freed 207K, 27% free 3767K/5104K, paused 1ms+0ms, total 6ms
D/dalvikvm( 9347): GC_CONCURRENT freed 199K, 23% free 3962K/5104K, paused 2ms+1ms, total 10ms
I/dalvikvm( 9347): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9347): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9347): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9347): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 9347): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9347): VFY: unable to resolve instance field 2423
D/dalvikvm( 9347): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9347): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9347): VFY: unable to resolve instance field 2423
D/dalvikvm( 9347): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9347): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9347): VFY: unable to resolve instance field 2423
D/dalvikvm( 9347): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9347): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9347): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 9347): VFY: unable to resolve instance field 2423
D/dalvikvm( 9347): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9347): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9347): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5c0d6ba5-3364-4c1a-98ea-5b5a7cbc91d5
D/dalvikvm( 9347): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9347): VFY: unable to resolve instance field 2423
D/dalvikvm( 9347): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime( 9347): Shutting down VM
W/dalvikvm( 9347): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 9347): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:28
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9347): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9347): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:7
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9347): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5c0d6ba5-3364-4c1a-98ea-5b5a7cbc91d5
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9347): GC_CONCURRENT freed 304K, 19% free 4169K/5104K, paused 2ms+1ms, total 12ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9347): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:150
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9347): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9347): GC_FOR_ALLOC freed 159K, 17% free 4251K/5104K, paused 8ms, total 8ms
I/dalvikvm-heap( 9347): Grow heap (frag case) to 4.265MB for 58146-byte allocation
D/dalvikvm( 9347): GC_FOR_ALLOC freed <1K, 17% free 4308K/5164K, paused 9ms, total 9ms
D/dalvikvm( 9347): GC_FOR_ALLOC freed 114K, 17% free 4286K/5164K, paused 4ms, total 4ms
I/dalvikvm-heap( 9347): Grow heap (frag case) to 4.328MB for 87216-byte allocation
D/dalvikvm( 9347): GC_FOR_ALLOC freed 59K, 18% free 4312K/5252K, paused 5ms, total 5ms
D/dalvikvm( 9347): GC_FOR_ALLOC freed 139K, 18% free 4346K/5252K, paused 5ms, total 5ms
I/dalvikvm-heap( 9347): Grow heap (frag case) to 4.373MB for 73024-byte allocation
D/dalvikvm( 9347): GC_FOR_ALLOC freed <1K, 18% free 4416K/5324K, paused 5ms, total 5ms
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9347): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 9347): GC_CONCURRENT freed 573K, 21% free 4241K/5324K, paused 3ms+0ms, total 6ms
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:142
I/System.out( 9347): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5c0d6ba5-3364-4c1a-98ea-5b5a7cbc91d5;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9347): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:175
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9347): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9347): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5c0d6ba5-3364-4c1a-98ea-5b5a7cbc91d5;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9347): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9347): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9347): GC_CONCURRENT freed 368K, 21% free 4256K/5324K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9347): GC_CONCURRENT freed 359K, 20% free 4281K/5324K, paused 2ms+0ms, total 5ms
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:244
D/dalvikvm( 9347): GC_CONCURRENT freed 266K, 17% free 4460K/5324K, paused 2ms+2ms, total 7ms
D/dalvikvm( 9347): GC_FOR_ALLOC freed 234K, 16% free 4475K/5324K, paused 6ms, total 6ms
I/dalvikvm-heap( 9347): Grow heap (frag case) to 4.499MB for 73024-byte allocation
D/dalvikvm( 9347): GC_FOR_ALLOC freed <1K, 16% free 4546K/5396K, paused 4ms, total 4ms
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:305
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:339
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9347): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9347): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:80
I/System.out( 9347): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:80
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:295
I/com.newrelic.agent.android( 9347): Crash 74e443ca-5251-c3cb-98df-9c1537685efc successfully submitted.
I/System.out( 9347): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9347): GC_CONCURRENT freed 715K, 21% free 4273K/5396K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9347): GC_CONCURRENT freed 385K, 21% free 4271K/5396K, paused 1ms+0ms, total 3ms
I/Process (  470): Sending signal. PID: 9347 SIG: 9
E/AndroidRuntime( 9347): FATAL EXCEPTION: main
E/AndroidRuntime( 9347): Process: com.mint, PID: 9347
E/AndroidRuntime( 9347): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9347): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9347): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9347): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9347): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9347): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9347): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9347): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9347): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9347): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9347): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9347): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9347): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9347): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9347): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9347): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9347): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9347): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9347): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9347): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9347) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9397): ignoring registerObject request in thread=1
I/dalvikvm( 9397): ignoring registerObject request in thread=1
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9397 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm( 9397): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9397): GC_CONCURRENT freed 167K, 8% free 3064K/3296K, paused 4ms+0ms, total 6ms
I/CrashlyticsCore( 9397): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9397): GC_CONCURRENT freed 221K, 9% free 3269K/3556K, paused 4ms+0ms, total 6ms
D/dalvikvm( 9397): GC_CONCURRENT freed 155K, 7% free 3500K/3724K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9397): GC_CONCURRENT freed 163K, 6% free 3723K/3960K, paused 2ms+0ms, total 4ms
I/dalvikvm( 9397): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9397): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9397): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9397): GC_CONCURRENT freed 164K, 6% free 3957K/4208K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9397): GC_CONCURRENT freed 163K, 6% free 4180K/4428K, paused 1ms+1ms, total 4ms
I/dalvikvm( 9397): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9397): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9397): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9397): GC_CONCURRENT freed 304K, 9% free 4322K/4716K, paused 3ms+1ms, total 6ms
D/dalvikvm( 9397): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9397): VFY: unable to resolve instance field 38765
D/dalvikvm( 9397): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 9397): <init> androidContext: 'com.mint.app.MintApp@4a7b3bcc' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 9397): GC_CONCURRENT freed 1456K, 33% free 3250K/4800K, paused 2ms+1ms, total 4ms
W/dalvikvm( 9397): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9397): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9397): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9397): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9397): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9397): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9397): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9397): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9397): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9397): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9397): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9397): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9397): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9397): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9397): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:1
I/System.out( 9397): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9397): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9397): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9397): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9397): getAuthorizationState
I/com.newrelic.agent.android( 9397): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
D/dalvikvm( 9397): GC_CONCURRENT freed 297K, 31% free 3338K/4800K, paused 1ms+0ms, total 3ms
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/com.newrelic.agent.android( 9397): Application state monitor has started
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9397): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9397): GC_FOR_ALLOC freed 66K, 30% free 3391K/4800K, paused 7ms, total 7ms
I/dalvikvm-heap( 9397): Grow heap (frag case) to 3.447MB for 79888-byte allocation
D/dalvikvm( 9397): GC_FOR_ALLOC freed <1K, 29% free 3469K/4880K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9397): Analytics Controller started.
I/com.newrelic.agent.android( 9397): Measurement Engine initialized.
I/com.newrelic.agent.android( 9397): New Relic Agent v5.4.0
D/dalvikvm( 9397): GC_FOR_ALLOC freed 159K, 29% free 3482K/4880K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 9397): Harvester: connected
I/com.newrelic.agent.android( 9397): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9397): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9397): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9397): Harvester: Sending 0 analytics events.
D/dalvikvm( 9397): GC_FOR_ALLOC freed 103K, 28% free 3548K/4880K, paused 3ms, total 3ms
I/dalvikvm-heap( 9397): Grow heap (frag case) to 3.600MB for 79888-byte allocation
D/dalvikvm( 9397): GC_FOR_ALLOC freed <1K, 27% free 3626K/4960K, paused 2ms, total 2ms
D/dalvikvm( 9397): GC_FOR_ALLOC freed 92K, 26% free 3672K/4960K, paused 4ms, total 5ms
D/dalvikvm( 9397): GC_CONCURRENT freed 162K, 22% free 3899K/4960K, paused 2ms+0ms, total 4ms
I/dalvikvm( 9397): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9397): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9397): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9397): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 9397): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9397): VFY: unable to resolve instance field 2423
D/dalvikvm( 9397): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9397): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9397): VFY: unable to resolve instance field 2423
D/dalvikvm( 9397): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9397): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9397): VFY: unable to resolve instance field 2423
D/dalvikvm( 9397): VFY: replacing opcode 0x54 at 0x0002
D/dalvikvm( 9397): GC_FOR_ALLOC freed 158K, 20% free 3972K/4960K, paused 5ms, total 5ms
I/System.out( 9397): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 9397): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9397): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=4b290153-f56a-430a-a8a9-3e15e65bfbec
W/dalvikvm( 9397): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9397): VFY: unable to resolve instance field 2423
D/dalvikvm( 9397): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9397): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9397): VFY: unable to resolve instance field 2423
D/dalvikvm( 9397): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime( 9397): Shutting down VM
W/dalvikvm( 9397): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm( 9397): GC_CONCURRENT freed 147K, 16% free 4215K/4960K, paused 3ms+1ms, total 7ms
D/dalvikvm( 9397): GC_FOR_ALLOC freed 16K, 16% free 4202K/4960K, paused 3ms, total 3ms
I/dalvikvm-heap( 9397): Grow heap (frag case) to 4.186MB for 25846-byte allocation
D/dalvikvm( 9397): GC_FOR_ALLOC freed <1K, 16% free 4227K/4988K, paused 4ms, total 4ms
D/dalvikvm( 9397): GC_FOR_ALLOC freed 28K, 16% free 4211K/4988K, paused 5ms, total 5ms
I/dalvikvm-heap( 9397): Grow heap (frag case) to 4.208MB for 38766-byte allocation
D/dalvikvm( 9397): GC_FOR_ALLOC freed <1K, 16% free 4249K/5028K, paused 4ms, total 4ms
I/System.out( 9397): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:54
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
D/dalvikvm( 9397): GC_FOR_ALLOC freed 44K, 16% free 4231K/5028K, paused 4ms, total 4ms
I/dalvikvm-heap( 9397): Grow heap (frag case) to 4.246MB for 58146-byte allocation
D/dalvikvm( 9397): GC_FOR_ALLOC freed <1K, 16% free 4287K/5088K, paused 5ms, total 5ms
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:160
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9397): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9397): GC_FOR_ALLOC freed 132K, 16% free 4280K/5088K, paused 4ms, total 4ms
I/dalvikvm-heap( 9397): Grow heap (frag case) to 4.322MB for 87216-byte allocation
D/dalvikvm( 9397): GC_FOR_ALLOC freed 0K, 16% free 4365K/5176K, paused 4ms, total 4ms
I/System.out( 9397): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:5
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9397): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9397): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=4b290153-f56a-430a-a8a9-3e15e65bfbec
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9397): GC_FOR_ALLOC freed 85K, 17% free 4313K/5176K, paused 4ms, total 4ms
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9397): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 9397): GC_CONCURRENT freed 467K, 18% free 4285K/5176K, paused 1ms+5ms, total 10ms
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:111
I/System.out( 9397): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9397): GC_CONCURRENT freed 408K, 18% free 4260K/5176K, paused 2ms+0ms, total 5ms
I/System.out( 9397): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=4b290153-f56a-430a-a8a9-3e15e65bfbec;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9397): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:126
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:1
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9397): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9397): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=4b290153-f56a-430a-a8a9-3e15e65bfbec;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9397): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9397): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9397): GC_CONCURRENT freed 455K, 17% free 4303K/5176K, paused 2ms+0ms, total 10ms
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:239
D/dalvikvm( 9397): GC_FOR_ALLOC freed 415K, 15% free 4399K/5176K, paused 3ms, total 3ms
D/dalvikvm( 9397): GC_CONCURRENT freed <1K, 16% free 4399K/5176K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9397): GC_FOR_ALLOC freed 136K, 14% free 4465K/5176K, paused 4ms, total 4ms
I/dalvikvm-heap( 9397): Grow heap (frag case) to 4.502MB for 87216-byte allocation
D/dalvikvm( 9397): GC_FOR_ALLOC freed 62K, 15% free 4488K/5264K, paused 3ms, total 3ms
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:269
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:292
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9397): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9397): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:286
I/com.newrelic.agent.android( 9397): Crash 5647b502-5691-c729-a1dd-f7d69a0e8a15 successfully submitted.
I/System.out( 9397): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9397): GC_CONCURRENT freed 633K, 19% free 4278K/5264K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9397): GC_CONCURRENT freed 385K, 19% free 4276K/5264K, paused 3ms+0ms, total 7ms
D/dalvikvm( 9397): GC_CONCURRENT freed 374K, 19% free 4285K/5264K, paused 2ms+0ms, total 5ms
I/System.out( 9397): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 9397 SIG: 9
E/AndroidRuntime( 9397): FATAL EXCEPTION: main
E/AndroidRuntime( 9397): Process: com.mint, PID: 9397
E/AndroidRuntime( 9397): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9397): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9397): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9397): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9397): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9397): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9397): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9397): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9397): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9397): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9397): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9397): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9397): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9397): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9397): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9397): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9397): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9397): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9397): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9397): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 9397) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/ActivityManager(  470): Force removing ActivityRecord{4aa05828 u0 com.mint/.core.overview.LoginActivity$XLarge t54}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/FirebaseApp( 6059): Notifying background state change listeners.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
D/yeshen  ( 6059): launcher onpause
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=9447 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/dalvikvm( 9447): ignoring registerObject request in thread=1
I/dalvikvm( 9447): ignoring registerObject request in thread=1
D/dalvikvm( 9447): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9447): GC_CONCURRENT freed 176K, 7% free 3182K/3420K, paused 1ms+7ms, total 11ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/CrashlyticsCore( 9447): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9447): GC_CONCURRENT freed 262K, 9% free 3422K/3748K, paused 2ms+5ms, total 11ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 26ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9447): GC_CONCURRENT freed 312K, 10% free 3617K/3996K, paused 2ms+1ms, total 9ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 8ms
E/FastMixer(  168): did not receive expected priority boost
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/dalvikvm( 9447): GC_FOR_ALLOC freed 183K, 7% free 3935K/4192K, paused 9ms, total 9ms
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
D/dalvikvm( 9447): GC_CONCURRENT freed 29K, 6% free 3945K/4192K, paused 4ms+3ms, total 12ms
D/dalvikvm( 9447): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9447): VFY: unable to resolve instance field 38765
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9447): GC_CONCURRENT freed 211K, 7% free 4120K/4412K, paused 1ms+1ms, total 6ms
I/Authorization( 9447): <init> androidContext: 'com.mint.app.MintApp@4a7b43a8' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9447): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9447): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9447): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9447): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9447): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9447): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9447): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9447): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9447): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9447): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9447): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9447): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9447): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9447): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9447): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9447): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
D/dalvikvm( 9447): GC_CONCURRENT freed 170K, 6% free 4337K/4592K, paused 3ms+0ms, total 6ms
I/System.out( 9447): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9447): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/dalvikvm( 9447): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9447): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9447): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 9447): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
I/Authorization( 9447): getAuthorizationState
W/dalvikvm( 9447): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9447): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9447): GC_CONCURRENT freed 297K, 8% free 4533K/4912K, paused 1ms+0ms, total 13ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/com.newrelic.agent.android( 9447): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9447): Application state monitor has started
I/com.newrelic.agent.android( 9447): Analytics Controller started.
I/com.newrelic.agent.android( 9447): Measurement Engine initialized.
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/com.newrelic.agent.android( 9447): New Relic Agent v5.4.0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
D/dalvikvm( 9447): GC_CONCURRENT freed 331K, 9% free 4647K/5056K, paused 1ms+1ms, total 5ms
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:5
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:1
I/System.out( 9447): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9447): Harvester: connected
I/com.newrelic.agent.android( 9447): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9447): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9447): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9447): Harvester: Sending 0 analytics events.
D/dalvikvm( 9447): GC_CONCURRENT freed 1510K, 32% free 3653K/5296K, paused 2ms+2ms, total 14ms
D/dalvikvm( 9447): GC_CONCURRENT freed 124K, 25% free 3976K/5296K, paused 3ms+2ms, total 16ms
I/dalvikvm( 9447): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9447): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9447): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9447): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm( 9447): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 9447): VFY: unable to resolve instance field 38470
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0005
D/Lifecycle( 9447): onActivityCreated: core.overview.RouterActivity
I/System.out( 9447): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 9447): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9447): VFY: unable to resolve instance field 2423
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9447): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9447): VFY: unable to resolve instance field 2423
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9447): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
I/System.out( 9447): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:4
I/System.out( 9447): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a
W/dalvikvm( 9447): VFY: unable to resolve instance field 38747
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0007
D/dalvikvm( 9447): GC_CONCURRENT freed 391K, 24% free 4039K/5296K, paused 2ms+3ms, total 14ms
I/System.out( 9447): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:25
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:145
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/Authorization( 9447): getAuthorizationState
W/dalvikvm( 9447): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9447): VFY: unable to resolve instance field 2423
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0000
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:14
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
W/dalvikvm( 9447): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9447): VFY: unable to resolve instance field 2423
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9447): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9447): VFY: unable to resolve instance field 2423
D/dalvikvm( 9447): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9447): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
D/dalvikvm( 9447): GC_CONCURRENT freed 312K, 23% free 4110K/5296K, paused 1ms+1ms, total 6ms
I/System.out( 9447): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9447): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:2
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:1
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 9447
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:1
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
V/WebViewChromium( 9447): Binding Chromium to the background looper Looper (main, tid 1) {4a7b04b0}
I/chromium( 9447): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 9447): Initializing chromium process, renderers=0
I/System.out( 9447): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:5
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:4
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9447): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:2
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:12
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/chromium( 9447): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
D/dalvikvm( 9447): GC_CONCURRENT freed 422K, 21% free 4200K/5296K, paused 13ms+6ms, total 24ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 21ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 26ms
D/libEGL  ( 9447): loaded /system/lib/egl/libEGL_adreno.so
D/        ( 9447): HostConnection::get() New Host Connection established 0xb8ed3f70, tid 9447
D/libEGL  ( 9447): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 9447): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm( 9447): GC_CONCURRENT freed 385K, 21% free 4199K/5296K, paused 1ms+1ms, total 6ms
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:240
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:250
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 9447): GC_FOR_ALLOC freed 223K, 21% free 4211K/5296K, paused 10ms, total 10ms
I/dalvikvm-heap( 9447): Grow heap (frag case) to 4.224MB for 56388-byte allocation
D/dalvikvm( 9447): GC_FOR_ALLOC freed <1K, 21% free 4265K/5352K, paused 8ms, total 8ms
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:23
I/System.out( 9447): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9447): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9447): GC_FOR_ALLOC freed 46K, 21% free 4266K/5352K, paused 4ms, total 4ms
I/dalvikvm-heap( 9447): Grow heap (frag case) to 4.831MB for 635808-byte allocation
D/dalvikvm( 9447): GC_FOR_ALLOC freed <1K, 19% free 4886K/5976K, paused 11ms, total 11ms
D/dalvikvm( 9447): GC_CONCURRENT freed 0K, 18% free 4912K/5976K, paused 1ms+5ms, total 11ms
W/c.t.tdm.TrustDefenderMo( 9447): Scan  already in progress or cancel requested, aborting
D/AndroidRuntime( 9447): Shutting down VM
W/dalvikvm( 9447): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
E/ActivityThread( 9447): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/dalvikvm( 9447): VMStack.getTraceBuf: threadObj 0x950b9060 not active
D/dalvikvm( 9447): GC_FOR_ALLOC freed 308K, 13% free 5235K/5976K, paused 6ms, total 6ms
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=d20284d8439b48b1baf7bfa5832b330c&osVersion=4.4.2
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9447): GC_CONCURRENT freed <1K, 11% free 5440K/6076K, paused 2ms+9ms, total 15ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:304
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:372
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:13
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:2
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:3
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:12
I/System.out( 9447): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9447): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:8
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9447): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:6
D/dalvikvm( 9447): GC_CONCURRENT freed 1094K, 19% free 5216K/6372K, paused 1ms+0ms, total 11ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:491
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:531
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:228
D/dalvikvm( 9447): GC_CONCURRENT freed 571K, 16% free 5404K/6372K, paused 1ms+0ms, total 8ms
D/dalvikvm( 9447): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9447): GC_FOR_ALLOC freed 147K, 15% free 5464K/6372K, paused 6ms, total 6ms
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:75
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9447): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9447): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9447): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:272
I/com.newrelic.agent.android( 9447): Crash 5f8898fd-7a6e-7dac-514e-16283cfdd3c2 successfully submitted.
I/System.out( 9447): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9447): GC_CONCURRENT freed 942K, 18% free 5273K/6372K, paused 1ms+1ms, total 6ms
D/dalvikvm( 9447): GC_CONCURRENT freed 684K, 18% free 5272K/6372K, paused 3ms+1ms, total 6ms
I/Process (  470): Sending signal. PID: 9447 SIG: 9
E/AndroidRuntime( 9447): FATAL EXCEPTION: main
E/AndroidRuntime( 9447): Process: com.mint, PID: 9447
E/AndroidRuntime( 9447): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9447): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9447): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9447): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9447): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9447): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9447): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9447): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9447): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9447): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9447): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9447): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9447): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9447): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9447): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9447): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9447): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9447): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9447): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9447): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9447) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9529 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(  166): GC_EXPLICIT freed 39K, 4% free 2845K/2952K, paused 0ms+1ms, total 7ms
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2845K/2952K, paused 1ms+0ms, total 13ms
I/dalvikvm( 9529): ignoring registerObject request in thread=1
I/dalvikvm( 9529): ignoring registerObject request in thread=1
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2845K/2952K, paused 1ms+1ms, total 27ms
D/dalvikvm( 9529): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9529): GC_CONCURRENT freed 175K, 8% free 3055K/3296K, paused 2ms+0ms, total 6ms
I/CrashlyticsCore( 9529): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9529): GC_CONCURRENT freed 214K, 8% free 3228K/3508K, paused 17ms+0ms, total 19ms
D/dalvikvm(  470): GC_EXPLICIT freed 1536K, 46% free 13342K/24284K, paused 1ms+1ms, total 31ms
D/dalvikvm( 9529): GC_CONCURRENT freed 137K, 6% free 3479K/3688K, paused 1ms+0ms, total 5ms
D/dalvikvm( 9529): GC_CONCURRENT freed 193K, 7% free 3669K/3936K, paused 2ms+0ms, total 6ms
D/dalvikvm( 9529): GC_FOR_ALLOC freed 170K, 6% free 3996K/4244K, paused 3ms, total 3ms
D/dalvikvm( 9529): GC_CONCURRENT freed 70K, 6% free 4031K/4276K, paused 2ms+2ms, total 11ms
I/dalvikvm( 9529): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9529): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9529): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9529): GC_CONCURRENT freed 179K, 6% free 4345K/4604K, paused 1ms+7ms, total 11ms
D/dalvikvm( 9529): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9529): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9529): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/dalvikvm( 9529): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9529): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9529): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9529): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9529): VFY: unable to resolve instance field 38765
D/dalvikvm( 9529): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9529): GC_CONCURRENT freed 291K, 10% free 4439K/4880K, paused 2ms+1ms, total 4ms
I/Authorization( 9529): <init> androidContext: 'com.mint.app.MintApp@4a7b4a1c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9529): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9529): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9529): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9529): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9529): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9529): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9529): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9529): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9529): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9529): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9529): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9529): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9529): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9529): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9529): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9529): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9529): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9529): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9529): getAuthorizationState
D/dalvikvm( 9529): GC_CONCURRENT freed 1532K, 33% free 3315K/4936K, paused 2ms+0ms, total 5ms
I/com.newrelic.agent.android( 9529): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9529): Application state monitor has started
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9529): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9529): Analytics Controller started.
I/com.newrelic.agent.android( 9529): Measurement Engine initialized.
D/dalvikvm( 9529): GC_FOR_ALLOC freed 231K, 31% free 3423K/4936K, paused 2ms, total 2ms
I/dalvikvm-heap( 9529): Grow heap (frag case) to 3.478MB for 79888-byte allocation
D/dalvikvm( 9529): GC_FOR_ALLOC freed <1K, 31% free 3501K/5016K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9529): New Relic Agent v5.4.0
D/dalvikvm( 9529): GC_FOR_ALLOC freed 72K, 30% free 3552K/5016K, paused 5ms, total 5ms
I/dalvikvm-heap( 9529): Grow heap (frag case) to 3.604MB for 79888-byte allocation
D/dalvikvm( 9529): GC_FOR_ALLOC freed <1K, 29% free 3630K/5096K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9529): Harvester: connected
I/com.newrelic.agent.android( 9529): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9529): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9529): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9529): Harvester: Sending 0 analytics events.
D/dalvikvm( 9529): GC_FOR_ALLOC freed 236K, 29% free 3667K/5096K, paused 4ms, total 4ms
D/dalvikvm( 9529): GC_CONCURRENT freed 166K, 24% free 3889K/5096K, paused 2ms+0ms, total 5ms
I/dalvikvm( 9529): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9529): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9529): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9529): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 9529): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 9529): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9529): VFY: unable to resolve instance field 2423
D/dalvikvm( 9529): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9529): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9529): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9529): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a
W/dalvikvm( 9529): VFY: unable to resolve instance field 2423
D/dalvikvm( 9529): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9529): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9529): VFY: unable to resolve instance field 2423
D/dalvikvm( 9529): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9529): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
W/dalvikvm( 9529): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9529): VFY: unable to resolve instance field 2423
D/dalvikvm( 9529): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9529): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
W/dalvikvm( 9529): VFY: unable to resolve instance field 2423
D/dalvikvm( 9529): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9529): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9529): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9529): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a
D/dalvikvm( 9529): GC_CONCURRENT freed 264K, 22% free 4008K/5096K, paused 1ms+0ms, total 6ms
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:121
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
D/AndroidRuntime( 9529): Shutting down VM
W/dalvikvm( 9529): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:10
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:5
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9529): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9529): GC_CONCURRENT freed 319K, 21% free 4074K/5096K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9529): GC_FOR_ALLOC freed 98K, 16% free 4306K/5096K, paused 5ms, total 5ms
I/dalvikvm-heap( 9529): Grow heap (frag case) to 4.320MB for 58146-byte allocation
D/dalvikvm( 9529): GC_FOR_ALLOC freed 37K, 17% free 4325K/5156K, paused 3ms, total 3ms
D/dalvikvm( 9529): GC_FOR_ALLOC freed 213K, 17% free 4328K/5156K, paused 6ms, total 7ms
I/dalvikvm-heap( 9529): Grow heap (frag case) to 4.369MB for 87216-byte allocation
D/dalvikvm( 9529): GC_FOR_ALLOC freed <1K, 16% free 4413K/5244K, paused 4ms, total 4ms
D/dalvikvm( 9529): GC_FOR_ALLOC freed 202K, 17% free 4390K/5244K, paused 3ms, total 3ms
I/dalvikvm-heap( 9529): Grow heap (frag case) to 4.425MB for 83180-byte allocation
D/dalvikvm( 9529): GC_FOR_ALLOC freed <1K, 17% free 4471K/5328K, paused 4ms, total 4ms
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9529): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:166
I/System.out( 9529): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9529): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:177
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9529): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9529): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b52b305e-c572-49a2-8f99-701dce55e12a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9529): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9529): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9529): GC_CONCURRENT freed 608K, 20% free 4280K/5328K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9529): GC_CONCURRENT freed 372K, 20% free 4291K/5328K, paused 3ms+0ms, total 6ms
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:227
D/dalvikvm( 9529): GC_CONCURRENT freed 227K, 16% free 4486K/5328K, paused 3ms+0ms, total 7ms
D/dalvikvm( 9529): GC_FOR_ALLOC freed 140K, 16% free 4512K/5328K, paused 3ms, total 3ms
I/dalvikvm-heap( 9529): Grow heap (frag case) to 4.544MB for 83180-byte allocation
D/dalvikvm( 9529): GC_FOR_ALLOC freed <1K, 16% free 4593K/5412K, paused 5ms, total 5ms
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:290
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:320
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9529): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9529): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
W/DnsProxyListener(  161): Error writing DNS result to client
W/SocketClient(  161): write error (Broken pipe)
I/System.out( 9529): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:75
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:75
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:282
I/com.newrelic.agent.android( 9529): Crash 9a983c4d-f3e2-81d5-bb30-4ab3ea4220f6 successfully submitted.
I/System.out( 9529): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9529): GC_CONCURRENT freed 766K, 21% free 4284K/5412K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9529): GC_CONCURRENT freed 385K, 21% free 4282K/5412K, paused 2ms+1ms, total 4ms
D/dalvikvm( 9529): GC_CONCURRENT freed 367K, 21% free 4310K/5412K, paused 2ms+0ms, total 4ms
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9529): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9529): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/Process (  470): Sending signal. PID: 9529 SIG: 9
E/AndroidRuntime( 9529): FATAL EXCEPTION: main
E/AndroidRuntime( 9529): Process: com.mint, PID: 9529
E/AndroidRuntime( 9529): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9529): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9529): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9529): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9529): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9529): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9529): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9529): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9529): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9529): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9529): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9529): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9529): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9529): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9529): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9529): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9529): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9529): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9529): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9529): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9529) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9579 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/dalvikvm( 9579): ignoring registerObject request in thread=1
I/dalvikvm( 9579): ignoring registerObject request in thread=1
D/dalvikvm( 9579): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9579): GC_CONCURRENT freed 158K, 7% free 3200K/3420K, paused 2ms+2ms, total 5ms
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9579): GC_CONCURRENT freed 292K, 10% free 3420K/3776K, paused 3ms+0ms, total 7ms
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/CrashlyticsCore( 9579): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9579): GC_CONCURRENT freed 155K, 6% free 3769K/3996K, paused 2ms+4ms, total 7ms
I/dalvikvm( 9579): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9579): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9579): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9579): GC_CONCURRENT freed 259K, 8% free 4009K/4344K, paused 1ms+1ms, total 8ms
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm( 9579): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 5ms
W/dalvikvm( 9579): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9579): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9579): GC_CONCURRENT freed 233K, 7% free 4214K/4520K, paused 1ms+0ms, total 5ms
D/dalvikvm( 9579): GC_CONCURRENT freed 286K, 8% free 4352K/4716K, paused 1ms+1ms, total 4ms
D/dalvikvm( 9579): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9579): VFY: unable to resolve instance field 38765
D/dalvikvm( 9579): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 9579): <init> androidContext: 'com.mint.app.MintApp@4a7b0290' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9579): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9579): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9579): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9579): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9579): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9579): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9579): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9579): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9579): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9579): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9579): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9579): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9579): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9579): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9579): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9579): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9579): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9579): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9579): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 9579): GC_CONCURRENT freed 248K, 7% free 4548K/4872K, paused 2ms+4ms, total 9ms
I/Authorization( 9579): getAuthorizationState
I/com.newrelic.agent.android( 9579): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 9579): Application state monitor has started
I/System.out( 9579): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9579): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9579): Analytics Controller started.
I/com.newrelic.agent.android( 9579): Measurement Engine initialized.
I/com.newrelic.agent.android( 9579): New Relic Agent v5.4.0
D/dalvikvm( 9579): GC_CONCURRENT freed 1539K, 32% free 3505K/5116K, paused 2ms+2ms, total 8ms
I/com.newrelic.agent.android( 9579): Harvester: connected
I/com.newrelic.agent.android( 9579): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9579): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9579): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9579): Harvester: Sending 0 analytics events.
D/dalvikvm( 9579): GC_FOR_ALLOC freed 182K, 32% free 3526K/5116K, paused 4ms, total 4ms
D/dalvikvm( 9579): GC_FOR_ALLOC freed 54K, 31% free 3557K/5116K, paused 3ms, total 3ms
I/dalvikvm-heap( 9579): Grow heap (frag case) to 3.609MB for 79888-byte allocation
D/dalvikvm( 9579): GC_FOR_ALLOC freed <1K, 31% free 3635K/5196K, paused 4ms, total 4ms
D/dalvikvm( 9579): GC_CONCURRENT freed 141K, 23% free 4005K/5196K, paused 2ms+1ms, total 10ms
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/dalvikvm( 9579): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9579): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9579): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9579): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 9579): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9579): VFY: unable to resolve instance field 2423
D/dalvikvm( 9579): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9579): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9579): VFY: unable to resolve instance field 2423
D/dalvikvm( 9579): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9579): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9579): VFY: unable to resolve instance field 2423
D/dalvikvm( 9579): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9579): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9579): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 9579): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9579): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=695fc6dc-ceb4-427a-aa35-ea8b1c083eb2
W/dalvikvm( 9579): VFY: unable to resolve instance field 2423
D/dalvikvm( 9579): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9579): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9579): VFY: unable to resolve instance field 2423
D/dalvikvm( 9579): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime( 9579): Shutting down VM
W/dalvikvm( 9579): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
W/ActivityManager(  470): Launch timeout has expired, giving up wake lock!
D/dalvikvm( 9579): GC_CONCURRENT freed 358K, 20% free 4158K/5196K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9579): GC_FOR_ALLOC freed 91K, 19% free 4237K/5196K, paused 3ms, total 3ms
I/dalvikvm-heap( 9579): Grow heap (frag case) to 4.251MB for 58146-byte allocation
D/dalvikvm( 9579): GC_FOR_ALLOC freed 37K, 20% free 4256K/5256K, paused 3ms, total 3ms
D/dalvikvm( 9579): WAIT_FOR_CONCURRENT_GC blocked 10ms
I/System.out( 9579): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:43
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9579): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9579): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9579): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=695fc6dc-ceb4-427a-aa35-ea8b1c083eb2
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:134
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm( 9579): GC_FOR_ALLOC freed 106K, 19% free 4264K/5256K, paused 4ms, total 4ms
I/dalvikvm-heap( 9579): Grow heap (frag case) to 4.306MB for 87216-byte allocation
D/dalvikvm( 9579): GC_FOR_ALLOC freed 1K, 19% free 4348K/5344K, paused 4ms, total 4ms
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:4
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9579): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9579): GC_FOR_ALLOC freed 115K, 20% free 4316K/5344K, paused 6ms, total 6ms
I/dalvikvm-heap( 9579): Grow heap (frag case) to 4.348MB for 78720-byte allocation
D/dalvikvm( 9579): GC_FOR_ALLOC freed <1K, 20% free 4392K/5424K, paused 4ms, total 4ms
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9579): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 9579): GC_CONCURRENT freed 560K, 22% free 4237K/5424K, paused 3ms+0ms, total 7ms
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:125
I/System.out( 9579): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=695fc6dc-ceb4-427a-aa35-ea8b1c083eb2;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9579): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:138
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
D/dalvikvm( 9579): GC_CONCURRENT freed 365K, 22% free 4256K/5424K, paused 2ms+0ms, total 4ms
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9579): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9579): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=695fc6dc-ceb4-427a-aa35-ea8b1c083eb2;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9579): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9579): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9579): GC_CONCURRENT freed 371K, 22% free 4269K/5424K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9579): GC_CONCURRENT freed 380K, 22% free 4272K/5424K, paused 1ms+1ms, total 4ms
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:235
D/dalvikvm( 9579): GC_CONCURRENT freed 164K, 18% free 4501K/5424K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9579): GC_FOR_ALLOC freed 109K, 18% free 4495K/5424K, paused 2ms, total 3ms
I/dalvikvm-heap( 9579): Grow heap (frag case) to 4.523MB for 78720-byte allocation
D/dalvikvm( 9579): GC_FOR_ALLOC freed <1K, 17% free 4572K/5504K, paused 4ms, total 4ms
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:273
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:288
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9579): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9579): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 9579): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:295
I/com.newrelic.agent.android( 9579): Crash 66167059-bb9e-84ce-008a-dbe572ee6b5a successfully submitted.
I/System.out( 9579): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9579): GC_CONCURRENT freed 747K, 23% free 4274K/5504K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9579): GC_CONCURRENT freed 385K, 23% free 4273K/5504K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9579): GC_CONCURRENT freed 376K, 23% free 4280K/5504K, paused 2ms+0ms, total 6ms
I/Process (  470): Sending signal. PID: 9579 SIG: 9
E/AndroidRuntime( 9579): FATAL EXCEPTION: main
E/AndroidRuntime( 9579): Process: com.mint, PID: 9579
E/AndroidRuntime( 9579): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9579): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9579): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9579): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9579): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9579): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9579): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9579): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9579): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9579): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9579): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9579): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9579): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9579): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9579): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9579): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9579): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9579): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9579): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9579): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
D/dalvikvm(  746): GC_EXPLICIT freed 599K, 22% free 9155K/11636K, paused 0ms+1ms, total 10ms
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/ActivityManager(  470): Process com.mint (pid 9579) has died.
W/ActivityManager(  470): Force removing ActivityRecord{4ab0ca28 u0 com.mint/.core.overview.LoginActivity$XLarge t55}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_CALENDAR]}} from pid 470
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/FirebaseApp( 6059): Notifying background state change listeners.
D/yeshen  ( 6059): launcher onpause
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9629): ignoring registerObject request in thread=1
I/dalvikvm( 9629): ignoring registerObject request in thread=1
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=9629 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm( 9629): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9629): GC_CONCURRENT freed 226K, 9% free 3104K/3396K, paused 1ms+2ms, total 12ms
I/CrashlyticsCore( 9629): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9629): GC_CONCURRENT freed 228K, 8% free 3388K/3680K, paused 5ms+4ms, total 12ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9629): GC_CONCURRENT freed 199K, 7% free 3580K/3848K, paused 1ms+0ms, total 5ms
D/dalvikvm( 9629): GC_CONCURRENT freed 226K, 8% free 3862K/4156K, paused 4ms+1ms, total 12ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9629): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9629): VFY: unable to resolve instance field 38765
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9629): GC_CONCURRENT freed 233K, 7% free 4131K/4436K, paused 2ms+2ms, total 16ms
I/Authorization( 9629): <init> androidContext: 'com.mint.app.MintApp@4a7b0a6c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
I/dalvikvm( 9629): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 7ms
W/dalvikvm( 9629): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9629): VFY: replacing opcode 0x6e at 0x00f0
W/dalvikvm( 9629): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm( 9629): GC_CONCURRENT freed 168K, 6% free 4458K/4704K, paused 1ms+1ms, total 8ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/dalvikvm( 9629): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9629): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9629): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 4ms
W/dalvikvm( 9629): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9629): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9629): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9629): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9629): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9629): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9629): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9629): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9629): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9629): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9629): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9629): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9629): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9629): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9629): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9629): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9629): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 9ms
I/Authorization( 9629): getAuthorizationState
D/dalvikvm( 9629): GC_CONCURRENT freed 351K, 9% free 4519K/4952K, paused 2ms+1ms, total 5ms
I/com.newrelic.agent.android( 9629): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9629): Application state monitor has started
I/com.newrelic.agent.android( 9629): Analytics Controller started.
I/com.newrelic.agent.android( 9629): Measurement Engine initialized.
I/com.newrelic.agent.android( 9629): New Relic Agent v5.4.0
I/com.newrelic.agent.android( 9629): Harvester: connected
I/com.newrelic.agent.android( 9629): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9629): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9629): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9629): Harvester: Sending 0 analytics events.
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:19
I/System.out( 9629): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9629): GC_CONCURRENT freed 1579K, 33% free 3422K/5076K, paused 2ms+6ms, total 25ms
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9629): GC_FOR_ALLOC freed 27K, 33% free 3445K/5076K, paused 4ms, total 4ms
I/dalvikvm-heap( 9629): Grow heap (frag case) to 3.500MB for 79888-byte allocation
D/dalvikvm( 9629): GC_FOR_ALLOC freed <1K, 32% free 3523K/5156K, paused 4ms, total 4ms
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
D/dalvikvm( 9629): GC_FOR_ALLOC freed 144K, 32% free 3543K/5156K, paused 5ms, total 5ms
I/dalvikvm-heap( 9629): Grow heap (frag case) to 3.594MB for 79888-byte allocation
D/dalvikvm( 9629): GC_FOR_ALLOC freed 1K, 31% free 3620K/5236K, paused 7ms, total 7ms
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:7
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9629): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:23
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9629): GC_CONCURRENT freed 225K, 26% free 3906K/5236K, paused 3ms+1ms, total 15ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm( 9629): GC_CONCURRENT freed 331K, 25% free 3959K/5236K, paused 3ms+0ms, total 6ms
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:8
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/dalvikvm( 9629): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9629): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9629): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9629): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 9629): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 9629): VFY: unable to resolve instance field 38470
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:4
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:1
D/Lifecycle( 9629): onActivityCreated: core.overview.RouterActivity
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:5
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9629): GC_CONCURRENT freed 321K, 23% free 4069K/5236K, paused 2ms+11ms, total 17ms
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
W/dalvikvm( 9629): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9629): VFY: unable to resolve instance field 2423
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9629): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9629): VFY: unable to resolve instance field 2423
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9629): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
W/dalvikvm( 9629): VFY: unable to resolve instance field 38747
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0007
I/System.out( 9629): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 9629): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9629): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d
I/System.out( 9629): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9629): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9629): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/Authorization( 9629): getAuthorizationState
W/dalvikvm( 9629): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
W/dalvikvm( 9629): VFY: unable to resolve instance field 2423
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0000
I/System.out( 9629): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:2
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:22
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 9629): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9629): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
D/dalvikvm( 9629): GC_CONCURRENT freed 422K, 21% free 4158K/5236K, paused 2ms+4ms, total 26ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 4ms
W/dalvikvm( 9629): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9629): VFY: unable to resolve instance field 2423
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9629): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9629): VFY: unable to resolve instance field 2423
D/dalvikvm( 9629): VFY: replacing opcode 0x54 at 0x0002
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 10ms
I/System.out( 9629): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 9629
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
V/WebViewChromium( 9629): Binding Chromium to the background looper Looper (main, tid 1) {4a7ab8dc}
I/chromium( 9629): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 9629): Initializing chromium process, renderers=0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/chromium( 9629): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
D/libEGL  ( 9629): loaded /system/lib/egl/libEGL_adreno.so
D/        ( 9629): HostConnection::get() New Host Connection established 0xb8eecc20, tid 9629
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:186
D/libEGL  ( 9629): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 9629): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
D/dalvikvm( 9629): GC_CONCURRENT freed 448K, 20% free 4221K/5236K, paused 2ms+1ms, total 12ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:203
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9629): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 13ms
D/dalvikvm( 9629): GC_FOR_ALLOC freed 249K, 20% free 4229K/5236K, paused 9ms, total 9ms
I/dalvikvm-heap( 9629): Grow heap (frag case) to 4.243MB for 56388-byte allocation
D/dalvikvm( 9629): GC_FOR_ALLOC freed 1K, 20% free 4283K/5292K, paused 5ms, total 5ms
D/dalvikvm( 9629): GC_FOR_ALLOC freed 3K, 20% free 4282K/5292K, paused 6ms, total 6ms
I/dalvikvm-heap( 9629): Grow heap (frag case) to 4.846MB for 635808-byte allocation
D/dalvikvm( 9629): GC_FOR_ALLOC freed <1K, 18% free 4902K/5916K, paused 3ms, total 3ms
D/dalvikvm( 9629): GC_CONCURRENT freed 275K, 17% free 4914K/5916K, paused 3ms+2ms, total 27ms
W/c.t.tdm.TrustDefenderMo( 9629): Scan  already in progress or cancel requested, aborting
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=0c05539dca3a4965b346f55be9766ae1&osVersion=4.4.2
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:377
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:424
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9629): GC_CONCURRENT freed 474K, 16% free 5007K/5916K, paused 2ms+1ms, total 7ms
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:416
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:434
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:2
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9629): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9629): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:1
E/ActivityThread( 9629): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/AndroidRuntime( 9629): Shutting down VM
W/dalvikvm( 9629): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm( 9629): GC_FOR_ALLOC freed 472K, 12% free 5254K/5916K, paused 13ms, total 13ms
D/dalvikvm( 9629): GC_CONCURRENT freed 175K, 12% free 5354K/6064K, paused 4ms+1ms, total 18ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9629): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:2
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:220
D/dalvikvm( 9629): GC_CONCURRENT freed 827K, 15% free 5367K/6256K, paused 2ms+0ms, total 10ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9629): GC_FOR_ALLOC freed 135K, 13% free 5447K/6256K, paused 5ms, total 5ms
D/dalvikvm( 9629): WAIT_FOR_CONCURRENT_GC blocked 12ms
D/dalvikvm( 9629): GC_FOR_ALLOC freed 68K, 14% free 5473K/6344K, paused 6ms, total 6ms
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:259
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:263
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:244
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:244
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:283
I/com.newrelic.agent.android( 9629): Crash 3e367421-d8f4-4ad5-afcb-6d263238da65 successfully submitted.
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/CrashlyticsCore( 9629): Crashlytics report upload complete: 5AD190A500DE-0001-24B5-7D40EEEFDE0F.cls
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9629): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out( 9629): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9629): GC_CONCURRENT freed 951K, 17% free 5275K/6344K, paused 2ms+0ms, total 6ms
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:15
I/System.out( 9629): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:18
I/System.out( 9629): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9629): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9629): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9629): GC_CONCURRENT freed 644K, 17% free 5315K/6344K, paused 3ms+0ms, total 7ms
E/AndroidRuntime( 9629): FATAL EXCEPTION: main
E/AndroidRuntime( 9629): Process: com.mint, PID: 9629
E/AndroidRuntime( 9629): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9629): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9629): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9629): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9629): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9629): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9629): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9629): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9629): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9629): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9629): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9629): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9629): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9629): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9629): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9629): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9629): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9629): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9629): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9629): 	at dalvik.system.NativeStart.main(Native Method)
I/Process (  470): Sending signal. PID: 9629 SIG: 9
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9629) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9709 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/dalvikvm( 9709): ignoring registerObject request in thread=1
I/dalvikvm( 9709): ignoring registerObject request in thread=1
D/dalvikvm( 9709): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9709): GC_CONCURRENT freed 151K, 7% free 3192K/3408K, paused 6ms+7ms, total 15ms
I/CrashlyticsCore( 9709): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9709): GC_CONCURRENT freed 285K, 10% free 3419K/3768K, paused 2ms+0ms, total 10ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9709): GC_FOR_ALLOC freed 197K, 7% free 3725K/3992K, paused 4ms, total 4ms
D/dalvikvm( 9709): GC_CONCURRENT freed <1K, 7% free 3725K/3992K, paused 1ms+1ms, total 5ms
D/dalvikvm( 9709): GC_CONCURRENT freed 218K, 8% free 3998K/4300K, paused 2ms+0ms, total 9ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/dalvikvm( 9709): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9709): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9709): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 9709): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9709): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9709): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9709): GC_CONCURRENT freed 215K, 7% free 4271K/4568K, paused 2ms+0ms, total 10ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9709): GC_CONCURRENT freed 416K, 11% free 4355K/4848K, paused 2ms+1ms, total 11ms
W/dalvikvm( 9709): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 2ms
W/dalvikvm( 9709): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
D/dalvikvm( 9709): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
I/dalvikvm( 9709): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9709): VFY: unable to resolve instance field 38765
D/dalvikvm( 9709): VFY: replacing opcode 0x54 at 0x0005
W/dalvikvm( 9709): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9709): VFY: replacing opcode 0x6e at 0x0006
I/Authorization( 9709): <init> androidContext: 'com.mint.app.MintApp@4a7b10e0' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9709): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9709): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9709): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9709): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9709): VFY: replacing opcode 0x72 at 0x0006
D/dalvikvm( 9709): GC_CONCURRENT freed 1457K, 33% free 3281K/4848K, paused 2ms+1ms, total 4ms
I/System.out( 9709): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:1
I/System.out( 9709): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9709): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9709): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9709): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9709): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9709): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9709): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9709): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:8
I/System.out( 9709): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9709): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/Authorization( 9709): getAuthorizationState
D/dalvikvm( 9709): GC_FOR_ALLOC freed 111K, 32% free 3327K/4848K, paused 7ms, total 7ms
I/dalvikvm-heap( 9709): Grow heap (frag case) to 3.346MB for 39950-byte allocation
D/dalvikvm( 9709): GC_FOR_ALLOC freed <1K, 32% free 3366K/4888K, paused 3ms, total 3ms
D/dalvikvm( 9709): GC_FOR_ALLOC freed <1K, 32% free 3366K/4888K, paused 4ms, total 4ms
I/dalvikvm-heap( 9709): Grow heap (frag case) to 3.422MB for 79888-byte allocation
D/dalvikvm( 9709): GC_FOR_ALLOC freed <1K, 31% free 3444K/4968K, paused 4ms, total 4ms
I/com.newrelic.agent.android( 9709): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9709): Application state monitor has started
I/com.newrelic.agent.android( 9709): Analytics Controller started.
I/com.newrelic.agent.android( 9709): Measurement Engine initialized.
I/com.newrelic.agent.android( 9709): New Relic Agent v5.4.0
D/dalvikvm( 9709): GC_FOR_ALLOC freed 235K, 30% free 3488K/4968K, paused 11ms, total 11ms
I/com.newrelic.agent.android( 9709): Harvester: connected
I/com.newrelic.agent.android( 9709): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9709): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9709): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9709): Harvester: Sending 0 analytics events.
D/dalvikvm( 9709): GC_FOR_ALLOC freed 101K, 29% free 3558K/4968K, paused 4ms, total 4ms
I/dalvikvm-heap( 9709): Grow heap (frag case) to 3.610MB for 79888-byte allocation
D/dalvikvm( 9709): GC_FOR_ALLOC freed <1K, 28% free 3636K/5048K, paused 4ms, total 5ms
D/dalvikvm( 9709): GC_CONCURRENT freed 121K, 23% free 3898K/5048K, paused 1ms+1ms, total 5ms
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:113
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/dalvikvm( 9709): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9709): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9709): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9709): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 9709): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:1
I/System.out( 9709): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
W/dalvikvm( 9709): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9709): VFY: unable to resolve instance field 2423
D/dalvikvm( 9709): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9709): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9709): VFY: unable to resolve instance field 2423
D/dalvikvm( 9709): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9709): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9709): VFY: unable to resolve instance field 2423
D/dalvikvm( 9709): VFY: replacing opcode 0x54 at 0x0002
D/dalvikvm( 9709): GC_CONCURRENT freed 428K, 22% free 3982K/5048K, paused 2ms+2ms, total 15ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 9709): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d
I/System.out( 9709): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9709): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9709): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9709): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:19
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:1
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
W/dalvikvm( 9709): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:2
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
W/dalvikvm( 9709): VFY: unable to resolve instance field 2423
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
D/dalvikvm( 9709): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 9709): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9709): VFY: unable to resolve instance field 2423
D/dalvikvm( 9709): VFY: replacing opcode 0x54 at 0x0005
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:11
D/AndroidRuntime( 9709): Shutting down VM
W/dalvikvm( 9709): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 9709): GC_CONCURRENT freed 342K, 20% free 4041K/5048K, paused 3ms+12ms, total 19ms
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:13
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:6
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:6
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:2
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:1
D/dalvikvm( 9709): GC_CONCURRENT freed 202K, 14% free 4350K/5048K, paused 2ms+3ms, total 8ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9709): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 9709): GC_FOR_ALLOC freed 168K, 15% free 4335K/5048K, paused 5ms, total 5ms
I/dalvikvm-heap( 9709): Grow heap (frag case) to 4.347MB for 58146-byte allocation
D/dalvikvm( 9709): GC_FOR_ALLOC freed <1K, 15% free 4392K/5108K, paused 5ms, total 5ms
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:6
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9709): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9709): GC_FOR_ALLOC freed 67K, 15% free 4357K/5108K, paused 5ms, total 5ms
I/dalvikvm-heap( 9709): Grow heap (frag case) to 4.396MB for 87216-byte allocation
D/dalvikvm( 9709): GC_FOR_ALLOC freed <1K, 15% free 4442K/5196K, paused 7ms, total 7ms
D/dalvikvm( 9709): GC_FOR_ALLOC freed 67K, 16% free 4388K/5196K, paused 4ms, total 4ms
I/dalvikvm-heap( 9709): Grow heap (frag case) to 4.426MB for 86454-byte allocation
D/dalvikvm( 9709): GC_FOR_ALLOC freed 0K, 16% free 4472K/5284K, paused 4ms, total 4ms
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9709): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:182
I/System.out( 9709): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9709): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:184
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9709): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9709): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=d1533bbe-0860-4ac0-82df-cd1bd39d3e2d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9709): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9709): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9709): GC_CONCURRENT freed 610K, 20% free 4279K/5284K, paused 2ms+0ms, total 6ms
D/dalvikvm( 9709): GC_CONCURRENT freed 366K, 19% free 4297K/5284K, paused 1ms+1ms, total 4ms
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:222
D/dalvikvm( 9709): GC_CONCURRENT freed 293K, 16% free 4444K/5284K, paused 3ms+2ms, total 11ms
D/dalvikvm( 9709): GC_FOR_ALLOC freed 176K, 15% free 4522K/5284K, paused 4ms, total 4ms
I/dalvikvm-heap( 9709): Grow heap (frag case) to 4.557MB for 86454-byte allocation
D/dalvikvm( 9709): GC_FOR_ALLOC freed <1K, 15% free 4607K/5372K, paused 6ms, total 6ms
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:291
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:307
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9709): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9709): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:75
I/System.out( 9709): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:75
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:281
I/com.newrelic.agent.android( 9709): Crash 6a295a94-59b2-aba2-f791-d0eaf90a6ab6 successfully submitted.
I/System.out( 9709): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9709): GC_CONCURRENT freed 783K, 21% free 4286K/5372K, paused 1ms+1ms, total 4ms
D/dalvikvm( 9709): GC_CONCURRENT freed 385K, 21% free 4284K/5372K, paused 1ms+1ms, total 4ms
I/Process (  470): Sending signal. PID: 9709 SIG: 9
E/AndroidRuntime( 9709): FATAL EXCEPTION: main
E/AndroidRuntime( 9709): Process: com.mint, PID: 9709
E/AndroidRuntime( 9709): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9709): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9709): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9709): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9709): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9709): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9709): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9709): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9709): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9709): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9709): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9709): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9709): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9709): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9709): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9709): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9709): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9709): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9709): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9709): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9709) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9758 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9758): ignoring registerObject request in thread=1
I/dalvikvm( 9758): ignoring registerObject request in thread=1
D/dalvikvm( 9758): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9758): GC_CONCURRENT freed 159K, 7% free 3071K/3296K, paused 3ms+0ms, total 5ms
D/dalvikvm( 9758): GC_CONCURRENT freed 249K, 9% free 3318K/3636K, paused 2ms+0ms, total 7ms
D/dalvikvm( 9758): GC_CONCURRENT freed 117K, 6% free 3585K/3780K, paused 1ms+0ms, total 3ms
I/CrashlyticsCore( 9758): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9758): GC_CONCURRENT freed 158K, 6% free 3826K/4064K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9758): GC_CONCURRENT freed 144K, 6% free 4066K/4296K, paused 2ms+0ms, total 4ms
I/dalvikvm( 9758): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9758): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9758): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9758): GC_CONCURRENT freed 176K, 6% free 4276K/4536K, paused 2ms+0ms, total 6ms
I/dalvikvm( 9758): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9758): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9758): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9758): GC_CONCURRENT freed 340K, 9% free 4420K/4844K, paused 2ms+4ms, total 9ms
D/dalvikvm( 9758): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9758): VFY: unable to resolve instance field 38765
D/dalvikvm( 9758): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 9758): <init> androidContext: 'com.mint.app.MintApp@4a7b180c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9758): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9758): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9758): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9758): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9758): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9758): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9758): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9758): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9758): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9758): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9758): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9758): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9758): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9758): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9758): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9758): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9758): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9758): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9758): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9758): getAuthorizationState
D/dalvikvm( 9758): GC_CONCURRENT freed 1573K, 34% free 3304K/4956K, paused 1ms+0ms, total 4ms
I/com.newrelic.agent.android( 9758): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9758): Application state monitor has started
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9758): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9758): GC_FOR_ALLOC freed 210K, 33% free 3361K/4956K, paused 4ms, total 4ms
I/dalvikvm-heap( 9758): Grow heap (frag case) to 3.378MB for 39950-byte allocation
D/dalvikvm( 9758): GC_FOR_ALLOC freed <1K, 32% free 3399K/4996K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9758): Analytics Controller started.
D/dalvikvm( 9758): GC_FOR_ALLOC freed 28K, 32% free 3401K/4996K, paused 3ms, total 3ms
I/dalvikvm-heap( 9758): Grow heap (frag case) to 3.456MB for 79888-byte allocation
D/dalvikvm( 9758): GC_FOR_ALLOC freed <1K, 32% free 3478K/5076K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9758): Measurement Engine initialized.
I/com.newrelic.agent.android( 9758): New Relic Agent v5.4.0
D/dalvikvm( 9758): GC_FOR_ALLOC freed 133K, 32% free 3483K/5076K, paused 6ms, total 6ms
I/com.newrelic.agent.android( 9758): Harvester: connected
I/com.newrelic.agent.android( 9758): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9758): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9758): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9758): Harvester: Sending 0 analytics events.
D/dalvikvm( 9758): GC_FOR_ALLOC freed 108K, 31% free 3549K/5076K, paused 2ms, total 2ms
I/dalvikvm-heap( 9758): Grow heap (frag case) to 3.601MB for 79888-byte allocation
D/dalvikvm( 9758): GC_FOR_ALLOC freed <1K, 30% free 3627K/5156K, paused 3ms, total 3ms
D/dalvikvm( 9758): GC_CONCURRENT freed 110K, 25% free 3903K/5156K, paused 2ms+0ms, total 4ms
I/dalvikvm( 9758): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9758): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9758): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9758): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 9758): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 9758): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9758): VFY: unable to resolve instance field 2423
D/dalvikvm( 9758): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9758): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9758): VFY: unable to resolve instance field 2423
D/dalvikvm( 9758): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9758): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9758): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
W/dalvikvm( 9758): VFY: unable to resolve instance field 2423
D/dalvikvm( 9758): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9758): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b3220618-c241-4c12-ab6a-279838bbe1cd
W/dalvikvm( 9758): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9758): VFY: unable to resolve instance field 2423
D/dalvikvm( 9758): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9758): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9758): VFY: unable to resolve instance field 2423
D/dalvikvm( 9758): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9758): GC_CONCURRENT freed 356K, 24% free 3954K/5156K, paused 1ms+1ms, total 8ms
D/AndroidRuntime( 9758): Shutting down VM
W/dalvikvm( 9758): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm( 9758): GC_CONCURRENT freed 100K, 18% free 4239K/5156K, paused 3ms+0ms, total 6ms
D/dalvikvm( 9758): GC_FOR_ALLOC freed 70K, 19% free 4217K/5156K, paused 6ms, total 6ms
I/dalvikvm-heap( 9758): Grow heap (frag case) to 4.232MB for 58146-byte allocation
D/dalvikvm( 9758): GC_FOR_ALLOC freed <1K, 19% free 4273K/5216K, paused 4ms, total 4ms
I/System.out( 9758): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:50
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:141
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9758): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9758): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9758): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b3220618-c241-4c12-ab6a-279838bbe1cd
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9758): GC_FOR_ALLOC freed 121K, 19% free 4265K/5216K, paused 3ms, total 3ms
I/dalvikvm-heap( 9758): Grow heap (frag case) to 4.307MB for 87216-byte allocation
D/dalvikvm( 9758): GC_FOR_ALLOC freed <1K, 18% free 4350K/5304K, paused 4ms, total 4ms
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:1
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9758): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9758): GC_FOR_ALLOC freed 103K, 19% free 4314K/5304K, paused 5ms, total 5ms
I/dalvikvm-heap( 9758): Grow heap (frag case) to 4.343MB for 75980-byte allocation
D/dalvikvm( 9758): GC_FOR_ALLOC freed <1K, 19% free 4387K/5380K, paused 4ms, total 4ms
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9758): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 9758): GC_CONCURRENT freed 602K, 22% free 4225K/5380K, paused 2ms+0ms, total 8ms
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:158
I/System.out( 9758): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b3220618-c241-4c12-ab6a-279838bbe1cd;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9758): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:162
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9758): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9758): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b3220618-c241-4c12-ab6a-279838bbe1cd;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9758): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9758): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9758): GC_CONCURRENT freed 357K, 21% free 4275K/5380K, paused 1ms+0ms, total 6ms
D/dalvikvm( 9758): GC_CONCURRENT freed 384K, 21% free 4275K/5380K, paused 2ms+1ms, total 5ms
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:213
D/dalvikvm( 9758): GC_CONCURRENT freed 311K, 20% free 4348K/5380K, paused 2ms+0ms, total 4ms
D/dalvikvm( 9758): GC_FOR_ALLOC freed 199K, 17% free 4489K/5380K, paused 3ms, total 3ms
I/dalvikvm-heap( 9758): Grow heap (frag case) to 4.515MB for 75980-byte allocation
D/dalvikvm( 9758): GC_FOR_ALLOC freed <1K, 17% free 4563K/5456K, paused 4ms, total 4ms
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:255
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:270
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9758): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9758): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:77
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:273
I/com.newrelic.agent.android( 9758): Crash 62559f47-8fdb-6165-2860-a866a8c5adde successfully submitted.
I/System.out( 9758): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9758): GC_CONCURRENT freed 733K, 22% free 4276K/5456K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9758): GC_CONCURRENT freed 385K, 22% free 4274K/5456K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9758): GC_CONCURRENT freed 373K, 22% free 4302K/5456K, paused 2ms+0ms, total 6ms
I/System.out( 9758): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 9758 SIG: 9
E/AndroidRuntime( 9758): FATAL EXCEPTION: main
E/AndroidRuntime( 9758): Process: com.mint, PID: 9758
E/AndroidRuntime( 9758): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9758): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9758): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9758): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9758): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9758): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9758): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9758): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9758): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9758): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9758): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9758): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9758): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9758): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9758): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9758): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9758): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9758): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9758): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9758): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 9758) has died.
W/ActivityManager(  470): Force removing ActivityRecord{4aa2e1b0 u0 com.mint/.core.overview.LoginActivity$XLarge t56}: app died, no saved state
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/FirebaseApp( 6059): Notifying background state change listeners.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/dalvikvm(  668): GC_EXPLICIT freed 711K, 16% free 6700K/7960K, paused 1ms+29ms, total 59ms
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1507264, downTime=1507264, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aafe764 attribute=null, token = android.os.BinderProxy@4ac7d000
E/FastMixer(  168): did not receive expected priority boost
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
V/FlingTracker(  556): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  556): java.lang.Throwable
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  556): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  556): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  556): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  556): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  556): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  556): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  556): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/PanelView(  556): animationTick called with dtms=-5; nothing to do (h=0.0 v=0.0)
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {flg=0x10000000 cmp=air.com.hypah.io.slither/.AppEntry} from pid 6059
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cyanogenmod.filemanager/.activities.NavigationActivity bnds=[334,174][538,301] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
D/dalvikvm( 6059): GC_CONCURRENT freed 7790K, 7% free 117752K/125604K, paused 3ms+4ms, total 44ms
D/dalvikvm( 6059): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/ActivityManager(  470): START u0 {flg=0x10000000 cmp=air.com.hypah.io.slither/.AppEntry} from pid 6059
I/ActivityManager(  470): START u0 {flg=0x10000000 cmp=air.com.hypah.io.slither/.AppEntry} from pid 6059
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
V/FlingTracker(  556): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  556): java.lang.Throwable
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  556): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  556): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  556): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  556): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  556): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  556): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  556): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=co.happybits.marcopolo/.ui.screens.splash.SplashActivity bnds=[334,428][538,555] (has extras)} from pid 6059
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.facebook.lite/.MainActivity bnds=[538,301][742,428] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
V/FlingTracker(  556): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  556): java.lang.Throwable
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  556): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  556): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  556): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  556): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  556): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  556): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  556): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=9848 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9848): ignoring registerObject request in thread=1
I/dalvikvm( 9848): ignoring registerObject request in thread=1
D/dalvikvm( 9848): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9848): GC_CONCURRENT freed 173K, 7% free 3183K/3420K, paused 2ms+2ms, total 6ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9848): GC_CONCURRENT freed 274K, 9% free 3422K/3760K, paused 3ms+3ms, total 11ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/CrashlyticsCore( 9848): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9848): GC_CONCURRENT freed 175K, 7% free 3750K/3996K, paused 2ms+0ms, total 8ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 12ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 12ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 12ms
I/dalvikvm( 9848): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9848): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9848): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9848): GC_CONCURRENT freed 211K, 7% free 4037K/4324K, paused 2ms+0ms, total 8ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 9848): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/dalvikvm( 9848): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9848): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9848): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9848): GC_CONCURRENT freed 239K, 7% free 4231K/4548K, paused 1ms+1ms, total 4ms
D/dalvikvm( 9848): GC_CONCURRENT freed 285K, 8% free 4409K/4780K, paused 2ms+4ms, total 8ms
D/dalvikvm( 9848): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9848): VFY: unable to resolve instance field 38765
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 9848): <init> androidContext: 'com.mint.app.MintApp@4a7b1fe8' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm( 9848): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9848): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9848): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9848): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9848): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9848): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9848): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9848): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9848): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9848): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9848): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9848): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9848): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9848): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9848): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9848): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9848): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9848): GC_CONCURRENT freed 1547K, 34% free 3282K/4904K, paused 1ms+1ms, total 7ms
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9848): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9848): getAuthorizationState
I/com.newrelic.agent.android( 9848): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/com.newrelic.agent.android( 9848): Application state monitor has started
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9848): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9848): GC_FOR_ALLOC freed 230K, 31% free 3399K/4904K, paused 8ms, total 8ms
I/dalvikvm-heap( 9848): Grow heap (frag case) to 3.454MB for 79888-byte allocation
D/dalvikvm( 9848): GC_FOR_ALLOC freed <1K, 31% free 3476K/4984K, paused 5ms, total 5ms
I/com.newrelic.agent.android( 9848): Analytics Controller started.
I/com.newrelic.agent.android( 9848): Measurement Engine initialized.
I/com.newrelic.agent.android( 9848): New Relic Agent v5.4.0
D/dalvikvm( 9848): GC_FOR_ALLOC freed 169K, 31% free 3486K/4984K, paused 2ms, total 2ms
I/com.newrelic.agent.android( 9848): Harvester: connected
I/com.newrelic.agent.android( 9848): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9848): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9848): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9848): Harvester: Sending 0 analytics events.
D/dalvikvm( 9848): GC_FOR_ALLOC freed 69K, 29% free 3544K/4984K, paused 3ms, total 4ms
I/dalvikvm-heap( 9848): Grow heap (frag case) to 3.596MB for 79888-byte allocation
D/dalvikvm( 9848): GC_FOR_ALLOC freed <1K, 29% free 3622K/5064K, paused 3ms, total 3ms
D/dalvikvm( 9848): GC_FOR_ALLOC freed 130K, 28% free 3676K/5064K, paused 6ms, total 8ms
D/dalvikvm( 9848): GC_CONCURRENT freed 173K, 24% free 3898K/5064K, paused 3ms+1ms, total 12ms
I/dalvikvm( 9848): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9848): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9848): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9848): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out( 9848): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 9848): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9848): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=1bd34235-588b-4970-8b93-fbe94e503d64
D/dalvikvm( 9848): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm( 9848): VFY: unable to resolve instance field 38470
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0005
D/Lifecycle( 9848): onActivityCreated: core.overview.RouterActivity
W/dalvikvm( 9848): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9848): VFY: unable to resolve instance field 2423
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9848): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9848): VFY: unable to resolve instance field 2423
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9848): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm( 9848): VFY: unable to resolve instance field 38747
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0007
D/dalvikvm( 9848): GC_CONCURRENT freed 288K, 21% free 4002K/5064K, paused 3ms+1ms, total 10ms
I/System.out( 9848): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9848): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/Authorization( 9848): getAuthorizationState
W/dalvikvm( 9848): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9848): VFY: unable to resolve instance field 2423
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9848): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9848): VFY: unable to resolve instance field 2423
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9848): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9848): VFY: unable to resolve instance field 2423
D/dalvikvm( 9848): VFY: replacing opcode 0x54 at 0x0002
D/ConnectivityService(  470): Sampling interval elapsed, updating statistics ..
D/ConnectivityService(  470): Done.
D/ConnectivityService(  470): Setting timer for 720seconds
V/WebViewChromium( 9848): Binding Chromium to the background looper Looper (main, tid 1) {4a7ace58}
I/chromium( 9848): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain( 9848): Initializing chromium process, renderers=0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 9848
I/System.out( 9848): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:25
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9848): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
D/dalvikvm( 9848): GC_CONCURRENT freed 282K, 19% free 4104K/5064K, paused 1ms+1ms, total 4ms
I/System.out( 9848): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:77
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=1bd34235-588b-4970-8b93-fbe94e503d64
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:192
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/chromium( 9848): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
D/dalvikvm( 9848): GC_CONCURRENT freed 320K, 18% free 4168K/5064K, paused 2ms+0ms, total 10ms
D/libEGL  ( 9848): loaded /system/lib/egl/libEGL_adreno.so
D/        ( 9848): HostConnection::get() New Host Connection established 0xb8e97b30, tid 9848
D/libEGL  ( 9848): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 9848): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm( 9848): GC_CONCURRENT freed 473K, 17% free 4205K/5064K, paused 2ms+1ms, total 16ms
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:173
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=1bd34235-588b-4970-8b93-fbe94e503d64;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:182
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=1bd34235-588b-4970-8b93-fbe94e503d64;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9848): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9848): GC_FOR_ALLOC freed 295K, 17% free 4214K/5064K, paused 3ms, total 3ms
I/dalvikvm-heap( 9848): Grow heap (frag case) to 4.228MB for 56388-byte allocation
D/dalvikvm( 9848): GC_FOR_ALLOC freed 0K, 17% free 4269K/5120K, paused 4ms, total 4ms
D/dalvikvm( 9848): GC_FOR_ALLOC freed 5K, 17% free 4268K/5120K, paused 6ms, total 7ms
I/dalvikvm-heap( 9848): Grow heap (frag case) to 4.833MB for 635808-byte allocation
D/dalvikvm( 9848): GC_FOR_ALLOC freed <1K, 15% free 4888K/5744K, paused 4ms, total 4ms
D/dalvikvm( 9848): GC_CONCURRENT freed 186K, 15% free 4909K/5744K, paused 2ms+26ms, total 34ms
D/AndroidRuntime( 9848): Shutting down VM
W/dalvikvm( 9848): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
E/ActivityThread( 9848): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/dalvikvm( 9848): VMStack.getTraceBuf: threadObj 0x9502a288 not active
I/dalvikvm( 9848): VMStack.getTraceBuf: threadObj 0x94fc2b18 not active
W/c.t.tdm.TrustDefenderMo( 9848): Scan  already in progress or cancel requested, aborting
D/dalvikvm( 9848): GC_CONCURRENT freed 300K, 10% free 5207K/5744K, paused 2ms+0ms, total 6ms
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:329
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:347
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9848): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:9
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:2
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:5
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:4
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 9848): GC_CONCURRENT freed 694K, 14% free 5177K/6016K, paused 1ms+0ms, total 5ms
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:5
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:6
I/System.out( 9848): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9848): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:2
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9848): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:2
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=57b46bd3d2fe424c9ff1d570d5e8cc83&osVersion=4.4.2
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:496
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:504
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9848): GC_CONCURRENT freed 688K, 14% free 5221K/6016K, paused 2ms+0ms, total 6ms
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:225
D/dalvikvm( 9848): GC_FOR_ALLOC freed 242K, 11% free 5401K/6056K, paused 4ms, total 4ms
D/dalvikvm( 9848): GC_FOR_ALLOC freed 254K, 15% free 5392K/6288K, paused 3ms, total 3ms
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9848): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9848): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9848): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:280
I/com.newrelic.agent.android( 9848): Crash 7b040cdf-cd98-77af-30ea-663c3adcdff9 successfully submitted.
I/System.out( 9848): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9848): GC_CONCURRENT freed 866K, 17% free 5253K/6288K, paused 2ms+1ms, total 6ms
D/dalvikvm( 9848): GC_CONCURRENT freed 678K, 17% free 5273K/6288K, paused 3ms+1ms, total 7ms
I/Process (  470): Sending signal. PID: 9848 SIG: 9
E/AndroidRuntime( 9848): FATAL EXCEPTION: main
E/AndroidRuntime( 9848): Process: com.mint, PID: 9848
E/AndroidRuntime( 9848): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9848): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9848): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9848): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9848): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9848): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9848): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9848): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9848): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9848): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9848): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9848): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9848): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9848): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9848): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9848): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9848): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9848): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9848): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9848): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9848) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9929 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9929): ignoring registerObject request in thread=1
I/dalvikvm( 9929): ignoring registerObject request in thread=1
D/dalvikvm( 9929): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9929): GC_CONCURRENT freed 165K, 7% free 3066K/3296K, paused 1ms+0ms, total 4ms
I/CrashlyticsCore( 9929): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9929): GC_CONCURRENT freed 211K, 8% free 3239K/3516K, paused 3ms+0ms, total 4ms
D/dalvikvm( 9929): GC_CONCURRENT freed 213K, 8% free 3537K/3816K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/dalvikvm( 9929): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9929): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9929): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm( 9929): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
D/dalvikvm( 9929): GC_CONCURRENT freed 233K, 8% free 3810K/4112K, paused 2ms+1ms, total 11ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 8ms
W/dalvikvm( 9929): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9929): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9929): GC_CONCURRENT freed 142K, 6% free 4052K/4276K, paused 2ms+1ms, total 5ms
D/dalvikvm( 9929): GC_CONCURRENT freed 152K, 6% free 4290K/4528K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9929): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9929): VFY: unable to resolve instance field 38765
D/dalvikvm( 9929): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9929): GC_CONCURRENT freed 328K, 9% free 4456K/4864K, paused 1ms+4ms, total 8ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/Authorization( 9929): <init> androidContext: 'com.mint.app.MintApp@4a7b265c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 6ms
W/dalvikvm( 9929): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm( 9929): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9929): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9929): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9929): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9929): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9929): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9929): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9929): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9929): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9929): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9929): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9929): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9929): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9929): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9929): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9929): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9929): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9929): getAuthorizationState
D/dalvikvm( 9929): GC_CONCURRENT freed 1500K, 32% free 3370K/4952K, paused 1ms+0ms, total 4ms
I/com.newrelic.agent.android( 9929): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android( 9929): Application state monitor has started
I/com.newrelic.agent.android( 9929): Analytics Controller started.
I/com.newrelic.agent.android( 9929): Measurement Engine initialized.
I/com.newrelic.agent.android( 9929): New Relic Agent v5.4.0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9929): GC_FOR_ALLOC freed 291K, 31% free 3438K/4952K, paused 4ms, total 5ms
I/dalvikvm-heap( 9929): Grow heap (frag case) to 3.492MB for 79888-byte allocation
D/dalvikvm( 9929): GC_FOR_ALLOC freed 40K, 31% free 3476K/5032K, paused 8ms, total 8ms
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9929): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 9929): GC_FOR_ALLOC freed 16K, 30% free 3530K/5032K, paused 6ms, total 6ms
I/dalvikvm-heap( 9929): Grow heap (frag case) to 3.583MB for 79888-byte allocation
D/dalvikvm( 9929): GC_FOR_ALLOC freed <1K, 30% free 3608K/5112K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9929): Harvester: connected
I/com.newrelic.agent.android( 9929): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9929): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9929): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9929): Harvester: Sending 0 analytics events.
D/dalvikvm( 9929): GC_CONCURRENT freed 182K, 23% free 3938K/5112K, paused 2ms+1ms, total 11ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/dalvikvm( 9929): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9929): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9929): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9929): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 9929): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9929): VFY: unable to resolve instance field 2423
D/dalvikvm( 9929): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9929): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9929): VFY: unable to resolve instance field 2423
D/dalvikvm( 9929): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9929): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9929): VFY: unable to resolve instance field 2423
D/dalvikvm( 9929): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9929): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out( 9929): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9929): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5d3aedf4-6c5b-493d-9765-55449326038a
D/dalvikvm( 9929): GC_CONCURRENT freed 387K, 23% free 3977K/5112K, paused 2ms+3ms, total 16ms
W/dalvikvm( 9929): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9929): VFY: unable to resolve instance field 2423
D/dalvikvm( 9929): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9929): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9929): VFY: unable to resolve instance field 2423
D/dalvikvm( 9929): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime( 9929): Shutting down VM
W/dalvikvm( 9929): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 9929): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:35
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9929): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9929): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9929): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5d3aedf4-6c5b-493d-9765-55449326038a
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:128
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9929): GC_CONCURRENT freed 248K, 18% free 4228K/5112K, paused 1ms+0ms, total 12ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:1
D/dalvikvm( 9929): GC_FOR_ALLOC freed 41K, 18% free 4239K/5112K, paused 3ms, total 3ms
I/dalvikvm-heap( 9929): Grow heap (frag case) to 4.235MB for 38766-byte allocation
D/dalvikvm( 9929): GC_FOR_ALLOC freed <1K, 17% free 4276K/5152K, paused 4ms, total 4ms
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:4
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
D/dalvikvm( 9929): GC_FOR_ALLOC freed 151K, 17% free 4279K/5152K, paused 5ms, total 6ms
I/dalvikvm-heap( 9929): Grow heap (frag case) to 4.292MB for 58146-byte allocation
D/dalvikvm( 9929): GC_FOR_ALLOC freed 0K, 17% free 4336K/5212K, paused 4ms, total 4ms
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9929): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9929): GC_FOR_ALLOC freed 204K, 18% free 4289K/5212K, paused 9ms, total 9ms
I/dalvikvm-heap( 9929): Grow heap (frag case) to 4.331MB for 87216-byte allocation
D/dalvikvm( 9929): GC_FOR_ALLOC freed 5K, 18% free 4369K/5300K, paused 5ms, total 5ms
D/dalvikvm( 9929): GC_FOR_ALLOC freed 146K, 18% free 4355K/5300K, paused 4ms, total 5ms
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9929): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:179
I/System.out( 9929): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5d3aedf4-6c5b-493d-9765-55449326038a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9929): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:183
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9929): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9929): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=5d3aedf4-6c5b-493d-9765-55449326038a;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9929): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9929): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:1
D/dalvikvm( 9929): GC_CONCURRENT freed 578K, 20% free 4256K/5300K, paused 2ms+1ms, total 6ms
D/dalvikvm( 9929): GC_CONCURRENT freed 444K, 20% free 4266K/5300K, paused 3ms+2ms, total 11ms
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:228
D/dalvikvm( 9929): GC_CONCURRENT freed 334K, 17% free 4444K/5300K, paused 1ms+1ms, total 7ms
D/dalvikvm( 9929): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9929): GC_FOR_ALLOC freed 136K, 17% free 4445K/5300K, paused 3ms, total 3ms
I/dalvikvm-heap( 9929): Grow heap (frag case) to 4.483MB for 87216-byte allocation
D/dalvikvm( 9929): GC_FOR_ALLOC freed <1K, 16% free 4530K/5388K, paused 4ms, total 4ms
D/dalvikvm( 9929): GC_FOR_ALLOC freed 62K, 17% free 4475K/5388K, paused 7ms, total 7ms
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:316
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:335
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9929): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9929): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:83
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:83
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:292
I/com.newrelic.agent.android( 9929): Crash 6bbb2072-9b48-9e95-0e0e-8dd8e41fa8b4 successfully submitted.
I/System.out( 9929): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9929): GC_CONCURRENT freed 622K, 21% free 4270K/5388K, paused 3ms+0ms, total 7ms
D/dalvikvm( 9929): GC_CONCURRENT freed 385K, 21% free 4268K/5388K, paused 1ms+0ms, total 4ms
D/dalvikvm( 9929): GC_CONCURRENT freed 403K, 21% free 4304K/5388K, paused 1ms+1ms, total 10ms
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9929): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 9929): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/Process (  470): Sending signal. PID: 9929 SIG: 9
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
E/AndroidRuntime( 9929): FATAL EXCEPTION: main
E/AndroidRuntime( 9929): Process: com.mint, PID: 9929
E/AndroidRuntime( 9929): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9929): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9929): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9929): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9929): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9929): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9929): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9929): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9929): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9929): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9929): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9929): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9929): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9929): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9929): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9929): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9929): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9929): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9929): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9929): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 9929) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=9978 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm( 9978): ignoring registerObject request in thread=1
I/dalvikvm( 9978): ignoring registerObject request in thread=1
D/dalvikvm(  470): GC_EXPLICIT freed 1575K, 45% free 13406K/24284K, paused 2ms+2ms, total 16ms
D/dalvikvm( 9978): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 9978): GC_CONCURRENT freed 183K, 8% free 3175K/3420K, paused 2ms+3ms, total 7ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/CrashlyticsCore( 9978): Initializing Crashlytics 2.3.5.79
D/dalvikvm( 9978): GC_CONCURRENT freed 242K, 9% free 3443K/3748K, paused 1ms+4ms, total 7ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 9978): GC_CONCURRENT freed 212K, 8% free 3621K/3904K, paused 1ms+1ms, total 4ms
I/dalvikvm( 9978): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm( 9978): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm( 9978): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm( 9978): GC_CONCURRENT freed 169K, 7% free 3840K/4088K, paused 1ms+0ms, total 4ms
I/dalvikvm( 9978): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm( 9978): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 9978): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm( 9978): GC_CONCURRENT freed 236K, 7% free 4109K/4416K, paused 1ms+1ms, total 7ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 9978): GC_CONCURRENT freed 196K, 7% free 4299K/4580K, paused 3ms+0ms, total 6ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 18ms
D/dalvikvm( 9978): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm( 9978): VFY: unable to resolve instance field 38765
D/dalvikvm( 9978): VFY: replacing opcode 0x54 at 0x0005
I/Authorization( 9978): <init> androidContext: 'com.mint.app.MintApp@4a7b2d84' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm( 9978): GC_CONCURRENT freed 282K, 8% free 4511K/4872K, paused 2ms+0ms, total 7ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 2ms
W/dalvikvm( 9978): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 5ms
W/dalvikvm( 9978): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9978): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm( 9978): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm( 9978): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm( 9978): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm( 9978): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm( 9978): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm( 9978): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm( 9978): VFY: replacing opcode 0x72 at 0x0006
I/System.out( 9978): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out( 9978): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out( 9978): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out( 9978): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out( 9978): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out( 9978): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out( 9978): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9978): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out( 9978): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization( 9978): getAuthorizationState
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android( 9978): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out( 9978): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 9978): GC_CONCURRENT freed 374K, 9% free 4568K/5016K, paused 2ms+1ms, total 5ms
I/com.newrelic.agent.android( 9978): Application state monitor has started
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:1
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 9978): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android( 9978): Analytics Controller started.
I/com.newrelic.agent.android( 9978): Measurement Engine initialized.
I/com.newrelic.agent.android( 9978): New Relic Agent v5.4.0
D/dalvikvm( 9978): GC_FOR_ALLOC freed 1416K, 32% free 3535K/5136K, paused 6ms, total 6ms
I/dalvikvm-heap( 9978): Grow heap (frag case) to 3.586MB for 79888-byte allocation
D/dalvikvm( 9978): GC_FOR_ALLOC freed <1K, 31% free 3613K/5216K, paused 3ms, total 3ms
I/com.newrelic.agent.android( 9978): Harvester: connected
I/com.newrelic.agent.android( 9978): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android( 9978): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android( 9978): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android( 9978): Harvester: Sending 0 analytics events.
D/dalvikvm( 9978): GC_CONCURRENT freed 212K, 26% free 3911K/5216K, paused 2ms+1ms, total 7ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/dalvikvm( 9978): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm( 9978): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm( 9978): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL( 9978): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm( 9978): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9978): VFY: unable to resolve instance field 2423
D/dalvikvm( 9978): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm( 9978): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9978): VFY: unable to resolve instance field 2423
D/dalvikvm( 9978): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm( 9978): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm( 9978): VFY: unable to resolve instance field 2423
D/dalvikvm( 9978): VFY: replacing opcode 0x54 at 0x0002
I/System.out( 9978): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm( 9978): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out( 9978): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out( 9978): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out( 9978): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=be2dc7cc-bbaf-43f4-81c7-91d79900bf6c
W/dalvikvm( 9978): VFY: unable to resolve instance field 2423
D/dalvikvm( 9978): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm( 9978): GC_CONCURRENT freed 325K, 24% free 4009K/5216K, paused 2ms+2ms, total 11ms
D/dalvikvm( 9978): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm( 9978): VFY: unable to resolve instance field 2423
D/dalvikvm( 9978): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime( 9978): Shutting down VM
W/dalvikvm( 9978): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out( 9978): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:35
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9978): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 9978): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9978): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=be2dc7cc-bbaf-43f4-81c7-91d79900bf6c
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:128
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm( 9978): GC_CONCURRENT freed 235K, 18% free 4283K/5216K, paused 1ms+0ms, total 9ms
D/dalvikvm( 9978): GC_FOR_ALLOC freed 34K, 19% free 4253K/5216K, paused 3ms, total 3ms
I/dalvikvm-heap( 9978): Grow heap (frag case) to 4.268MB for 58146-byte allocation
D/dalvikvm( 9978): GC_FOR_ALLOC freed <1K, 19% free 4310K/5276K, paused 4ms, total 4ms
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9978): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm( 9978): GC_FOR_ALLOC freed 99K, 19% free 4287K/5276K, paused 6ms, total 6ms
I/dalvikvm-heap( 9978): Grow heap (frag case) to 4.329MB for 87216-byte allocation
D/dalvikvm( 9978): GC_FOR_ALLOC freed <1K, 19% free 4372K/5364K, paused 3ms, total 3ms
D/dalvikvm( 9978): GC_FOR_ALLOC freed 64K, 20% free 4318K/5364K, paused 5ms, total 5ms
I/dalvikvm-heap( 9978): Grow heap (frag case) to 4.348MB for 77114-byte allocation
D/dalvikvm( 9978): GC_FOR_ALLOC freed 0K, 20% free 4393K/5440K, paused 4ms, total 4ms
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 9978): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm( 9978): GC_CONCURRENT freed 561K, 23% free 4222K/5440K, paused 2ms+0ms, total 5ms
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:165
I/System.out( 9978): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=be2dc7cc-bbaf-43f4-81c7-91d79900bf6c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9978): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:168
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 9978): GC_CONCURRENT freed 343K, 22% free 4263K/5440K, paused 1ms+1ms, total 4ms
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:5
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 9978): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 9978): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=be2dc7cc-bbaf-43f4-81c7-91d79900bf6c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9978): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out( 9978): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9978): GC_CONCURRENT freed 371K, 22% free 4276K/5440K, paused 1ms+1ms, total 4ms
D/dalvikvm( 9978): GC_CONCURRENT freed 380K, 22% free 4280K/5440K, paused 1ms+0ms, total 4ms
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:231
D/dalvikvm( 9978): GC_CONCURRENT freed 194K, 16% free 4588K/5440K, paused 1ms+1ms, total 7ms
D/dalvikvm( 9978): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/dalvikvm-heap( 9978): Grow heap (frag case) to 4.613MB for 77114-byte allocation
D/dalvikvm( 9978): GC_FOR_ALLOC freed 219K, 20% free 4444K/5516K, paused 4ms, total 4ms
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:294
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:320
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 9978): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 9978): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:89
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:89
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:286
I/com.newrelic.agent.android( 9978): Crash c650d195-b8bb-2106-bd6a-b586d735e132 successfully submitted.
I/System.out( 9978): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 9978): GC_CONCURRENT freed 573K, 22% free 4315K/5516K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9978): GC_CONCURRENT freed 422K, 23% free 4277K/5516K, paused 2ms+0ms, total 5ms
D/dalvikvm( 9978): GC_CONCURRENT freed 377K, 23% free 4283K/5516K, paused 1ms+0ms, total 4ms
I/System.out( 9978): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 9978 SIG: 9
E/AndroidRuntime( 9978): FATAL EXCEPTION: main
E/AndroidRuntime( 9978): Process: com.mint, PID: 9978
E/AndroidRuntime( 9978): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime( 9978): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime( 9978): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime( 9978): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime( 9978): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime( 9978): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime( 9978): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime( 9978): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime( 9978): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime( 9978): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime( 9978): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime( 9978): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime( 9978): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 9978): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 9978): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 9978): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 9978): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 9978): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 9978): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 9978): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 9978) has died.
W/ActivityManager(  470): Force removing ActivityRecord{4aa30490 u0 com.mint/.core.overview.LoginActivity$XLarge t57}: app died, no saved state
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
D/FirebaseApp( 6059): Notifying background state change listeners.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a96407c attribute=null, token = android.os.BinderProxy@4ac7d000
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
I/qtaguid ( 6059): Untagging socket 67 failed errno=-13
W/NetworkManagementSocketTagger( 6059): untagSocket(67) failed with errno -13
I/qtaguid ( 6059): Tagging socket 67 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger( 6059): tagSocketFd(67, 1239581248, -1) failed with errno-13
I/qtaguid ( 6059): Tagging socket 104 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger( 6059): tagSocketFd(104, 1239581248, -1) failed with errno-13
I/ActivityManager(  470): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 6059
W/PhoneFallbackEventHandler( 6059): No activity found for android.intent.action.CALL_BUTTON.
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/Launcher( 6059): No global search activity found.
W/Launcher( 6059): No global search activity found.
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=10045 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/ViewRootImpl( 6059): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-3.0, y[0]=-1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=19, eventTime=1512362, downTime=-1, deviceId=0, source=0x10004 }
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10045): ignoring registerObject request in thread=1
I/dalvikvm(10045): ignoring registerObject request in thread=1
D/dalvikvm(10045): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10045): GC_CONCURRENT freed 164K, 7% free 3066K/3296K, paused 2ms+0ms, total 7ms
D/dalvikvm(10045): GC_CONCURRENT freed 243K, 9% free 3333K/3640K, paused 3ms+0ms, total 9ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/CrashlyticsCore(10045): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10045): GC_CONCURRENT freed 205K, 8% free 3633K/3908K, paused 3ms+0ms, total 8ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10045): GC_CONCURRENT freed 150K, 6% free 3870K/4104K, paused 0ms+0ms, total 2ms
D/dalvikvm(10045): GC_CONCURRENT freed 236K, 7% free 4134K/4444K, paused 2ms+1ms, total 12ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm(10045): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10045): VFY: unable to resolve instance field 38765
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10045): <init> androidContext: 'com.mint.app.MintApp@4a7b3560' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm(10045): GC_CONCURRENT freed 215K, 7% free 4420K/4708K, paused 1ms+2ms, total 5ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/dalvikvm(10045): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10045): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10045): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10045): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10045): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10045): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10045): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10045): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10045): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10045): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10045): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10045): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:1
I/System.out(10045): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10045): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10045): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10045): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10045): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10045): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/dalvikvm(10045): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10045): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10045): GC_CONCURRENT freed 391K, 10% free 4511K/4976K, paused 3ms+4ms, total 13ms
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10045): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/dalvikvm(10045): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10045): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10045): VFY: replacing opcode 0x6e at 0x000a
I/Authorization(10045): getAuthorizationState
I/com.newrelic.agent.android(10045): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/com.newrelic.agent.android(10045): Application state monitor has started
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:1
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10045): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android(10045): Analytics Controller started.
D/dalvikvm(10045): GC_CONCURRENT freed 1565K, 32% free 3497K/5132K, paused 3ms+0ms, total 10ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/com.newrelic.agent.android(10045): Measurement Engine initialized.
I/com.newrelic.agent.android(10045): New Relic Agent v5.4.0
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 17ms
D/dalvikvm(10045): GC_FOR_ALLOC freed 142K, 33% free 3488K/5132K, paused 2ms, total 3ms
I/com.newrelic.agent.android(10045): Harvester: connected
I/com.newrelic.agent.android(10045): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10045): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10045): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10045): Harvester: Sending 0 analytics events.
D/dalvikvm(10045): GC_FOR_ALLOC freed 68K, 31% free 3545K/5132K, paused 4ms, total 4ms
I/dalvikvm-heap(10045): Grow heap (frag case) to 3.597MB for 79888-byte allocation
D/dalvikvm(10045): GC_FOR_ALLOC freed <1K, 31% free 3623K/5212K, paused 3ms, total 3ms
D/dalvikvm(10045): GC_CONCURRENT freed 150K, 26% free 3857K/5212K, paused 2ms+0ms, total 8ms
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:87
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/dalvikvm(10045): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10045): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10045): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10045): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm(10045): GC_CONCURRENT freed 405K, 24% free 3964K/5212K, paused 9ms+2ms, total 14ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10045): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm(10045): VFY: unable to resolve instance field 38470
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 12ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 16ms
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:16
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 15ms
D/dalvikvm(10045): WAIT_FOR_CONCURRENT_GC blocked 17ms
D/Lifecycle(10045): onActivityCreated: core.overview.RouterActivity
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
W/dalvikvm(10045): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10045): VFY: unable to resolve instance field 2423
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10045): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10045): VFY: unable to resolve instance field 2423
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0005
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:7
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(10045): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
D/dalvikvm(10045): GC_CONCURRENT freed 350K, 22% free 4069K/5212K, paused 3ms+2ms, total 11ms
W/dalvikvm(10045): VFY: unable to resolve instance field 38747
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0007
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:7
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:3
I/System.out(10045): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10045): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/Authorization(10045): getAuthorizationState
W/dalvikvm(10045): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10045): VFY: unable to resolve instance field 2423
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10045): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10045): VFY: unable to resolve instance field 2423
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10045): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10045): VFY: unable to resolve instance field 2423
D/dalvikvm(10045): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 10045
I/System.out(10045): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
V/WebViewChromium(10045): Binding Chromium to the background looper Looper (main, tid 1) {4a7ae3d0}
I/chromium(10045): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
D/dalvikvm(10045): GC_CONCURRENT freed 331K, 21% free 4158K/5212K, paused 3ms+1ms, total 14ms
I/System.out(10045): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:1
I/System.out(10045): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:1
I/BrowserProcessMain(10045): Initializing chromium process, renderers=0
I/System.out(10045): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:1
I/System.out(10045): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6
I/System.out(10045): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:1
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10045): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:2
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:2
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/chromium(10045): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
D/dalvikvm(10045): GC_CONCURRENT freed 350K, 20% free 4195K/5212K, paused 1ms+1ms, total 18ms
D/libEGL  (10045): loaded /system/lib/egl/libEGL_adreno.so
D/        (10045): HostConnection::get() New Host Connection established 0xb8ecbd00, tid 10045
D/libEGL  (10045): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (10045): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm(10045): GC_CONCURRENT freed 433K, 20% free 4213K/5212K, paused 1ms+4ms, total 11ms
D/dalvikvm(10045): GC_FOR_ALLOC freed 60K, 20% free 4216K/5212K, paused 5ms, total 5ms
I/dalvikvm-heap(10045): Grow heap (frag case) to 4.229MB for 56388-byte allocation
D/dalvikvm(10045): GC_FOR_ALLOC freed 2K, 19% free 4268K/5268K, paused 4ms, total 4ms
D/dalvikvm(10045): GC_FOR_ALLOC freed 2K, 19% free 4267K/5268K, paused 8ms, total 8ms
I/dalvikvm-heap(10045): Grow heap (frag case) to 4.832MB for 635808-byte allocation
D/dalvikvm(10045): GC_FOR_ALLOC freed <1K, 18% free 4888K/5892K, paused 5ms, total 5ms
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:216
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:12
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:229
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10045): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10045): GC_CONCURRENT freed 192K, 17% free 4920K/5892K, paused 8ms+17ms, total 35ms
D/AndroidRuntime(10045): Shutting down VM
W/dalvikvm(10045): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
E/ActivityThread(10045): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/c.t.tdm.TrustDefenderMo(10045): Scan  already in progress or cancel requested, aborting
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:301
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=231e3958362a41e5b5e31be786bc118d&osVersion=4.4.2
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:307
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:12
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:1
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
D/dalvikvm(10045): GC_CONCURRENT freed 400K, 14% free 5086K/5892K, paused 8ms+1ms, total 12ms
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:17
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10045): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10045): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10045): GC_FOR_ALLOC freed 221K, 11% free 5292K/5892K, paused 4ms, total 4ms
D/dalvikvm(10045): GC_FOR_ALLOC freed 156K, 12% free 5375K/6080K, paused 4ms, total 4ms
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:514
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:521
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm(10045): GC_FOR_ALLOC freed 966K, 17% free 5256K/6284K, paused 4ms, total 5ms
D/dalvikvm(10045): GC_CONCURRENT freed 19K, 17% free 5255K/6284K, paused 1ms+8ms, total 14ms
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:79
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:80
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:232
D/dalvikvm(10045): GC_FOR_ALLOC freed 306K, 13% free 5495K/6284K, paused 4ms, total 4ms
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10045): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10045): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10045): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10045): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:279
I/com.newrelic.agent.android(10045): Crash 9da09b8c-570e-a2d5-f6de-de1a4efaf420 successfully submitted.
I/System.out(10045): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10045): GC_CONCURRENT freed 971K, 18% free 5284K/6412K, paused 2ms+0ms, total 6ms
D/dalvikvm(10045): GC_CONCURRENT freed 689K, 18% free 5283K/6412K, paused 2ms+0ms, total 6ms
E/AndroidRuntime(10045): FATAL EXCEPTION: main
E/AndroidRuntime(10045): Process: com.mint, PID: 10045
E/AndroidRuntime(10045): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10045): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10045): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10045): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10045): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10045): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10045): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10045): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10045): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10045): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10045): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10045): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10045): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10045): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10045): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10045): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10045): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10045): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10045): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10045): 	at dalvik.system.NativeStart.main(Native Method)
I/Process (  470): Sending signal. PID: 10045 SIG: 9
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10045) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10125 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10125): ignoring registerObject request in thread=1
I/dalvikvm(10125): ignoring registerObject request in thread=1
D/dalvikvm(10125): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10125): GC_CONCURRENT freed 200K, 9% free 3030K/3296K, paused 3ms+0ms, total 5ms
I/CrashlyticsCore(10125): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10125): GC_CONCURRENT freed 168K, 7% free 3262K/3496K, paused 1ms+0ms, total 5ms
D/dalvikvm(10125): GC_CONCURRENT freed 216K, 8% free 3554K/3836K, paused 3ms+1ms, total 9ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/dalvikvm(10125): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10125): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10125): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm(10125): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10125): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10125): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10125): GC_CONCURRENT freed 147K, 6% free 3792K/4012K, paused 4ms+0ms, total 6ms
D/dalvikvm(10125): GC_CONCURRENT freed 260K, 8% free 4037K/4368K, paused 1ms+1ms, total 6ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10125): GC_CONCURRENT freed 237K, 7% free 4299K/4612K, paused 1ms+1ms, total 12ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10125): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10125): VFY: unable to resolve instance field 38765
D/dalvikvm(10125): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10125): <init> androidContext: 'com.mint.app.MintApp@4a7b3bd8' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm(10125): GC_CONCURRENT freed 186K, 6% free 4547K/4820K, paused 1ms+0ms, total 5ms
W/dalvikvm(10125): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10125): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10125): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10125): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10125): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10125): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10125): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10125): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10125): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10125): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10125): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10125): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10125): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10125): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10125): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10125): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10125): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10125): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10125): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization(10125): getAuthorizationState
I/com.newrelic.agent.android(10125): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10125): Application state monitor has started
D/dalvikvm(10125): GC_CONCURRENT freed 474K, 11% free 4575K/5124K, paused 1ms+2ms, total 7ms
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10125): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10125): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android(10125): Analytics Controller started.
I/com.newrelic.agent.android(10125): Measurement Engine initialized.
I/com.newrelic.agent.android(10125): New Relic Agent v5.4.0
D/dalvikvm(10125): GC_FOR_ALLOC freed 1418K, 34% free 3479K/5204K, paused 3ms, total 3ms
D/dalvikvm(10125): GC_FOR_ALLOC freed 1K, 33% free 3517K/5204K, paused 2ms, total 2ms
I/dalvikvm-heap(10125): Grow heap (frag case) to 3.570MB for 79888-byte allocation
D/dalvikvm(10125): GC_FOR_ALLOC freed 0K, 32% free 3595K/5284K, paused 7ms, total 7ms
I/com.newrelic.agent.android(10125): Harvester: connected
I/com.newrelic.agent.android(10125): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10125): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10125): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10125): Harvester: Sending 0 analytics events.
D/dalvikvm(10125): GC_FOR_ALLOC freed 199K, 31% free 3667K/5284K, paused 5ms, total 7ms
D/dalvikvm(10125): GC_CONCURRENT freed 172K, 27% free 3898K/5284K, paused 1ms+4ms, total 13ms
I/dalvikvm(10125): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10125): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10125): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10125): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(10125): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm(10125): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10125): VFY: unable to resolve instance field 2423
D/dalvikvm(10125): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10125): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out(10125): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10125): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10125): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6
W/dalvikvm(10125): VFY: unable to resolve instance field 2423
D/dalvikvm(10125): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10125): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10125): VFY: unable to resolve instance field 2423
D/dalvikvm(10125): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10125): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10125): VFY: unable to resolve instance field 2423
D/dalvikvm(10125): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10125): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10125): VFY: unable to resolve instance field 2423
D/dalvikvm(10125): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(10125): Shutting down VM
W/dalvikvm(10125): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm(10125): GC_FOR_ALLOC freed 261K, 22% free 4149K/5284K, paused 4ms, total 4ms
D/dalvikvm(10125): GC_CONCURRENT freed 65K, 20% free 4230K/5284K, paused 2ms+2ms, total 11ms
D/dalvikvm(10125): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/dalvikvm-heap(10125): Grow heap (frag case) to 4.226MB for 38766-byte allocation
D/dalvikvm(10125): GC_FOR_ALLOC freed 43K, 21% free 4225K/5324K, paused 3ms, total 3ms
D/dalvikvm(10125): GC_FOR_ALLOC freed 4K, 21% free 4226K/5324K, paused 3ms, total 3ms
I/dalvikvm-heap(10125): Grow heap (frag case) to 4.241MB for 58146-byte allocation
D/dalvikvm(10125): GC_FOR_ALLOC freed 37K, 22% free 4245K/5384K, paused 4ms, total 4ms
I/System.out(10125): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:69
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10125): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10125): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10125): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10125): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:195
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(10125): GC_FOR_ALLOC freed 103K, 21% free 4279K/5384K, paused 3ms, total 3ms
I/dalvikvm-heap(10125): Grow heap (frag case) to 4.321MB for 87216-byte allocation
D/dalvikvm(10125): GC_FOR_ALLOC freed 1K, 21% free 4362K/5472K, paused 4ms, total 4ms
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:4
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:1
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10125): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10125): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10125): GC_FOR_ALLOC freed 97K, 22% free 4320K/5472K, paused 5ms, total 5ms
D/dalvikvm(10125): GC_CONCURRENT freed 508K, 23% free 4225K/5472K, paused 2ms+2ms, total 10ms
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10125): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:1
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(10125): GC_CONCURRENT freed 364K, 23% free 4255K/5472K, paused 1ms+1ms, total 4ms
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:132
I/System.out(10125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10125): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:134
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10125): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=c10e1e69-2953-478f-a7d9-5d8fba40aeb6;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10125): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10125): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10125): GC_CONCURRENT freed 375K, 22% free 4268K/5472K, paused 1ms+0ms, total 5ms
D/dalvikvm(10125): GC_CONCURRENT freed 373K, 22% free 4279K/5472K, paused 2ms+1ms, total 5ms
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:231
D/dalvikvm(10125): GC_CONCURRENT freed 217K, 19% free 4445K/5472K, paused 2ms+0ms, total 6ms
D/dalvikvm(10125): GC_FOR_ALLOC freed 47K, 19% free 4465K/5472K, paused 3ms, total 3ms
I/dalvikvm-heap(10125): Grow heap (frag case) to 4.502MB for 87216-byte allocation
D/dalvikvm(10125): GC_FOR_ALLOC freed <1K, 19% free 4550K/5560K, paused 5ms, total 5ms
D/dalvikvm(10125): GC_FOR_ALLOC freed 64K, 20% free 4495K/5560K, paused 7ms, total 7ms
D/dalvikvm(10125): GC_FOR_ALLOC freed 126K, 21% free 4445K/5560K, paused 4ms, total 4ms
I/dalvikvm-heap(10125): Grow heap (frag case) to 4.437MB for 39051-byte allocation
D/dalvikvm(10125): GC_FOR_ALLOC freed 5K, 21% free 4478K/5600K, paused 4ms, total 4ms
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:293
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:312
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10125): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10125): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:81
I/System.out(10125): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:81
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:269
I/com.newrelic.agent.android(10125): Crash 82e3a422-7eb7-2aaa-b187-baf70a968260 successfully submitted.
I/System.out(10125): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10125): GC_CONCURRENT freed 619K, 24% free 4278K/5600K, paused 2ms+1ms, total 5ms
D/dalvikvm(10125): GC_CONCURRENT freed 385K, 24% free 4276K/5600K, paused 2ms+0ms, total 5ms
I/Process (  470): Sending signal. PID: 10125 SIG: 9
E/AndroidRuntime(10125): FATAL EXCEPTION: main
E/AndroidRuntime(10125): Process: com.mint, PID: 10125
E/AndroidRuntime(10125): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10125): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10125): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10125): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10125): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10125): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10125): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10125): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10125): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10125): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10125): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10125): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10125): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10125): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10125): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10125): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10125): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10125): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10125): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10125): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10125) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10175 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10175): ignoring registerObject request in thread=1
I/dalvikvm(10175): ignoring registerObject request in thread=1
D/dalvikvm(10175): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10175): GC_CONCURRENT freed 176K, 8% free 3054K/3296K, paused 1ms+1ms, total 4ms
I/CrashlyticsCore(10175): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10175): GC_CONCURRENT freed 271K, 10% free 3293K/3628K, paused 1ms+0ms, total 8ms
D/dalvikvm(10175): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10175): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10175): GC_CONCURRENT freed 151K, 6% free 3527K/3748K, paused 1ms+0ms, total 3ms
D/dalvikvm(10175): GC_CONCURRENT freed 164K, 6% free 3751K/3988K, paused 2ms+0ms, total 4ms
I/dalvikvm(10175): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10175): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10175): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10175): GC_CONCURRENT freed 208K, 7% free 4040K/4324K, paused 1ms+1ms, total 7ms
D/dalvikvm(10175): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/dalvikvm(10175): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10175): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10175): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10175): GC_CONCURRENT freed 129K, 5% free 4297K/4512K, paused 2ms+1ms, total 6ms
D/dalvikvm(10175): GC_CONCURRENT freed 304K, 9% free 4379K/4764K, paused 1ms+0ms, total 4ms
D/dalvikvm(10175): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10175): VFY: unable to resolve instance field 38765
D/dalvikvm(10175): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10175): <init> androidContext: 'com.mint.app.MintApp@4a7b42fc' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(10175): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10175): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10175): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10175): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10175): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10175): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10175): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10175): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10175): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10175): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10175): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10175): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10175): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10175): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10175): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10175): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10175): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10175): GC_CONCURRENT freed 1477K, 33% free 3290K/4852K, paused 2ms+1ms, total 4ms
I/System.out(10175): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:4
I/System.out(10175): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization(10175): getAuthorizationState
I/com.newrelic.agent.android(10175): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10175): Application state monitor has started
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android(10175): Analytics Controller started.
I/com.newrelic.agent.android(10175): Measurement Engine initialized.
I/System.out(10175): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10175): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10175): GC_CONCURRENT freed 312K, 31% free 3382K/4852K, paused 1ms+1ms, total 6ms
D/dalvikvm(10175): GC_FOR_ALLOC freed 13K, 30% free 3415K/4852K, paused 2ms, total 2ms
I/dalvikvm-heap(10175): Grow heap (frag case) to 3.469MB for 79888-byte allocation
D/dalvikvm(10175): GC_FOR_ALLOC freed <1K, 30% free 3492K/4932K, paused 3ms, total 3ms
I/com.newrelic.agent.android(10175): New Relic Agent v5.4.0
D/dalvikvm(10175): GC_FOR_ALLOC freed 104K, 30% free 3477K/4932K, paused 6ms, total 6ms
I/com.newrelic.agent.android(10175): Harvester: connected
I/com.newrelic.agent.android(10175): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10175): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10175): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10175): Harvester: Sending 0 analytics events.
D/dalvikvm(10175): GC_FOR_ALLOC freed 105K, 29% free 3547K/4932K, paused 2ms, total 2ms
I/dalvikvm-heap(10175): Grow heap (frag case) to 3.598MB for 79888-byte allocation
D/dalvikvm(10175): GC_FOR_ALLOC freed <1K, 28% free 3625K/5012K, paused 2ms, total 2ms
D/dalvikvm(10175): GC_CONCURRENT freed 107K, 20% free 4029K/5012K, paused 3ms+3ms, total 10ms
D/dalvikvm(10175): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10175): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/dalvikvm(10175): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10175): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10175): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10175): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(10175): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm(10175): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10175): VFY: unable to resolve instance field 2423
D/dalvikvm(10175): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10175): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10175): VFY: unable to resolve instance field 2423
D/dalvikvm(10175): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10175): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10175): VFY: unable to resolve instance field 2423
D/dalvikvm(10175): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10175): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10175): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10175): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=6a5c412c-664b-4a7e-95ac-63ff64a5dfce
W/dalvikvm(10175): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10175): VFY: unable to resolve instance field 2423
D/dalvikvm(10175): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10175): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10175): VFY: unable to resolve instance field 2423
D/dalvikvm(10175): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(10175): Shutting down VM
W/dalvikvm(10175): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm(10175): GC_FOR_ALLOC freed 425K, 18% free 4116K/5012K, paused 5ms, total 6ms
I/System.out(10175): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:47
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10175): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10175): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10175): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=6a5c412c-664b-4a7e-95ac-63ff64a5dfce
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10175): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10175): GC_CONCURRENT freed <1K, 15% free 4287K/5012K, paused 2ms+9ms, total 14ms
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:137
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
D/dalvikvm(10175): GC_FOR_ALLOC freed 196K, 16% free 4256K/5012K, paused 4ms, total 4ms
I/dalvikvm-heap(10175): Grow heap (frag case) to 4.270MB for 58146-byte allocation
D/dalvikvm(10175): GC_FOR_ALLOC freed 39K, 16% free 4273K/5072K, paused 4ms, total 4ms
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10175): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
D/dalvikvm(10175): GC_FOR_ALLOC freed 34K, 16% free 4288K/5072K, paused 5ms, total 5ms
I/dalvikvm-heap(10175): Grow heap (frag case) to 4.330MB for 87216-byte allocation
D/dalvikvm(10175): GC_FOR_ALLOC freed <1K, 16% free 4373K/5160K, paused 4ms, total 4ms
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:5
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10175): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10175): GC_FOR_ALLOC freed 74K, 17% free 4319K/5160K, paused 6ms, total 6ms
I/dalvikvm-heap(10175): Grow heap (frag case) to 4.350MB for 77898-byte allocation
D/dalvikvm(10175): GC_FOR_ALLOC freed 0K, 17% free 4395K/5240K, paused 8ms, total 8ms
D/dalvikvm(10175): GC_CONCURRENT freed 572K, 20% free 4213K/5240K, paused 2ms+1ms, total 5ms
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10175): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:148
I/System.out(10175): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=6a5c412c-664b-4a7e-95ac-63ff64a5dfce;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10175): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:153
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
D/dalvikvm(10175): GC_CONCURRENT freed 338K, 19% free 4259K/5240K, paused 1ms+0ms, total 4ms
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:6
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10175): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10175): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=6a5c412c-664b-4a7e-95ac-63ff64a5dfce;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10175): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10175): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10175): GC_CONCURRENT freed 372K, 19% free 4278K/5240K, paused 2ms+1ms, total 6ms
D/dalvikvm(10175): GC_CONCURRENT freed 381K, 19% free 4281K/5240K, paused 2ms+0ms, total 5ms
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:223
D/dalvikvm(10175): GC_CONCURRENT freed 187K, 13% free 4589K/5240K, paused 1ms+0ms, total 8ms
D/dalvikvm(10175): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm-heap(10175): Grow heap (frag case) to 4.615MB for 77898-byte allocation
D/dalvikvm(10175): GC_FOR_ALLOC freed 95K, 15% free 4570K/5320K, paused 4ms, total 4ms
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:340
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:378
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10175): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10175): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:88
I/System.out(10175): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:88
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:276
I/com.newrelic.agent.android(10175): Crash ec3dbbfa-106a-beaa-ff1a-b6d3352b299d successfully submitted.
I/System.out(10175): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10175): GC_CONCURRENT freed 743K, 20% free 4276K/5320K, paused 1ms+1ms, total 4ms
D/dalvikvm(10175): GC_CONCURRENT freed 386K, 20% free 4274K/5320K, paused 2ms+0ms, total 4ms
D/dalvikvm(10175): GC_CONCURRENT freed 376K, 20% free 4281K/5320K, paused 3ms+0ms, total 6ms
I/Process (  470): Sending signal. PID: 10175 SIG: 9
E/AndroidRuntime(10175): FATAL EXCEPTION: main
E/AndroidRuntime(10175): Process: com.mint, PID: 10175
E/AndroidRuntime(10175): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10175): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10175): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10175): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10175): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10175): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10175): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10175): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10175): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10175): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10175): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10175): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10175): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10175): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10175): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10175): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10175): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10175): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10175): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10175): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 10175) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/ActivityManager(  470): Force removing ActivityRecord{4a9df0e4 u0 com.mint/.core.overview.LoginActivity$XLarge t58}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/FirebaseApp( 6059): Notifying background state change listeners.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/dalvikvm(  746): GC_EXPLICIT freed 556K, 22% free 9158K/11636K, paused 2ms+2ms, total 95ms
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation( 4338): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_VOLUME_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1515924, downTime=1515924, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9601f4 attribute=null, token = android.os.BinderProxy@4ac7d000
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.android.camera/.Camera bnds=[742,174][946,301] (has extras)} from pid 6059
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
W/Launcher( 6059): No global search activity found.
W/Launcher( 6059): No global search activity found.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cyanogenmod.filemanager/.activities.NavigationActivity bnds=[334,174][538,301] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/dalvikvm(  166): GC_EXPLICIT freed 39K, 4% free 2845K/2952K, paused 0ms+1ms, total 6ms
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=10262 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2846K/2952K, paused 0ms+0ms, total 7ms
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2845K/2952K, paused 2ms+6ms, total 17ms
I/dalvikvm(10262): ignoring registerObject request in thread=1
I/dalvikvm(10262): ignoring registerObject request in thread=1
D/dalvikvm(10262): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10262): GC_CONCURRENT freed 236K, 9% free 3122K/3420K, paused 2ms+1ms, total 11ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/CrashlyticsCore(10262): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10262): GC_CONCURRENT freed 232K, 9% free 3315K/3616K, paused 4ms+1ms, total 9ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 30ms
D/dalvikvm(10262): GC_CONCURRENT freed 227K, 8% free 3594K/3888K, paused 3ms+1ms, total 10ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/dalvikvm(10262): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10262): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10262): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10262): GC_CONCURRENT freed 131K, 6% free 3848K/4052K, paused 1ms+0ms, total 4ms
I/dalvikvm(10262): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10262): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10262): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10262): GC_CONCURRENT freed 114K, 5% free 4121K/4316K, paused 2ms+0ms, total 5ms
D/dalvikvm(10262): GC_CONCURRENT freed 249K, 8% free 4347K/4688K, paused 2ms+1ms, total 9ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10262): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10262): VFY: unable to resolve instance field 38765
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10262): <init> androidContext: 'com.mint.app.MintApp@4a7b4ad8' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm(10262): GC_CONCURRENT freed 359K, 9% free 4483K/4920K, paused 2ms+1ms, total 7ms
W/dalvikvm(10262): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10262): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10262): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10262): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10262): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10262): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10262): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10262): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10262): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10262): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10262): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10262): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10262): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10262): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10262): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10262): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10262): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10262): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization(10262): getAuthorizationState
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android(10262): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out(10262): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/com.newrelic.agent.android(10262): Application state monitor has started
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10262): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/dalvikvm(10262): GC_CONCURRENT freed 1562K, 33% free 3398K/5036K, paused 3ms+1ms, total 17ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 17ms
I/dalvikvm-heap(10262): Grow heap (frag case) to 3.497MB for 79888-byte allocation
D/dalvikvm(10262): GC_FOR_ALLOC freed 52K, 33% free 3468K/5116K, paused 6ms, total 7ms
I/com.newrelic.agent.android(10262): Analytics Controller started.
I/com.newrelic.agent.android(10262): Measurement Engine initialized.
I/com.newrelic.agent.android(10262): New Relic Agent v5.4.0
D/dalvikvm(10262): GC_FOR_ALLOC freed 159K, 31% free 3530K/5116K, paused 10ms, total 12ms
I/dalvikvm-heap(10262): Grow heap (frag case) to 3.582MB for 79888-byte allocation
D/dalvikvm(10262): GC_FOR_ALLOC freed <1K, 31% free 3607K/5196K, paused 5ms, total 5ms
I/com.newrelic.agent.android(10262): Harvester: connected
I/com.newrelic.agent.android(10262): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10262): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10262): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10262): Harvester: Sending 0 analytics events.
D/dalvikvm(10262): GC_CONCURRENT freed 207K, 28% free 3783K/5196K, paused 1ms+1ms, total 4ms
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:111
D/dalvikvm(10262): GC_CONCURRENT freed 237K, 24% free 3985K/5196K, paused 3ms+0ms, total 9ms
I/dalvikvm(10262): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10262): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10262): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10262): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm(10262): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm(10262): VFY: unable to resolve instance field 38470
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0005
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/Lifecycle(10262): onActivityCreated: core.overview.RouterActivity
W/dalvikvm(10262): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10262): VFY: unable to resolve instance field 2423
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10262): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10262): VFY: unable to resolve instance field 2423
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0005
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm(10262): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm(10262): VFY: unable to resolve instance field 38747
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0007
D/dalvikvm(10262): GC_CONCURRENT freed 423K, 23% free 4017K/5196K, paused 2ms+5ms, total 13ms
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:2
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:1
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:3
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
D/dalvikvm(10262): GC_CONCURRENT freed 350K, 21% free 4110K/5196K, paused 2ms+1ms, total 9ms
I/System.out(10262): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10262): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/Authorization(10262): getAuthorizationState
W/dalvikvm(10262): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10262): VFY: unable to resolve instance field 2423
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10262): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10262): VFY: unable to resolve instance field 2423
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10262): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10262): VFY: unable to resolve instance field 2423
D/dalvikvm(10262): VFY: replacing opcode 0x54 at 0x0002
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 10262
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
V/WebViewChromium(10262): Binding Chromium to the background looper Looper (main, tid 1) {4a7b0be0}
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/chromium(10262): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(10262): Initializing chromium process, renderers=0
I/System.out(10262): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:2
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:1
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out(10262): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10262): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:3
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10262): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10262): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/chromium(10262): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out(10262): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(10262): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10262): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10262): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=9cc8fccc-0d07-4745-9a6d-1b1e202bbbbd
I/System.out(10262): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10262): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10262): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=9cc8fccc-0d07-4745-9a6d-1b1e202bbbbd
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10262): GC_CONCURRENT freed 312K, 20% free 4182K/5196K, paused 3ms+1ms, total 11ms
D/libEGL  (10262): loaded /system/lib/egl/libEGL_adreno.so
D/        (10262): HostConnection::get() New Host Connection established 0xb8ee8d10, tid 10262
D/libEGL  (10262): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (10262): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm(10262): GC_CONCURRENT freed 475K, 19% free 4218K/5196K, paused 2ms+1ms, total 21ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10262): GC_FOR_ALLOC freed 78K, 19% free 4212K/5196K, paused 7ms, total 7ms
I/dalvikvm-heap(10262): Grow heap (frag case) to 4.226MB for 56388-byte allocation
D/dalvikvm(10262): GC_FOR_ALLOC freed 0K, 19% free 4267K/5252K, paused 10ms, total 10ms
D/dalvikvm(10262): GC_FOR_ALLOC freed 4K, 19% free 4268K/5252K, paused 6ms, total 6ms
I/dalvikvm-heap(10262): Grow heap (frag case) to 4.833MB for 635808-byte allocation
D/dalvikvm(10262): GC_FOR_ALLOC freed <1K, 17% free 4889K/5876K, paused 18ms, total 18ms
D/dalvikvm( 4338): GC_FOR_ALLOC freed 7803K, 62% free 4958K/12824K, paused 3ms, total 8ms
I/dalvikvm-heap( 4338): Grow heap (frag case) to 6.877MB for 2073612-byte allocation
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:202
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=9cc8fccc-0d07-4745-9a6d-1b1e202bbbbd;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:204
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=9cc8fccc-0d07-4745-9a6d-1b1e202bbbbd;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10262): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 4338): GC_FOR_ALLOC freed 7K, 46% free 6975K/12824K, paused 27ms, total 27ms
D/dalvikvm( 4338): GC_CONCURRENT freed 0K, 46% free 6976K/12824K, paused 5ms+6ms, total 13ms
D/dalvikvm(10262): GC_CONCURRENT freed 187K, 16% free 4954K/5876K, paused 8ms+16ms, total 55ms
D/AndroidRuntime(10262): Shutting down VM
W/dalvikvm(10262): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
W/c.t.tdm.TrustDefenderMo(10262): Scan  already in progress or cancel requested, aborting
E/ActivityThread(10262): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:324
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=680482ea5c0e415dbc8ad9be97616bc9&osVersion=4.4.2
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:347
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:1
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed 1411K, 45% free 13377K/24284K, paused 31ms, total 33ms
I/dalvikvm-heap(  470): Grow heap (frag case) to 15.106MB for 2073612-byte allocation
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:6
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10262): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed 66K, 42% free 15336K/26312K, paused 17ms, total 17ms
D/yeshen  ( 6059): launcher onstop
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10262): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed 87K, 43% free 15259K/26312K, paused 20ms, total 20ms
I/dalvikvm-heap(  470): Grow heap (frag case) to 16.944MB for 2073612-byte allocation
D/dalvikvm(10262): GC_CONCURRENT freed 529K, 15% free 5003K/5876K, paused 6ms+0ms, total 9ms
D/dalvikvm(  470): GC_FOR_ALLOC freed 1K, 40% free 17283K/28340K, paused 33ms, total 33ms
D/dalvikvm(10262): GC_FOR_ALLOC freed 257K, 11% free 5277K/5876K, paused 9ms, total 9ms
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.NotificationManagerService$6.run:1838 android.os.Handler.handleCallback:733 android.os.Handler.dispatchMessage:95 android.os.Looper.loop:136 
D/dalvikvm(  556): GC_CONCURRENT freed 7279K, 56% free 8734K/19764K, paused 2ms+1ms, total 6ms
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed 28K, 39% free 17296K/28340K, paused 55ms, total 56ms
I/dalvikvm-heap(  470): Grow heap (frag case) to 18.933MB for 2073612-byte allocation
D/dalvikvm(  470): GC_FOR_ALLOC freed 4K, 37% free 19317K/30368K, paused 33ms, total 33ms
D/dalvikvm( 1012): GC_FOR_ALLOC freed 257K, 15% free 3367K/3940K, paused 5ms, total 5ms
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
D/dalvikvm(10262): GC_CONCURRENT freed 801K, 15% free 5230K/6108K, paused 2ms+14ms, total 26ms
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:738
I/iu.UploadsManager(  746): End new media; added: 1, uploading: 0, time: 245 ms
D/dalvikvm(  470): GC_FOR_ALLOC freed 2054K, 43% free 17406K/30368K, paused 15ms, total 15ms
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:233
D/dalvikvm(10262): GC_FOR_ALLOC freed 335K, 11% free 5463K/6108K, paused 6ms, total 7ms
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:832
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed 16K, 36% free 19435K/30368K, paused 40ms, total 40ms
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/dalvikvm-heap(  470): Grow heap (frag case) to 21.022MB for 2073612-byte allocation
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed <1K, 34% free 21459K/32396K, paused 17ms, total 17ms
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10262): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
D/dalvikvm(  556): GC_FOR_ALLOC freed 2057K, 64% free 7292K/19764K, paused 9ms, total 10ms
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10262): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/dalvikvm-heap(  556): Grow heap (frag case) to 9.161MB for 2073612-byte allocation
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
D/dalvikvm(  556): GC_FOR_ALLOC freed <1K, 53% free 9317K/19764K, paused 5ms, total 5ms
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(  556): GC_CONCURRENT freed 0K, 53% free 9320K/19764K, paused 2ms+4ms, total 10ms
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:3
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:4
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed 5K, 34% free 21573K/32396K, paused 43ms, total 43ms
I/dalvikvm-heap(  470): Grow heap (frag case) to 23.110MB for 2073612-byte allocation
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:3
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:1
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:82
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:91
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10262): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out(10262): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10262): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(  470): GC_FOR_ALLOC freed 1K, 32% free 23597K/34424K, paused 26ms, total 26ms
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:278
I/com.newrelic.agent.android(10262): Crash 27a381ec-b927-2979-ef87-8c992ed3e6cb successfully submitted.
I/System.out(10262): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10262): GC_CONCURRENT freed 937K, 16% free 5273K/6276K, paused 1ms+1ms, total 4ms
D/dalvikvm(10262): GC_CONCURRENT freed 801K, 16% free 5283K/6276K, paused 2ms+1ms, total 12ms
D/dalvikvm(10262): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out(10262): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 10262 SIG: 9
E/AndroidRuntime(10262): FATAL EXCEPTION: main
E/AndroidRuntime(10262): Process: com.mint, PID: 10262
E/AndroidRuntime(10262): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10262): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10262): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10262): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10262): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10262): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10262): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10262): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10262): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10262): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10262): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10262): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10262): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10262): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10262): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10262): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10262): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10262): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10262): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10262): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 10262) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10342 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10342): ignoring registerObject request in thread=1
I/dalvikvm(10342): ignoring registerObject request in thread=1
D/dalvikvm(10342): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10342): GC_CONCURRENT freed 188K, 8% free 3043K/3296K, paused 1ms+1ms, total 4ms
I/CrashlyticsCore(10342): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10342): GC_CONCURRENT freed 204K, 8% free 3263K/3532K, paused 1ms+0ms, total 8ms
D/dalvikvm(10342): GC_CONCURRENT freed 230K, 8% free 3433K/3728K, paused 7ms+2ms, total 10ms
D/dalvikvm(10342): GC_CONCURRENT freed 196K, 7% free 3742K/4008K, paused 2ms+0ms, total 4ms
D/dalvikvm(10342): GC_CONCURRENT freed 154K, 6% free 3973K/4208K, paused 1ms+1ms, total 4ms
I/dalvikvm(10342): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
D/dalvikvm(10342): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10342): VFY: unable to resolve instance field 38765
D/dalvikvm(10342): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10342): <init> androidContext: 'com.mint.app.MintApp@4a7b029c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(10342): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10342): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10342): GC_CONCURRENT freed 165K, 6% free 4194K/4436K, paused 1ms+1ms, total 4ms
W/dalvikvm(10342): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10342): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10342): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10342): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10342): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10342): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10342): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10342): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10342): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10342): VFY: replacing opcode 0x72 at 0x0006
I/dalvikvm(10342): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
I/System.out(10342): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
W/dalvikvm(10342): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
I/System.out(10342): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
D/dalvikvm(10342): VFY: replacing opcode 0x6e at 0x000a
I/System.out(10342): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10342): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10342): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10342): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10342): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10342): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10342): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(10342): GC_CONCURRENT freed 192K, 6% free 4499K/4768K, paused 2ms+5ms, total 10ms
D/dalvikvm(10342): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10342): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10342): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10342): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10342): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10342): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10342): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/Authorization(10342): getAuthorizationState
I/com.newrelic.agent.android(10342): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10342): Application state monitor has started
D/dalvikvm(10342): GC_CONCURRENT freed 422K, 10% free 4569K/5064K, paused 1ms+16ms, total 23ms
I/com.newrelic.agent.android(10342): Analytics Controller started.
I/com.newrelic.agent.android(10342): Measurement Engine initialized.
I/com.newrelic.agent.android(10342): New Relic Agent v5.4.0
D/dalvikvm(10342): GC_CONCURRENT freed 1512K, 32% free 3506K/5092K, paused 2ms+1ms, total 6ms
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android(10342): Harvester: connected
I/com.newrelic.agent.android(10342): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10342): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10342): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10342): Harvester: Sending 0 analytics events.
I/System.out(10342): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10342): GC_FOR_ALLOC freed 146K, 30% free 3573K/5092K, paused 10ms, total 10ms
I/dalvikvm-heap(10342): Grow heap (frag case) to 3.624MB for 79888-byte allocation
D/dalvikvm(10342): GC_FOR_ALLOC freed <1K, 30% free 3650K/5172K, paused 5ms, total 5ms
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10342): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10342): GC_CONCURRENT freed 144K, 23% free 3994K/5172K, paused 2ms+3ms, total 17ms
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:15
I/dalvikvm(10342): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10342): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10342): VFY: replacing opcode 0x71 at 0x0030
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/MixpanelAPI.AL(10342): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm(10342): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10342): VFY: unable to resolve instance field 2423
D/dalvikvm(10342): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10342): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10342): VFY: unable to resolve instance field 2423
D/dalvikvm(10342): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm(10342): GC_CONCURRENT freed 418K, 23% free 4023K/5172K, paused 3ms+8ms, total 17ms
W/dalvikvm(10342): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10342): VFY: unable to resolve instance field 2423
D/dalvikvm(10342): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10342): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10342): VFY: unable to resolve instance field 2423
D/dalvikvm(10342): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10342): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10342): VFY: unable to resolve instance field 2423
D/dalvikvm(10342): VFY: replacing opcode 0x54 at 0x0005
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
D/AndroidRuntime(10342): Shutting down VM
W/dalvikvm(10342): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:19
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:3
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
D/dalvikvm(10342): GC_CONCURRENT freed 343K, 21% free 4102K/5172K, paused 2ms+0ms, total 6ms
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:10
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10342): GC_FOR_ALLOC freed 130K, 18% free 4280K/5172K, paused 4ms, total 4ms
I/dalvikvm-heap(10342): Grow heap (frag case) to 4.293MB for 58146-byte allocation
D/dalvikvm(10342): GC_FOR_ALLOC freed 43K, 18% free 4293K/5232K, paused 5ms, total 5ms
I/System.out(10342): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:10
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:5
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10342): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10342): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10342): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10342): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10342): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be
I/System.out(10342): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10342): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10342): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10342): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10342): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10342): GC_FOR_ALLOC freed 58K, 18% free 4309K/5232K, paused 6ms, total 6ms
I/dalvikvm-heap(10342): Grow heap (frag case) to 4.349MB for 87216-byte allocation
D/dalvikvm(10342): GC_FOR_ALLOC freed <1K, 18% free 4393K/5320K, paused 4ms, total 4ms
D/dalvikvm(10342): GC_FOR_ALLOC freed 64K, 19% free 4341K/5320K, paused 4ms, total 4ms
I/dalvikvm-heap(10342): Grow heap (frag case) to 4.367MB for 71868-byte allocation
D/dalvikvm(10342): GC_FOR_ALLOC freed 205K, 22% free 4206K/5392K, paused 3ms, total 3ms
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10342): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(10342): GC_CONCURRENT freed 363K, 22% free 4226K/5392K, paused 2ms+0ms, total 5ms
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:142
I/System.out(10342): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10342): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:145
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10342): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10342): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10342): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10342): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10342): GC_CONCURRENT freed 366K, 21% free 4261K/5392K, paused 2ms+0ms, total 10ms
D/dalvikvm(10342): GC_CONCURRENT freed 387K, 22% free 4257K/5392K, paused 2ms+0ms, total 5ms
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:232
D/dalvikvm(10342): GC_CONCURRENT freed 201K, 18% free 4440K/5392K, paused 1ms+1ms, total 4ms
D/dalvikvm(10342): GC_FOR_ALLOC freed 63K, 18% free 4469K/5392K, paused 3ms, total 3ms
I/dalvikvm-heap(10342): Grow heap (frag case) to 4.492MB for 71868-byte allocation
D/dalvikvm(10342): GC_FOR_ALLOC freed <1K, 17% free 4539K/5464K, paused 4ms, total 4ms
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:308
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:326
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10342): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10342): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:76
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:293
I/com.newrelic.agent.android(10342): Crash 759209e9-a66e-7d18-70c7-1ca601c7a66d successfully submitted.
I/System.out(10342): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10342): GC_CONCURRENT freed 713K, 22% free 4266K/5464K, paused 2ms+0ms, total 6ms
D/dalvikvm(10342): GC_CONCURRENT freed 385K, 22% free 4264K/5464K, paused 2ms+1ms, total 5ms
D/dalvikvm(10342): GC_CONCURRENT freed 377K, 22% free 4271K/5464K, paused 1ms+0ms, total 5ms
I/System.out(10342): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 10342 SIG: 9
E/AndroidRuntime(10342): FATAL EXCEPTION: main
E/AndroidRuntime(10342): Process: com.mint, PID: 10342
E/AndroidRuntime(10342): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10342): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10342): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10342): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10342): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10342): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10342): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10342): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10342): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10342): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10342): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10342): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10342): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10342): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10342): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10342): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10342): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10342): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10342): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10342): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10342) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10393 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10393): ignoring registerObject request in thread=1
I/dalvikvm(10393): ignoring registerObject request in thread=1
D/dalvikvm(10393): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10393): GC_CONCURRENT freed 154K, 7% free 3204K/3420K, paused 2ms+2ms, total 7ms
D/dalvikvm(10393): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10393): GC_CONCURRENT freed 262K, 9% free 3393K/3724K, paused 1ms+2ms, total 7ms
I/CrashlyticsCore(10393): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10393): GC_CONCURRENT freed 141K, 6% free 3637K/3848K, paused 1ms+1ms, total 3ms
I/dalvikvm(10393): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10393): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10393): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10393): GC_CONCURRENT freed 183K, 7% free 3957K/4212K, paused 2ms+1ms, total 7ms
D/dalvikvm(10393): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10393): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10393): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10393): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm(10393): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10393): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10393): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10393): GC_CONCURRENT freed 190K, 7% free 4153K/4424K, paused 2ms+0ms, total 4ms
D/dalvikvm(10393): GC_CONCURRENT freed 204K, 7% free 4341K/4628K, paused 3ms+0ms, total 6ms
D/dalvikvm(10393): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10393): VFY: unable to resolve instance field 38765
D/dalvikvm(10393): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10393): <init> androidContext: 'com.mint.app.MintApp@4a7b09c0' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(10393): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm(10393): GC_CONCURRENT freed 266K, 6% free 4574K/4832K, paused 1ms+1ms, total 9ms
W/dalvikvm(10393): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10393): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10393): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10393): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10393): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10393): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10393): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10393): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10393): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10393): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10393): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10393): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10393): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10393): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10393): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10393): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10393): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10393): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization(10393): getAuthorizationState
I/com.newrelic.agent.android(10393): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10393): Application state monitor has started
I/com.newrelic.agent.android(10393): Analytics Controller started.
D/dalvikvm(10393): GC_CONCURRENT freed 444K, 11% free 4583K/5100K, paused 1ms+0ms, total 4ms
I/com.newrelic.agent.android(10393): Measurement Engine initialized.
I/com.newrelic.agent.android(10393): New Relic Agent v5.4.0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10393): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10393): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/com.newrelic.agent.android(10393): Harvester: connected
I/com.newrelic.agent.android(10393): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10393): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10393): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10393): Harvester: Sending 0 analytics events.
D/dalvikvm(10393): GC_CONCURRENT freed 1577K, 32% free 3583K/5228K, paused 2ms+1ms, total 9ms
D/dalvikvm(10393): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10393): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10393): GC_CONCURRENT freed 153K, 26% free 3893K/5228K, paused 1ms+2ms, total 12ms
I/dalvikvm(10393): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10393): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10393): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10393): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm(10393): GC_CONCURRENT freed 441K, 27% free 3851K/5228K, paused 2ms+1ms, total 9ms
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
W/dalvikvm(10393): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10393): VFY: unable to resolve instance field 2423
D/dalvikvm(10393): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10393): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10393): VFY: unable to resolve instance field 2423
D/dalvikvm(10393): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
W/dalvikvm(10393): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10393): VFY: unable to resolve instance field 2423
D/dalvikvm(10393): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:2
W/dalvikvm(10393): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10393): VFY: unable to resolve instance field 2423
D/dalvikvm(10393): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10393): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:1
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
W/dalvikvm(10393): VFY: unable to resolve instance field 2423
D/dalvikvm(10393): VFY: replacing opcode 0x54 at 0x0005
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/AndroidRuntime(10393): Shutting down VM
W/dalvikvm(10393): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:11
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:1
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10393): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10393): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10393): GC_CONCURRENT freed 249K, 22% free 4088K/5228K, paused 1ms+3ms, total 9ms
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10393): GC_FOR_ALLOC freed 63K, 21% free 4156K/5228K, paused 3ms, total 3ms
I/dalvikvm-heap(10393): Grow heap (frag case) to 4.142MB for 25846-byte allocation
D/dalvikvm(10393): GC_FOR_ALLOC freed <1K, 21% free 4182K/5256K, paused 4ms, total 4ms
D/dalvikvm(10393): GC_FOR_ALLOC freed 19K, 21% free 4165K/5256K, paused 5ms, total 5ms
I/dalvikvm-heap(10393): Grow heap (frag case) to 4.164MB for 38766-byte allocation
D/dalvikvm(10393): GC_FOR_ALLOC freed <1K, 21% free 4203K/5296K, paused 4ms, total 4ms
D/dalvikvm(10393): GC_FOR_ALLOC freed 29K, 22% free 4179K/5296K, paused 3ms, total 3ms
I/dalvikvm-heap(10393): Grow heap (frag case) to 4.196MB for 58146-byte allocation
D/dalvikvm(10393): GC_FOR_ALLOC freed 37K, 22% free 4198K/5356K, paused 4ms, total 4ms
I/System.out(10393): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(10393): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10393): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10393): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be
I/System.out(10393): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10393): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10393): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10393): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10393): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10393): GC_FOR_ALLOC freed 41K, 22% free 4209K/5356K, paused 5ms, total 5ms
I/dalvikvm-heap(10393): Grow heap (frag case) to 4.251MB for 87216-byte allocation
D/dalvikvm(10393): GC_FOR_ALLOC freed <1K, 22% free 4293K/5444K, paused 4ms, total 4ms
D/dalvikvm(10393): GC_FOR_ALLOC freed 64K, 23% free 4239K/5444K, paused 2ms, total 2ms
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10393): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(10393): GC_CONCURRENT freed 494K, 25% free 4129K/5444K, paused 1ms+1ms, total 12ms
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:143
I/System.out(10393): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10393): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:145
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10393): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10393): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a4a4d205-e6cc-4024-ac24-858c2f8250be;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10393): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10393): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10393): GC_CONCURRENT freed 444K, 24% free 4165K/5444K, paused 2ms+0ms, total 10ms
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:219
D/dalvikvm(10393): GC_CONCURRENT freed 422K, 24% free 4161K/5444K, paused 0ms+0ms, total 4ms
D/dalvikvm(10393): GC_FOR_ALLOC freed 138K, 21% free 4343K/5444K, paused 3ms, total 3ms
I/dalvikvm-heap(10393): Grow heap (frag case) to 4.383MB for 87216-byte allocation
D/dalvikvm(10393): GC_FOR_ALLOC freed <1K, 20% free 4428K/5532K, paused 4ms, total 4ms
D/dalvikvm(10393): GC_FOR_ALLOC freed 63K, 21% free 4373K/5532K, paused 3ms, total 3ms
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:298
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:321
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10393): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10393): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:77
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:78
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:265
I/com.newrelic.agent.android(10393): Crash 1e7f0af1-3e00-2285-9973-34fe5b3fdb6e successfully submitted.
I/System.out(10393): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10393): GC_CONCURRENT freed 638K, 25% free 4163K/5532K, paused 2ms+2ms, total 8ms
D/dalvikvm(10393): GC_CONCURRENT freed 385K, 25% free 4161K/5532K, paused 1ms+0ms, total 5ms
D/dalvikvm(10393): GC_CONCURRENT freed 369K, 25% free 4189K/5532K, paused 1ms+1ms, total 5ms
I/System.out(10393): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 10393 SIG: 9
E/AndroidRuntime(10393): FATAL EXCEPTION: main
E/AndroidRuntime(10393): Process: com.mint, PID: 10393
E/AndroidRuntime(10393): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10393): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10393): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10393): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10393): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10393): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10393): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10393): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10393): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10393): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10393): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10393): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10393): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10393): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10393): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10393): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10393): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10393): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10393): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10393): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 10393) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/ActivityManager(  470): Force removing ActivityRecord{4ab04758 u0 com.mint/.core.overview.LoginActivity$XLarge t59}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/FirebaseApp( 6059): Notifying background state change listeners.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1520397, downTime=1520397, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ab32a60 attribute=null, token = android.os.BinderProxy@4ac7d000
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
D/yeshen  ( 6059): launcher onpause
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=10443 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/dalvikvm(10443): ignoring registerObject request in thread=1
I/dalvikvm(10443): ignoring registerObject request in thread=1
D/dalvikvm(10443): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10443): GC_CONCURRENT freed 195K, 8% free 3163K/3420K, paused 1ms+3ms, total 6ms
D/dalvikvm(10443): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10443): GC_CONCURRENT freed 252K, 9% free 3420K/3740K, paused 1ms+0ms, total 5ms
D/dalvikvm(10443): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10443): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/CrashlyticsCore(10443): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10443): GC_CONCURRENT freed 158K, 6% free 3648K/3880K, paused 2ms+0ms, total 6ms
D/dalvikvm(10443): GC_CONCURRENT freed 118K, 5% free 3917K/4112K, paused 2ms+0ms, total 4ms
D/dalvikvm(10443): GC_CONCURRENT freed 151K, 6% free 4151K/4384K, paused 2ms+0ms, total 6ms
I/dalvikvm(10443): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10443): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10443): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm(10443): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10443): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10443): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10443): GC_CONCURRENT freed 329K, 9% free 4318K/4728K, paused 2ms+1ms, total 10ms
D/dalvikvm(10443): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10443): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10443): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10443): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10443): VFY: unable to resolve instance field 38765
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10443): <init> androidContext: 'com.mint.app.MintApp@4a7b11a0' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm(10443): GC_CONCURRENT freed 274K, 8% free 4488K/4840K, paused 1ms+1ms, total 9ms
W/dalvikvm(10443): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10443): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10443): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10443): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10443): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10443): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10443): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10443): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10443): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10443): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10443): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10443): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10443): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10443): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10443): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10443): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10443): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10443): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization(10443): getAuthorizationState
I/com.newrelic.agent.android(10443): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
D/dalvikvm(10443): GC_CONCURRENT freed 1571K, 33% free 3339K/4984K, paused 1ms+1ms, total 4ms
I/com.newrelic.agent.android(10443): Application state monitor has started
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10443): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10443): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10443): GC_FOR_ALLOC freed 30K, 32% free 3396K/4984K, paused 3ms, total 3ms
I/dalvikvm-heap(10443): Grow heap (frag case) to 3.451MB for 79888-byte allocation
D/dalvikvm(10443): GC_FOR_ALLOC freed <1K, 32% free 3474K/5064K, paused 3ms, total 3ms
I/com.newrelic.agent.android(10443): Analytics Controller started.
I/com.newrelic.agent.android(10443): Measurement Engine initialized.
I/com.newrelic.agent.android(10443): New Relic Agent v5.4.0
D/dalvikvm(10443): GC_FOR_ALLOC freed 207K, 31% free 3517K/5064K, paused 5ms, total 5ms
I/dalvikvm-heap(10443): Grow heap (frag case) to 3.569MB for 79888-byte allocation
D/dalvikvm(10443): GC_FOR_ALLOC freed <1K, 31% free 3594K/5144K, paused 3ms, total 3ms
I/com.newrelic.agent.android(10443): Harvester: connected
I/com.newrelic.agent.android(10443): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10443): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10443): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10443): Harvester: Sending 0 analytics events.
D/dalvikvm(10443): GC_CONCURRENT freed 199K, 27% free 3778K/5144K, paused 2ms+0ms, total 8ms
I/dalvikvm(10443): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10443): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10443): VFY: replacing opcode 0x71 at 0x0030
D/dalvikvm(10443): GC_CONCURRENT freed 248K, 24% free 3917K/5144K, paused 2ms+0ms, total 5ms
D/MixpanelAPI.AL(10443): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(10443): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
D/dalvikvm(10443): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm(10443): VFY: unable to resolve instance field 38470
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0005
D/Lifecycle(10443): onActivityCreated: core.overview.RouterActivity
I/System.out(10443): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10443): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10443): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b6a0c3f2-6452-46f5-bf45-9d06f5df9e97
W/dalvikvm(10443): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10443): VFY: unable to resolve instance field 2423
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10443): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10443): VFY: unable to resolve instance field 2423
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10443): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm(10443): VFY: unable to resolve instance field 38747
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0007
I/System.out(10443): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10443): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
D/dalvikvm(10443): GC_CONCURRENT freed 324K, 22% free 4038K/5144K, paused 2ms+2ms, total 11ms
I/Authorization(10443): getAuthorizationState
W/dalvikvm(10443): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10443): VFY: unable to resolve instance field 2423
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10443): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10443): VFY: unable to resolve instance field 2423
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10443): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10443): VFY: unable to resolve instance field 2423
D/dalvikvm(10443): VFY: replacing opcode 0x54 at 0x0002
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 10443
I/System.out(10443): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:26
I/System.out(10443): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:59
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:183
V/WebViewChromium(10443): Binding Chromium to the background looper Looper (main, tid 1) {4a7abe04}
I/chromium(10443): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(10443): Initializing chromium process, renderers=0
W/chromium(10443): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10443): GC_CONCURRENT freed 309K, 21% free 4112K/5144K, paused 2ms+0ms, total 5ms
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/libEGL  (10443): loaded /system/lib/egl/libEGL_adreno.so
D/        (10443): HostConnection::get() New Host Connection established 0xb8eb5180, tid 10443
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:1
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out(10443): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
D/libEGL  (10443): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (10443): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b6a0c3f2-6452-46f5-bf45-9d06f5df9e97
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10443): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:6
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10443): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/dalvikvm(10443): GC_CONCURRENT freed 323K, 19% free 4174K/5144K, paused 2ms+0ms, total 9ms
I/System.out(10443): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10443): GC_FOR_ALLOC freed 26K, 19% free 4182K/5144K, paused 3ms, total 3ms
I/dalvikvm-heap(10443): Grow heap (frag case) to 4.197MB for 56388-byte allocation
D/dalvikvm(10443): GC_FOR_ALLOC freed <1K, 19% free 4237K/5200K, paused 15ms, total 15ms
D/dalvikvm(10443): GC_FOR_ALLOC freed <1K, 19% free 4237K/5200K, paused 5ms, total 6ms
I/dalvikvm-heap(10443): Grow heap (frag case) to 4.803MB for 635808-byte allocation
D/dalvikvm(10443): GC_FOR_ALLOC freed 0K, 17% free 4858K/5824K, paused 10ms, total 10ms
D/dalvikvm(10443): GC_CONCURRENT freed 60K, 17% free 4864K/5824K, paused 1ms+0ms, total 7ms
D/AndroidRuntime(10443): Shutting down VM
W/dalvikvm(10443): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
E/ActivityThread(10443): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/yeshen  ( 6059): launcher onstop
D/FirebaseApp( 6059): Notifying background state change listeners.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/c.t.tdm.TrustDefenderMo(10443): Scan  already in progress or cancel requested, aborting
I/dalvikvm(10443): VMStack.getTraceBuf: threadObj 0x95059738 not active
D/dalvikvm(10443): GC_FOR_ALLOC freed 430K, 13% free 5110K/5824K, paused 9ms, total 10ms
D/dalvikvm(10443): GC_CONCURRENT freed 92K, 10% free 5352K/5884K, paused 2ms+13ms, total 32ms
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=0ac35e333c7e448ca391e09fe3008fc4&osVersion=4.4.2
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(10443): GC_CONCURRENT freed 861K, 17% free 5201K/6196K, paused 2ms+0ms, total 13ms
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:289
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b6a0c3f2-6452-46f5-bf45-9d06f5df9e97;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:293
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=b6a0c3f2-6452-46f5-bf45-9d06f5df9e97;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10443): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10443): GC_CONCURRENT freed 697K, 16% free 5249K/6196K, paused 1ms+4ms, total 22ms
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:418
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:432
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:1
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10443): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10443): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:425
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:439
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:220
D/dalvikvm(10443): GC_CONCURRENT freed 617K, 13% free 5399K/6196K, paused 4ms+0ms, total 9ms
D/dalvikvm(10443): GC_FOR_ALLOC freed 136K, 13% free 5464K/6256K, paused 7ms, total 7ms
D/dalvikvm(10443): GC_FOR_ALLOC freed 71K, 14% free 5491K/6344K, paused 5ms, total 5ms
I/dalvikvm-heap(10443): Grow heap (frag case) to 5.545MB for 130822-byte allocation
D/dalvikvm(10443): GC_FOR_ALLOC freed <1K, 14% free 5618K/6472K, paused 10ms, total 10ms
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:92
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:92
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10443): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10443): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:3
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:7
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10443): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10443): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:284
I/com.newrelic.agent.android(10443): Crash e83f1f26-93c7-f0a4-bfb0-10cbe99bde54 successfully submitted.
I/System.out(10443): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10443): GC_CONCURRENT freed 1146K, 19% free 5273K/6488K, paused 4ms+0ms, total 8ms
D/dalvikvm(10443): GC_CONCURRENT freed 677K, 19% free 5280K/6488K, paused 3ms+1ms, total 20ms
I/Process (  470): Sending signal. PID: 10443 SIG: 9
E/AndroidRuntime(10443): FATAL EXCEPTION: main
E/AndroidRuntime(10443): Process: com.mint, PID: 10443
E/AndroidRuntime(10443): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10443): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10443): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10443): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10443): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10443): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10443): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10443): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10443): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10443): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10443): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10443): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10443): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10443): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10443): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10443): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10443): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10443): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10443): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10443): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10443) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10523 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10523): ignoring registerObject request in thread=1
I/dalvikvm(10523): ignoring registerObject request in thread=1
D/dalvikvm(10523): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10523): GC_CONCURRENT freed 197K, 8% free 3087K/3348K, paused 2ms+3ms, total 8ms
I/CrashlyticsCore(10523): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10523): GC_CONCURRENT freed 217K, 8% free 3293K/3576K, paused 3ms+0ms, total 8ms
D/dalvikvm(10523): GC_CONCURRENT freed 212K, 8% free 3590K/3868K, paused 1ms+0ms, total 7ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm(10523): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10523): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10523): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm(10523): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10523): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10523): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10523): GC_CONCURRENT freed 163K, 6% free 3811K/4048K, paused 1ms+1ms, total 4ms
D/dalvikvm(10523): GC_FOR_ALLOC freed 227K, 7% free 4087K/4388K, paused 4ms, total 4ms
D/dalvikvm(10523): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10523): VFY: unable to resolve instance field 38765
D/dalvikvm(10523): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10523): <init> androidContext: 'com.mint.app.MintApp@4a7b1808' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm(10523): GC_CONCURRENT freed 185K, 6% free 4399K/4664K, paused 2ms+1ms, total 9ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 4ms
W/dalvikvm(10523): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10523): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10523): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10523): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10523): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10523): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10523): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10523): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10523): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10523): VFY: replacing opcode 0x72 at 0x0006
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 13ms
I/System.out(10523): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10523): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10523): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10523): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10523): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10523): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10523): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10523): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10523): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(10523): GC_CONCURRENT freed 292K, 8% free 4594K/4968K, paused 2ms+2ms, total 6ms
I/Authorization(10523): getAuthorizationState
I/com.newrelic.agent.android(10523): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10523): Application state monitor has started
I/com.newrelic.agent.android(10523): Analytics Controller started.
I/com.newrelic.agent.android(10523): Measurement Engine initialized.
I/com.newrelic.agent.android(10523): New Relic Agent v5.4.0
D/dalvikvm(10523): GC_CONCURRENT freed 447K, 11% free 4610K/5136K, paused 3ms+1ms, total 6ms
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android(10523): Harvester: connected
I/com.newrelic.agent.android(10523): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10523): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10523): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10523): Harvester: Sending 0 analytics events.
I/System.out(10523): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:4
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
D/dalvikvm(10523): GC_CONCURRENT freed 1504K, 29% free 3754K/5216K, paused 1ms+2ms, total 16ms
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10523): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10523): GC_CONCURRENT freed 321K, 25% free 3926K/5216K, paused 2ms+3ms, total 17ms
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/dalvikvm(10523): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10523): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10523): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10523): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm(10523): GC_FOR_ALLOC freed 355K, 25% free 3912K/5216K, paused 5ms, total 5ms
W/dalvikvm(10523): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10523): VFY: unable to resolve instance field 2423
D/dalvikvm(10523): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10523): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10523): VFY: unable to resolve instance field 2423
D/dalvikvm(10523): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10523): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10523): VFY: unable to resolve instance field 2423
D/dalvikvm(10523): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10523): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(10523): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10523): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10523): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=030ed557-edc6-4f10-bc07-76cc7b13881d
I/System.out(10523): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10523): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10523): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10523): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=030ed557-edc6-4f10-bc07-76cc7b13881d
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10523): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/dalvikvm(10523): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10523): VFY: unable to resolve instance field 2423
D/dalvikvm(10523): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10523): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10523): VFY: unable to resolve instance field 2423
D/dalvikvm(10523): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(10523): Shutting down VM
W/dalvikvm(10523): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
D/dalvikvm(10523): GC_CONCURRENT freed 152K, 21% free 4144K/5216K, paused 1ms+1ms, total 4ms
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:49
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10523): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm(10523): GC_FOR_ALLOC freed 171K, 20% free 4193K/5216K, paused 6ms, total 6ms
I/dalvikvm-heap(10523): Grow heap (frag case) to 4.190MB for 38766-byte allocation
D/dalvikvm(10523): GC_FOR_ALLOC freed <1K, 20% free 4230K/5256K, paused 4ms, total 4ms
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10523): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10523): GC_FOR_ALLOC freed 48K, 20% free 4211K/5256K, paused 5ms, total 5ms
I/dalvikvm-heap(10523): Grow heap (frag case) to 4.226MB for 58146-byte allocation
D/dalvikvm(10523): GC_FOR_ALLOC freed 3K, 20% free 4264K/5316K, paused 5ms, total 5ms
D/dalvikvm(10523): GC_FOR_ALLOC freed 45K, 21% free 4228K/5316K, paused 6ms, total 6ms
I/dalvikvm-heap(10523): Grow heap (frag case) to 4.271MB for 87216-byte allocation
D/dalvikvm(10523): GC_FOR_ALLOC freed <1K, 21% free 4313K/5404K, paused 3ms, total 3ms
D/dalvikvm(10523): GC_FOR_ALLOC freed 80K, 22% free 4264K/5404K, paused 4ms, total 4ms
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10523): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(10523): GC_CONCURRENT freed 513K, 24% free 4135K/5404K, paused 2ms+0ms, total 6ms
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:167
I/System.out(10523): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=030ed557-edc6-4f10-bc07-76cc7b13881d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10523): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:169
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10523): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10523): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=030ed557-edc6-4f10-bc07-76cc7b13881d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10523): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10523): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/dalvikvm(10523): GC_CONCURRENT freed 353K, 23% free 4165K/5404K, paused 1ms+1ms, total 4ms
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:214
D/dalvikvm(10523): GC_CONCURRENT freed 411K, 23% free 4171K/5404K, paused 0ms+1ms, total 3ms
D/dalvikvm(10523): GC_FOR_ALLOC freed 139K, 20% free 4361K/5404K, paused 3ms, total 3ms
I/dalvikvm-heap(10523): Grow heap (frag case) to 4.400MB for 87216-byte allocation
D/dalvikvm(10523): GC_FOR_ALLOC freed <1K, 20% free 4446K/5492K, paused 5ms, total 5ms
D/dalvikvm(10523): GC_FOR_ALLOC freed 64K, 21% free 4391K/5492K, paused 3ms, total 3ms
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:312
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:329
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:1
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10523): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10523): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:90
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:90
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:277
I/com.newrelic.agent.android(10523): Crash 50449c97-c918-05c1-e340-9c0b395ab20d successfully submitted.
I/System.out(10523): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10523): GC_CONCURRENT freed 740K, 25% free 4169K/5492K, paused 2ms+0ms, total 8ms
D/dalvikvm(10523): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10523): GC_CONCURRENT freed 385K, 25% free 4167K/5492K, paused 1ms+1ms, total 4ms
D/dalvikvm(10523): GC_CONCURRENT freed 378K, 25% free 4172K/5492K, paused 2ms+0ms, total 5ms
I/System.out(10523): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 10523 SIG: 9
E/AndroidRuntime(10523): FATAL EXCEPTION: main
E/AndroidRuntime(10523): Process: com.mint, PID: 10523
E/AndroidRuntime(10523): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10523): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10523): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10523): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10523): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10523): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10523): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10523): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10523): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10523): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10523): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10523): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10523): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10523): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10523): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10523): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10523): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10523): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10523): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10523): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10523) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10573): ignoring registerObject request in thread=1
I/dalvikvm(10573): ignoring registerObject request in thread=1
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10573 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(10573): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10573): GC_CONCURRENT freed 156K, 7% free 3202K/3420K, paused 2ms+3ms, total 7ms
I/CrashlyticsCore(10573): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10573): GC_CONCURRENT freed 284K, 10% free 3427K/3776K, paused 1ms+0ms, total 7ms
D/dalvikvm(10573): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10573): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10573): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10573): WAIT_FOR_CONCURRENT_GC blocked 24ms
D/dalvikvm(10573): GC_CONCURRENT freed 189K, 7% free 3736K/4000K, paused 1ms+2ms, total 7ms
I/dalvikvm(10573): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10573): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10573): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10573): GC_CONCURRENT freed 265K, 9% free 3874K/4212K, paused 2ms+0ms, total 4ms
I/dalvikvm(10573): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10573): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10573): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10573): GC_CONCURRENT freed 180K, 6% free 4078K/4336K, paused 1ms+0ms, total 4ms
D/dalvikvm(10573): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10573): VFY: unable to resolve instance field 38765
D/dalvikvm(10573): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10573): <init> androidContext: 'com.mint.app.MintApp@4a7b1f30' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
D/dalvikvm(10573): GC_FOR_ALLOC freed 127K, 5% free 4443K/4652K, paused 4ms, total 4ms
W/dalvikvm(10573): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10573): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10573): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10573): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10573): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10573): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10573): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10573): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10573): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10573): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10573): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10573): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10573): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10573): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10573): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10573): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10573): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10573): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10573): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(10573): GC_CONCURRENT freed 95K, 6% free 4435K/4684K, paused 1ms+1ms, total 4ms
I/Authorization(10573): getAuthorizationState
D/dalvikvm(10573): GC_CONCURRENT freed 317K, 9% free 4540K/4940K, paused 3ms+0ms, total 6ms
I/com.newrelic.agent.android(10573): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10573): Application state monitor has started
I/com.newrelic.agent.android(10573): Analytics Controller started.
I/com.newrelic.agent.android(10573): Measurement Engine initialized.
I/com.newrelic.agent.android(10573): New Relic Agent v5.4.0
D/dalvikvm(10573): GC_CONCURRENT freed 1587K, 33% free 3395K/5060K, paused 1ms+0ms, total 4ms
I/com.newrelic.agent.android(10573): Harvester: connected
I/com.newrelic.agent.android(10573): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10573): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10573): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10573): Harvester: Sending 0 analytics events.
D/dalvikvm(10573): GC_FOR_ALLOC freed 107K, 33% free 3430K/5060K, paused 2ms, total 2ms
I/dalvikvm-heap(10573): Grow heap (frag case) to 3.446MB for 39950-byte allocation
D/dalvikvm(10573): GC_FOR_ALLOC freed <1K, 32% free 3469K/5100K, paused 4ms, total 4ms
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/dalvikvm(10573): GC_FOR_ALLOC freed 29K, 33% free 3458K/5100K, paused 3ms, total 3ms
I/dalvikvm-heap(10573): Grow heap (frag case) to 3.512MB for 79888-byte allocation
D/dalvikvm(10573): GC_FOR_ALLOC freed 40K, 33% free 3495K/5180K, paused 3ms, total 3ms
I/System.out(10573): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10573): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10573): GC_FOR_ALLOC freed 17K, 32% free 3543K/5180K, paused 3ms, total 3ms
I/dalvikvm-heap(10573): Grow heap (frag case) to 3.595MB for 79888-byte allocation
D/dalvikvm(10573): GC_FOR_ALLOC freed 39K, 32% free 3582K/5260K, paused 2ms, total 2ms
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:21
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10573): GC_CONCURRENT freed 127K, 28% free 3839K/5260K, paused 2ms+1ms, total 7ms
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:2
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:1
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10573): GC_CONCURRENT freed 304K, 24% free 4003K/5260K, paused 2ms+1ms, total 8ms
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:3
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10573): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/dalvikvm(10573): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10573): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10573): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10573): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
W/dalvikvm(10573): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10573): VFY: unable to resolve instance field 2423
D/dalvikvm(10573): VFY: replacing opcode 0x54 at 0x0000
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10573): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
W/dalvikvm(10573): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/dalvikvm(10573): VFY: unable to resolve instance field 2423
D/dalvikvm(10573): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10573): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10573): VFY: unable to resolve instance field 2423
D/dalvikvm(10573): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10573): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
D/dalvikvm(10573): GC_CONCURRENT freed 392K, 24% free 4036K/5260K, paused 2ms+0ms, total 7ms
I/System.out(10573): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
W/dalvikvm(10573): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out(10573): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10573): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7fc20f83-831d-4d76-9d79-bf83c732fb89
I/System.out(10573): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
W/dalvikvm(10573): VFY: unable to resolve instance field 2423
D/dalvikvm(10573): VFY: replacing opcode 0x54 at 0x0005
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10573): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10573): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10573): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7fc20f83-831d-4d76-9d79-bf83c732fb89
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10573): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10573): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10573): VFY: unable to resolve instance field 2423
D/dalvikvm(10573): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(10573): Shutting down VM
W/dalvikvm(10573): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm(10573): GC_CONCURRENT freed 157K, 19% free 4262K/5260K, paused 1ms+0ms, total 5ms
D/dalvikvm(10573): GC_FOR_ALLOC freed 305K, 18% free 4329K/5260K, paused 4ms, total 4ms
I/dalvikvm-heap(10573): Grow heap (frag case) to 4.341MB for 58146-byte allocation
D/dalvikvm(10573): GC_FOR_ALLOC freed <1K, 18% free 4385K/5320K, paused 4ms, total 4ms
D/dalvikvm(10573): GC_FOR_ALLOC freed 46K, 19% free 4347K/5320K, paused 3ms, total 4ms
I/dalvikvm-heap(10573): Grow heap (frag case) to 4.387MB for 87216-byte allocation
D/dalvikvm(10573): GC_FOR_ALLOC freed <1K, 19% free 4432K/5408K, paused 4ms, total 4ms
D/dalvikvm(10573): GC_FOR_ALLOC freed 127K, 20% free 4379K/5408K, paused 3ms, total 3ms
I/dalvikvm-heap(10573): Grow heap (frag case) to 4.415MB for 82922-byte allocation
D/dalvikvm(10573): GC_FOR_ALLOC freed <1K, 19% free 4460K/5492K, paused 4ms, total 4ms
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10573): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:124
I/System.out(10573): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7fc20f83-831d-4d76-9d79-bf83c732fb89;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10573): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:126
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10573): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10573): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7fc20f83-831d-4d76-9d79-bf83c732fb89;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10573): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10573): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10573): GC_CONCURRENT freed 592K, 23% free 4280K/5492K, paused 2ms+0ms, total 5ms
D/dalvikvm(10573): GC_CONCURRENT freed 380K, 22% free 4284K/5492K, paused 3ms+1ms, total 6ms
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:253
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:289
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10573): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:222
D/dalvikvm(10573): GC_CONCURRENT freed 218K, 19% free 4459K/5492K, paused 2ms+0ms, total 5ms
D/dalvikvm(10573): GC_FOR_ALLOC freed 162K, 18% free 4507K/5492K, paused 3ms, total 4ms
I/dalvikvm-heap(10573): Grow heap (frag case) to 4.540MB for 82922-byte allocation
D/dalvikvm(10573): GC_FOR_ALLOC freed <1K, 18% free 4588K/5576K, paused 5ms, total 5ms
I/System.out(10573): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:81
I/System.out(10573): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:81
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:286
I/com.newrelic.agent.android(10573): Crash 96406b05-a22c-aed0-ea90-c3045fe1a8b4 successfully submitted.
I/System.out(10573): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10573): GC_CONCURRENT freed 762K, 24% free 4281K/5576K, paused 2ms+0ms, total 5ms
D/dalvikvm(10573): GC_CONCURRENT freed 385K, 24% free 4280K/5576K, paused 1ms+1ms, total 4ms
I/Process (  470): Sending signal. PID: 10573 SIG: 9
E/AndroidRuntime(10573): FATAL EXCEPTION: main
E/AndroidRuntime(10573): Process: com.mint, PID: 10573
E/AndroidRuntime(10573): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10573): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10573): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10573): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10573): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10573): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10573): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10573): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10573): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10573): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10573): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10573): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10573): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10573): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10573): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10573): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10573): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10573): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10573): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10573): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 10573) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/ActivityManager(  470): Force removing ActivityRecord{4a98ad5c u0 com.mint/.core.overview.LoginActivity$XLarge t60}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/FirebaseApp( 6059): Notifying background state change listeners.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_CALENDAR]}} from pid 470
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 cmp=com.android.browser/.BrowserActivity sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_BROWSER]}} from pid 470
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a928308 attribute=null, token = android.os.BinderProxy@4ac7d000
D/dalvikvm(  668): GC_EXPLICIT freed 803K, 17% free 6677K/7960K, paused 2ms+2ms, total 18ms
E/FastMixer(  168): did not receive expected priority boost
D/dalvikvm( 6059): GC_FOR_ALLOC freed 6476K, 6% free 118798K/125944K, paused 23ms, total 23ms
W/Launcher( 6059): No global search activity found.
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.facebook.lite/.MainActivity bnds=[538,301][742,428] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
V/FlingTracker(  556): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  556): java.lang.Throwable
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  556): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  556): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  556): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  556): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  556): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  556): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  556): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/PanelView(  556): animationTick called with dtms=-5; nothing to do (h=0.0 v=0.0)
W/Launcher( 6059): No global search activity found.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.facebook.lite/.MainActivity bnds=[538,301][742,428] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/Launcher( 6059): No global search activity found.
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.android.contacts/.activities.PeopleActivity bnds=[538,174][742,301] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cyanogenmod.filemanager/.activities.NavigationActivity bnds=[334,174][538,301] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
D/AndroidRuntime( 6059): Shutting down VM
W/dalvikvm( 6059): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/System.err( 6059): java.lang.ArrayIndexOutOfBoundsException: length=0; index=2
W/System.err( 6059): 	at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:117)
W/System.err( 6059): 	at com.vphone.launcher.Hotseat$8.onClick(SourceFile:1238)
W/System.err( 6059): 	at android.view.View.performClick(View.java:4438)
W/System.err( 6059): 	at android.view.View$PerformClick.run(View.java:18422)
W/System.err( 6059): 	at android.os.Handler.handleCallback(Handler.java:733)
W/System.err( 6059): 	at android.os.Handler.dispatchMessage(Handler.java:95)
W/System.err( 6059): 	at android.os.Looper.loop(Looper.java:136)
W/System.err( 6059): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
W/System.err( 6059): 	at java.lang.reflect.Method.invokeNative(Native Method)
W/System.err( 6059): 	at java.lang.reflect.Method.invoke(Method.java:515)
W/System.err( 6059): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
W/System.err( 6059): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
W/System.err( 6059): 	at dalvik.system.NativeStart.main(Native Method)
E/Tinker.UncaughtHandler( 6059): TinkerUncaughtHandler catch exception:java.lang.ArrayIndexOutOfBoundsException: length=0; index=2
E/Tinker.UncaughtHandler( 6059): 	at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:117)
E/Tinker.UncaughtHandler( 6059): 	at com.vphone.launcher.Hotseat$8.onClick(SourceFile:1238)
E/Tinker.UncaughtHandler( 6059): 	at android.view.View.performClick(View.java:4438)
E/Tinker.UncaughtHandler( 6059): 	at android.view.View$PerformClick.run(View.java:18422)
E/Tinker.UncaughtHandler( 6059): 	at android.os.Handler.handleCallback(Handler.java:733)
E/Tinker.UncaughtHandler( 6059): 	at android.os.Handler.dispatchMessage(Handler.java:95)
E/Tinker.UncaughtHandler( 6059): 	at android.os.Looper.loop(Looper.java:136)
E/Tinker.UncaughtHandler( 6059): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/Tinker.UncaughtHandler( 6059): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/Tinker.UncaughtHandler( 6059): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/Tinker.UncaughtHandler( 6059): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/Tinker.UncaughtHandler( 6059): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/Tinker.UncaughtHandler( 6059): 	at dalvik.system.NativeStart.main(Native Method)
I/Process (  470): Sending signal. PID: 6059 SIG: 9
E/AndroidRuntime( 6059): FATAL EXCEPTION: main
E/AndroidRuntime( 6059): Process: com.vphone.launcher, PID: 6059
E/AndroidRuntime( 6059): java.lang.ArrayIndexOutOfBoundsException: length=0; index=2
E/AndroidRuntime( 6059): 	at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:117)
E/AndroidRuntime( 6059): 	at com.vphone.launcher.Hotseat$8.onClick(SourceFile:1238)
E/AndroidRuntime( 6059): 	at android.view.View.performClick(View.java:4438)
E/AndroidRuntime( 6059): 	at android.view.View$PerformClick.run(View.java:18422)
E/AndroidRuntime( 6059): 	at android.os.Handler.handleCallback(Handler.java:733)
E/AndroidRuntime( 6059): 	at android.os.Handler.dispatchMessage(Handler.java:95)
E/AndroidRuntime( 6059): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 6059): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime( 6059): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 6059): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 6059): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime( 6059): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime( 6059): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.vphone.launcher at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.vphone.launcher (pid 6059) has died.
I/WindowState(  470): WIN DEATH: Window{4afdb394 u0 Toast}
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/WindowState(  470): WIN DEATH: Window{4aacafb8 u0 com.vphone.launcher/com.vphone.launcher.Launcher}
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): Start proc com.vphone.launcher for activity com.vphone.launcher/.Launcher: pid=10668 uid=1000 gids={41000, 1028, 1015, 1023, 3002, 3001, 3003}
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/dalvikvm(10668): ignoring registerObject request in thread=1
I/dalvikvm(10668): ignoring registerObject request in thread=1
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/Tinker.TinkerLoader(10668): tryLoadPatchFiles:patch dir not exist:/data/user/0/com.vphone.launcher/tinker
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/Tinker.DefaultAppLike(10668): onBaseContextAttached:
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/dalvikvm(  746): GC_EXPLICIT freed 544K, 22% free 9145K/11636K, paused 2ms+23ms, total 119ms
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/FirebaseApp(10668): com.google.firebase.auth.FirebaseAuth is not linked. Skipping initialization.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/FirebaseApp(10668): Initialized class com.google.firebase.iid.FirebaseInstanceId.
D/FirebaseApp(10668): com.google.firebase.crash.FirebaseCrash is not linked. Skipping initialization.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/dalvikvm(10668): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.zze.zzk
W/dalvikvm(10668): VFY: unable to resolve virtual method 879: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10668): VFY: replacing opcode 0x6e at 0x000b
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
I/FA      (10668): App measurement is starting up, version: 9080
I/FA      (10668): To enable debug logging run: adb shell setprop log.tag.FA VERBOSE
D/dalvikvm(10668): GC_CONCURRENT freed 255K, 10% free 3103K/3420K, paused 2ms+6ms, total 17ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/FirebaseApp(10668): Initialized class com.google.android.gms.measurement.AppMeasurement.
I/FirebaseInitProvider(10668): FirebaseApp initialization successful
V/GoogleSignatureVerifier(10668): com.google.android.gms signature not valid.  Found: 
V/GoogleSignatureVerifier(10668): MIIEQzCCAyugAwIBAgIJAMLgh0ZkSjCNMA0GCSqGSIb3DQEBBAUAMHQxCzAJBgNVBAYTAlVTMRMw
V/GoogleSignatureVerifier(10668): EQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29n
V/GoogleSignatureVerifier(10668): bGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDAeFw0wODA4MjEyMzEz
V/GoogleSignatureVerifier(10668): MzRaFw0zNjAxMDcyMzEzMzRaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYw
V/GoogleSignatureVerifier(10668): FAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5k
V/GoogleSignatureVerifier(10668): cm9pZDEQMA4GA1UEAxMHQW5kcm9pZDCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBAKtW
V/GoogleSignatureVerifier(10668): LgDYO6IIrgqWbxJOKdoR8qtW0I9Y4sypEwPpt1TTcvZApxsdyxMJZ2JORland2qSGT2y5b+3JKke
V/GoogleSignatureVerifier(10668): dxiLDmpHpDsz2WCbdxgxRczfey5YZnTJ4VZbH0xqWVW/8lGmPav5xVwnIiJS6HXk+BVKZF+JcWjA
V/GoogleSignatureVerifier(10668): sb/GEuq/eFdpuzSqeYTcfi6idkyugwfYwXFU1+5fZKUaRKYCwkkFQVfcAs1fXA5V+++FGfvjJ/Cx
V/GoogleSignatureVerifier(10668): URaSxaBvGdGDhfXE28LWuT9ozCl5xw4Yq5OGazvV24mZVSoOO0yZ31j7kYvtwYK6NeADwbSxDdJE
V/GoogleSignatureVerifier(10668): qO4k//0zOHKrUiGYXtqw/A0LFFtqoZKFjnkCAQOjgdkwgdYwHQYDVR0OBBYEFMd9jMIhF1Ylmn/T
V/GoogleSignatureVerifier(10668): gt9r45jk14alMIGmBgNVHSMEgZ4wgZuAFMd9jMIhF1Ylmn/Tgt9r45jk14aloXikdjB0MQswCQYD
V/GoogleSignatureVerifier(10668): VQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIG
V/GoogleSignatureVerifier(10668): A1UEChMLR29vZ2xlIEluYy4xEDAOBgNVBAsTB0FuZHJvaWQxEDAOBgNVBAMTB0FuZHJvaWSCCQDC
V/GoogleSignatureVerifier(10668): 4IdGZEowjTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBAUAA4IBAQBt0lLO74UwLDYKqs6Tm8/y
V/GoogleSignatureVerifier(10668): zKkEu116FmH4rkaymUIE0P9KaMftGlMexFlaYjzmB2OxZyl6euNXEsQH8gjwyxCUKRJNexBiGcCE
V/GoogleSignatureVerifier(10668): yj6z+a1fuHHvkiaai+KL8W1EyNmgjmyy8AW7P+LLlkR+ho5zEHatRbM/YAnqGcFh5iZBqpknHf1S
V/GoogleSignatureVerifier(10668): KMXFh4dd239FJ1jWYfbMDMy3NS5CTMQ2XFI1MvcyUTdZPErjQfTbQe3aDQsQcafEQPD+nqActifK
V/GoogleSignatureVerifier(10668): Z0Np0IS9L9kR/wbNvyz6ENwPiTrjV2KRkEjH78ZMcUQXg0L3BYHJ3lc69Vs5Ddf9uUGGMYldX3Wf
V/GoogleSignatureVerifier(10668): MBEmh/9iFBDAaTCK
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.internal.zzn$zzb.zzdg:-1 com.google.android.gms.common.internal.zzn.zza:-1 
I/dalvikvm(10668): Could not find method android.view.ViewAnimationUtils.createCircularReveal, referenced from method com.vphone.launcher.Launcher.a
W/dalvikvm(10668): VFY: unable to resolve static method 16466: Landroid/view/ViewAnimationUtils;.createCircularReveal (Landroid/view/View;IIFF)Landroid/animation/Animator;
D/dalvikvm(10668): VFY: replacing opcode 0x71 at 0x026f
D/Launcher.LauncherProvider(10668): 11683562 - initializeMaxScreenId(): 1
D/Tinker.DefaultAppLike(10668): onCreate
V/Launcher(10668): LauncherAppState inited
D/dalvikvm(10668): GC_CONCURRENT freed 379K, 13% free 3108K/3552K, paused 2ms+0ms, total 4ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 10K, 12% free 3271K/3680K, paused 3ms, total 3ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 2K, 10% free 3466K/3840K, paused 2ms, total 2ms
D/Launcher.Model(10668): Old launcher provider: content://com.android.launcher2.settings/favorites?notify=true
D/Launcher.Model(10668): Old launcher provider does not exist.
W/ImageLoader(10668): diskCache() and diskCacheFileNameGenerator() calls overlap each other
I/PackageManager(  470):   Action: "android.intent.action.MAIN"
I/PackageManager(  470):   Category: "android.intent.category.HOME"
I/PackageManager(  470):   Category: "android.intent.category.DEFAULT"
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.startService:1492 android.content.ContextWrapper.startService:494 com.vphone.launcher.utils.ApplicationHelper.init:105 com.vphone.launcher.update.hotfix.LauncherApplicationLike.onCreate:98 com.tencent.tinker.loader.app.TinkerApplication.onCreate:173 
I/PackageManager(  470): Adding preferred activity ComponentInfo{com.vphone.launcher/com.vphone.launcher.Launcher} for user 0 :
D/dalvikvm(10668): GC_FOR_ALLOC freed 85K, 9% free 3699K/4040K, paused 2ms, total 3ms
D/dalvikvm(10668): GC_CONCURRENT freed 288K, 10% free 3806K/4208K, paused 3ms+1ms, total 5ms
W/ActivityThread(10668): ClassLoader.loadClass: The class loader returned by Thread.getContextClassLoader() may fail for processes that host multiple applications. You should explicitly specify a context class loader. For example: Thread.setContextClassLoader(getClass().getClassLoader());
D/dalvikvm(10668): GC_CONCURRENT freed 286K, 8% free 4029K/4380K, paused 1ms+1ms, total 17ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 2ms
W/Launcher(10668): setApplicationContext called twice! old=com.vphone.launcher.LauncherApplicationEx@4a7b2a28 new=com.vphone.launcher.LauncherApplicationEx@4a7b2a28
I/dalvikvm(10668): Could not find method android.view.ViewAnimationUtils.createCircularReveal, referenced from method com.vphone.launcher.LauncherAnimUtils.createCircularReveal
W/dalvikvm(10668): VFY: unable to resolve static method 16466: Landroid/view/ViewAnimationUtils;.createCircularReveal (Landroid/view/View;IIFF)Landroid/animation/Animator;
D/dalvikvm(10668): VFY: replacing opcode 0x71 at 0x0000
W/ResourceType(10668): Attempt to retrieve bag 0x7f0b0001 which is invalid or in a cycle.
D/dalvikvm(10668): GC_CONCURRENT freed 251K, 7% free 4230K/4548K, paused 2ms+0ms, total 9ms
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.startService:1492 android.content.ContextWrapper.startService:494 com.vphone.launcher.Launcher.h:664 com.vphone.launcher.Launcher.b:180 com.vphone.launcher.Launcher$11.run:646 
D/Launcher.Model(10668): 11683562 - loadWorkspace()
D/Launcher.Model(10668): 11683562 -   loadedOldDb: false
D/dalvikvm(10668): GC_CONCURRENT freed 228K, 7% free 4386K/4688K, paused 1ms+0ms, total 4ms
D/yeshen  (10668): launcher onpause
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=10710 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(10668): GC_CONCURRENT freed 327K, 8% free 4575K/4964K, paused 1ms+0ms, total 26ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 14ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 17ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 23ms
D/dalvikvm(  470): GC_EXPLICIT freed 7801K, 49% free 17572K/34424K, paused 1ms+4ms, total 34ms
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10710): ignoring registerObject request in thread=1
I/dalvikvm(10710): ignoring registerObject request in thread=1
D/dalvikvm(10668): GC_CONCURRENT freed 327K, 8% free 4699K/5108K, paused 2ms+0ms, total 6ms
D/dalvikvm(10710): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10710): GC_CONCURRENT freed 162K, 7% free 3196K/3420K, paused 2ms+3ms, total 6ms
D/Launcher.Model(10668): Invalid package: ComponentInfo{com.vizmanga.android/com.vizmanga.android.vizmangalib.activities.StoreActivity} (check again later)
D/Launcher.Model(10668): 11683562 - loadWorkspaceScreensDb()
D/Launcher.Model(10668): 11683562 -   screens: { 0: 1 }
D/Launcher.Model(10668): 11683562 -   sBgWorkspaceScreens: 1
D/dalvikvm(10710): GC_CONCURRENT freed 263K, 9% free 3443K/3772K, paused 1ms+0ms, total 17ms
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 13ms
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 14ms
D/dalvikvm(10710): GC_CONCURRENT freed 173K, 6% free 3776K/4016K, paused 1ms+4ms, total 7ms
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/libEGL  (10668): loaded /system/lib/egl/libEGL_adreno.so
D/dalvikvm(10710): GC_CONCURRENT freed 122K, 5% free 4041K/4248K, paused 2ms+0ms, total 4ms
D/        (10668): HostConnection::get() New Host Connection established 0xb8ebaa60, tid 10668
I/CrashlyticsCore(10710): Initializing Crashlytics 2.3.5.79
D/libEGL  (10668): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (10668): loaded /system/lib/egl/libGLESv2_adreno.so
I/dalvikvm(10710): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10710): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10710): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10710): GC_CONCURRENT freed 253K, 8% free 4246K/4588K, paused 5ms+9ms, total 23ms
I/dalvikvm(10710): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10710): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10710): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10668): GC_CONCURRENT freed 405K, 9% free 4790K/5260K, paused 1ms+1ms, total 12ms
D/dalvikvm(10710): GC_CONCURRENT freed 1531K, 35% free 3100K/4712K, paused 2ms+0ms, total 6ms
D/dalvikvm(10710): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10710): VFY: unable to resolve instance field 38765
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10710): <init> androidContext: 'com.mint.app.MintApp@4a7b2e94' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/EGL_emulation(10668): eglSurfaceAttrib not implemented 3093 12436
W/dalvikvm(10710): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10710): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10710): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10710): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10710): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10710): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10710): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10710): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10710): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10710): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10710): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10710): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10710): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10710): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10710): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10710): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10710): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10710): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(10710): GC_CONCURRENT freed 219K, 29% free 3376K/4712K, paused 2ms+4ms, total 9ms
D/OpenGLRenderer(10668): Enabling debug mode 0
I/Authorization(10710): getAuthorizationState
I/com.newrelic.agent.android(10710): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10710): Application state monitor has started
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10710): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android(10710): Analytics Controller started.
I/com.newrelic.agent.android(10710): Measurement Engine initialized.
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10710): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10710): GC_CONCURRENT freed 434K, 28% free 3429K/4712K, paused 2ms+1ms, total 17ms
I/com.newrelic.agent.android(10710): New Relic Agent v5.4.0
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 17ms
I/dalvikvm-heap(10710): Grow heap (frag case) to 3.567MB for 79888-byte allocation
D/dalvikvm(10710): GC_FOR_ALLOC freed 81K, 27% free 3511K/4792K, paused 27ms, total 27ms
I/qtaguid (10668): Tagging socket 55 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(10668): tagSocketFd(55, 1239581248, -1) failed with errno-13
D/dalvikvm(10710): GC_FOR_ALLOC freed 78K, 27% free 3541K/4792K, paused 7ms, total 7ms
I/dalvikvm-heap(10710): Grow heap (frag case) to 3.593MB for 79888-byte allocation
D/Launcher(10668): 11683562 - bindAddScreens()
D/Launcher(10668): 11683562 -   orderedScreenIds: 1
D/Launcher.Workspace(10668): 11683562 - insertNewWorkspaceScreen(): 1 at index: 0
D/EventBus(10668): No subscribers registered for event class com.vphone.launcher.game.event.RankEvent
W/dalvikvm(10668): VFY: unable to find class referenced in signature (Ljava/nio/file/Path;)
D/dalvikvm(10710): GC_FOR_ALLOC freed <1K, 26% free 3619K/4872K, paused 12ms, total 12ms
I/com.newrelic.agent.android(10710): Harvester: connected
D/EventBus(10668): No subscribers registered for event class org.greenrobot.eventbus.NoSubscriberEvent
I/com.newrelic.agent.android(10710): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10710): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10710): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10710): Harvester: Sending 0 analytics events.
W/dalvikvm(10668): VFY: unable to find class referenced in signature ([Ljava/nio/file/OpenOption;)
I/dalvikvm(10668): Could not find method java.nio.file.Files.newOutputStream, referenced from method okio.Okio.sink
W/dalvikvm(10668): VFY: unable to resolve static method 50584: Ljava/nio/file/Files;.newOutputStream (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
D/dalvikvm(10668): VFY: replacing opcode 0x71 at 0x000b
W/dalvikvm(10668): VFY: unable to find class referenced in signature (Ljava/nio/file/Path;)
I/Launcher(10668): Deferring update until onResume
I/Launcher(10668): Deferring update until onResume
I/Launcher(10668): Deferring update until onResume
I/Launcher(10668): Deferring update until onResume
I/Launcher(10668): Deferring update until onResume
I/Launcher(10668): Deferring update until onResume
W/dalvikvm(10668): VFY: unable to find class referenced in signature ([Ljava/nio/file/OpenOption;)
I/dalvikvm(10668): Could not find method java.nio.file.Files.newInputStream, referenced from method okio.Okio.source
W/dalvikvm(10668): VFY: unable to resolve static method 50583: Ljava/nio/file/Files;.newInputStream (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
D/dalvikvm(10668): VFY: replacing opcode 0x71 at 0x000b
D/dalvikvm(10710): GC_CONCURRENT freed 208K, 23% free 3794K/4872K, paused 5ms+1ms, total 8ms
I/dalvikvm(10710): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10710): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10710): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10710): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm(10668): GC_CONCURRENT freed 430K, 10% free 4895K/5388K, paused 0ms+1ms, total 10ms
D/dalvikvm(10710): GC_CONCURRENT freed 253K, 20% free 3927K/4872K, paused 5ms+1ms, total 9ms
D/dalvikvm(10710): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm(10710): VFY: unable to resolve instance field 38470
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0005
D/Lifecycle(10710): onActivityCreated: core.overview.RouterActivity
W/dalvikvm(10710): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10710): VFY: unable to resolve instance field 2423
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10710): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10710): VFY: unable to resolve instance field 2423
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10710): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm(10710): VFY: unable to resolve instance field 38747
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0007
I/System.out(10710): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:9
I/System.out(10710): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10710): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10710): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782
I/System.out(10710): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/qtaguid (10668): Tagging socket 61 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10710): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10710): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:203
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
D/dalvikvm(10710): GC_CONCURRENT freed 306K, 17% free 4063K/4872K, paused 3ms+2ms, total 8ms
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:2
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/NetworkManagementSocketTagger(10668): tagSocketFd(61, 1239581248, -1) failed with errno-13
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/Authorization(10710): getAuthorizationState
W/dalvikvm(10710): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10710): VFY: unable to resolve instance field 2423
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0000
I/System.out(10710): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
D/dalvikvm(10710): GC_CONCURRENT freed 334K, 16% free 4113K/4872K, paused 2ms+0ms, total 8ms
W/dalvikvm(10710): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out(10710): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10710): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
W/dalvikvm(10710): VFY: unable to resolve instance field 2423
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10710): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10710): VFY: unable to resolve instance field 2423
D/dalvikvm(10710): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:10
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
V/WebViewChromium(10668): Binding Chromium to the background looper Looper (main, tid 1) {4a7ad3d4}
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/chromium(10668): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/System.out(10710): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:1
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 10710
V/WebViewChromium(10710): Binding Chromium to the background looper Looper (main, tid 1) {4a7adafc}
I/chromium(10710): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(10710): Initializing chromium process, renderers=0
I/BrowserProcessMain(10668): Initializing chromium process, renderers=0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:13
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10710): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:1
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10710): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
D/dalvikvm(10710): GC_CONCURRENT freed 380K, 15% free 4165K/4872K, paused 2ms+2ms, total 12ms
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10710): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:4
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/chromium(10668): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
W/chromium(10710): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
D/dalvikvm(10668): GC_FOR_ALLOC freed 243K, 7% free 5086K/5444K, paused 2ms, total 2ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 5.631MB for 635808-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed 0K, 6% free 5707K/6068K, paused 3ms, total 3ms
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:153
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:166
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:3
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:3
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10710): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
D/libEGL  (10710): loaded /system/lib/egl/libEGL_adreno.so
D/        (10710): HostConnection::get() New Host Connection established 0xb8eef4e0, tid 10710
D/libEGL  (10710): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (10710): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm(10710): GC_CONCURRENT freed 404K, 13% free 4273K/4872K, paused 16ms+1ms, total 27ms
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/qtaguid (10668): Tagging socket 81 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(10668): tagSocketFd(81, 1239581248, -1) failed with errno-13
D/dalvikvm(10710): GC_FOR_ALLOC freed 297K, 14% free 4235K/4872K, paused 17ms, total 19ms
I/dalvikvm-heap(10710): Grow heap (frag case) to 4.249MB for 56388-byte allocation
D/dalvikvm(10710): GC_FOR_ALLOC freed <1K, 13% free 4290K/4928K, paused 6ms, total 6ms
D/dalvikvm(10710): GC_FOR_ALLOC freed 6K, 13% free 4288K/4928K, paused 20ms, total 20ms
I/dalvikvm-heap(10710): Grow heap (frag case) to 4.852MB for 635808-byte allocation
D/dalvikvm(10710): GC_FOR_ALLOC freed <1K, 12% free 4908K/5552K, paused 4ms, total 4ms
D/dalvikvm(10668): GC_CONCURRENT freed 1397K, 22% free 5265K/6724K, paused 2ms+20ms, total 36ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 9ms
I/qtaguid (10668): Tagging socket 83 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(10668): tagSocketFd(83, 1239581248, -1) failed with errno-13
D/dalvikvm(10668): GC_CONCURRENT freed 918K, 24% free 5155K/6724K, paused 4ms+1ms, total 12ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/yeshen  (10668): launcher onstop
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
E/ActivityThread(10710): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/AndroidRuntime(10710): Shutting down VM
W/dalvikvm(10710): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/FirebaseApp(10668): Notifying background state change listeners.
D/Tinker.DefaultAppLike(10668): onTrimMemory level:20
I/FA      (10668): Tag Manager is not found and thus will not be used
W/c.t.tdm.TrustDefenderMo(10710): Scan  already in progress or cancel requested, aborting
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
D/dalvikvm(10710): GC_CONCURRENT freed 200K, 5% free 5398K/5660K, paused 66ms+13ms, total 144ms
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=2a66691e128e4a308b480c1d67ad06ce&osVersion=4.4.2
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 9ms
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(10668): GC_CONCURRENT freed 697K, 23% free 5231K/6724K, paused 0ms+1ms, total 13ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10668): GC_CONCURRENT freed 838K, 23% free 5190K/6724K, paused 0ms+1ms, total 7ms
E/libEGL  (10668): call to OpenGL ES API with no current context (logged once per thread)
D/dalvikvm(10668): GC_FOR_ALLOC freed 84K, 22% free 5262K/6724K, paused 9ms, total 9ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 5.692MB for 518412-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed 5K, 21% free 5763K/7232K, paused 3ms, total 4ms
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
D/dalvikvm(10668): GC_FOR_ALLOC freed 101K, 20% free 5823K/7232K, paused 12ms, total 12ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 6.240MB for 518412-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed 1K, 19% free 6327K/7740K, paused 4ms, total 4ms
D/dalvikvm(10710): GC_CONCURRENT freed 1061K, 18% free 5189K/6312K, paused 0ms+1ms, total 9ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 137K, 18% free 6380K/7740K, paused 19ms, total 19ms
D/dalvikvm(10710): WAIT_FOR_CONCURRENT_GC blocked 12ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 6.784MB for 518412-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed 1K, 17% free 6885K/8248K, paused 5ms, total 5ms
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
D/dalvikvm(10668): GC_FOR_ALLOC freed 202K, 18% free 6845K/8248K, paused 3ms, total 4ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 7.237MB for 518412-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed 0K, 17% free 7351K/8756K, paused 4ms, total 4ms
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
D/dalvikvm(10668): GC_FOR_ALLOC freed 91K, 16% free 7402K/8756K, paused 5ms, total 5ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 7.782MB for 518412-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed <1K, 15% free 7908K/9264K, paused 4ms, total 4ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 81K, 16% free 7848K/9264K, paused 3ms, total 3ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 8.217MB for 518412-byte allocation
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:240
D/dalvikvm(10668): GC_FOR_ALLOC freed <1K, 15% free 8354K/9772K, paused 23ms, total 23ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 507K, 20% free 7847K/9772K, paused 3ms, total 3ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 507K, 20% free 7847K/9772K, paused 3ms, total 3ms
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm(10710): GC_CONCURRENT freed 472K, 14% free 5443K/6312K, paused 2ms+65ms, total 75ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 556K, 21% free 7798K/9772K, paused 4ms, total 4ms
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
D/dalvikvm(10668): GC_FOR_ALLOC freed 556K, 21% free 7749K/9772K, paused 10ms, total 10ms
W/NotificationService(  470): Object died trying to hide notification android.app.ITransientNotification$Stub$Proxy@4a9f147c in package com.vphone.launcher
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:7
I/System.out(10710): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:1
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10710): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:1
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:928
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:974
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:881
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:903
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10710): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10710): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10710): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:2
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10710): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:3
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:293
I/com.newrelic.agent.android(10710): Crash 2e7662db-8e76-c7c5-a5c4-285b3e95846e successfully submitted.
I/System.out(10710): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(10710): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:79
I/System.out(10710): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:82
D/dalvikvm(10710): GC_CONCURRENT freed 1021K, 18% free 5176K/6312K, paused 2ms+1ms, total 8ms
D/dalvikvm(10710): GC_CONCURRENT freed 587K, 17% free 5255K/6312K, paused 1ms+1ms, total 7ms
E/AndroidRuntime(10710): FATAL EXCEPTION: main
E/AndroidRuntime(10710): Process: com.mint, PID: 10710
E/AndroidRuntime(10710): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10710): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10710): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10710): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10710): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10710): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10710): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10710): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10710): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10710): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10710): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10710): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10710): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10710): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10710): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10710): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10710): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10710): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10710): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10710): 	at dalvik.system.NativeStart.main(Native Method)
I/Process (  470): Sending signal. PID: 10710 SIG: 9
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10710) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10817 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10817): ignoring registerObject request in thread=1
I/dalvikvm(10817): ignoring registerObject request in thread=1
D/dalvikvm(10817): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10817): GC_CONCURRENT freed 159K, 7% free 3196K/3420K, paused 2ms+7ms, total 12ms
I/CrashlyticsCore(10817): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10817): GC_CONCURRENT freed 289K, 10% free 3420K/3772K, paused 2ms+0ms, total 10ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10817): GC_CONCURRENT freed 157K, 6% free 3650K/3876K, paused 1ms+0ms, total 3ms
D/dalvikvm(10817): GC_CONCURRENT freed 231K, 8% free 3917K/4224K, paused 2ms+0ms, total 6ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 10ms
I/dalvikvm(10817): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10817): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10817): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10817): GC_CONCURRENT freed 175K, 6% free 4147K/4400K, paused 1ms+0ms, total 4ms
I/dalvikvm(10817): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
D/dalvikvm(10817): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10817): VFY: unable to resolve instance field 38765
D/dalvikvm(10817): VFY: replacing opcode 0x54 at 0x0005
W/dalvikvm(10817): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10817): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10817): GC_CONCURRENT freed 248K, 7% free 4351K/4676K, paused 1ms+1ms, total 13ms
I/Authorization(10817): <init> androidContext: 'com.mint.app.MintApp@4a7b3508' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(10817): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10817): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10817): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10817): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10817): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10817): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10817): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10817): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10817): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10817): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10817): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10817): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10817): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10817): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10817): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10817): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10817): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10817): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10817): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(10817): GC_CONCURRENT freed 282K, 9% free 4523K/4920K, paused 1ms+1ms, total 6ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/Authorization(10817): getAuthorizationState
I/com.newrelic.agent.android(10817): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10817): Application state monitor has started
I/com.newrelic.agent.android(10817): Analytics Controller started.
I/com.newrelic.agent.android(10817): Measurement Engine initialized.
I/com.newrelic.agent.android(10817): New Relic Agent v5.4.0
D/dalvikvm(10817): GC_CONCURRENT freed 1617K, 34% free 3379K/5068K, paused 2ms+2ms, total 6ms
D/dalvikvm(10817): GC_FOR_ALLOC freed 72K, 33% free 3433K/5068K, paused 2ms, total 6ms
I/dalvikvm-heap(10817): Grow heap (frag case) to 3.487MB for 79888-byte allocation
D/dalvikvm(10817): GC_FOR_ALLOC freed <1K, 32% free 3510K/5148K, paused 10ms, total 11ms
I/com.newrelic.agent.android(10817): Harvester: connected
I/com.newrelic.agent.android(10817): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10817): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10817): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10817): Harvester: Sending 0 analytics events.
D/dalvikvm(10817): GC_FOR_ALLOC freed 153K, 32% free 3543K/5148K, paused 4ms, total 4ms
I/dalvikvm-heap(10817): Grow heap (frag case) to 3.595MB for 79888-byte allocation
D/dalvikvm(10817): GC_FOR_ALLOC freed 1K, 31% free 3620K/5228K, paused 4ms, total 4ms
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10817): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10817): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10817): GC_CONCURRENT freed 178K, 25% free 3952K/5228K, paused 1ms+1ms, total 6ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:21
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10817): GC_CONCURRENT freed 492K, 25% free 3971K/5228K, paused 2ms+1ms, total 9ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10817): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/dalvikvm(10817): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10817): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10817): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10817): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(10817): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:1
W/dalvikvm(10817): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10817): VFY: unable to resolve instance field 2423
D/dalvikvm(10817): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10817): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10817): VFY: unable to resolve instance field 2423
D/dalvikvm(10817): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10817): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out(10817): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
W/dalvikvm(10817): VFY: unable to resolve instance field 2423
D/dalvikvm(10817): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10817): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10817): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782
I/System.out(10817): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10817): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10817): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10817): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
W/dalvikvm(10817): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
I/System.out(10817): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/dalvikvm(10817): VFY: unable to resolve instance field 2423
D/dalvikvm(10817): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10817): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10817): VFY: unable to resolve instance field 2423
D/dalvikvm(10817): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(10817): Shutting down VM
W/dalvikvm(10817): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm(10817): GC_CONCURRENT freed 307K, 23% free 4048K/5228K, paused 2ms+0ms, total 5ms
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10817): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10817): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10817): GC_CONCURRENT freed 277K, 19% free 4262K/5228K, paused 2ms+1ms, total 5ms
D/dalvikvm(10817): GC_FOR_ALLOC freed 92K, 18% free 4329K/5228K, paused 5ms, total 5ms
I/dalvikvm-heap(10817): Grow heap (frag case) to 4.341MB for 58146-byte allocation
D/dalvikvm(10817): GC_FOR_ALLOC freed 2K, 18% free 4383K/5288K, paused 4ms, total 4ms
D/dalvikvm(10817): GC_FOR_ALLOC freed 100K, 18% free 4352K/5288K, paused 6ms, total 6ms
I/dalvikvm-heap(10817): Grow heap (frag case) to 4.392MB for 87216-byte allocation
D/dalvikvm(10817): GC_FOR_ALLOC freed <1K, 18% free 4437K/5376K, paused 4ms, total 4ms
D/dalvikvm(10817): GC_FOR_ALLOC freed 69K, 19% free 4383K/5376K, paused 4ms, total 4ms
I/dalvikvm-heap(10817): Grow heap (frag case) to 4.418MB for 83048-byte allocation
D/dalvikvm(10817): GC_FOR_ALLOC freed 218K, 23% free 4245K/5460K, paused 4ms, total 4ms
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10817): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:123
I/System.out(10817): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10817): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:126
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10817): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10817): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=686d86b0-9e04-412e-85f5-0726cb213782;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10817): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10817): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10817): GC_CONCURRENT freed 350K, 22% free 4279K/5460K, paused 2ms+0ms, total 5ms
D/dalvikvm(10817): GC_CONCURRENT freed 496K, 22% free 4295K/5460K, paused 2ms+1ms, total 39ms
I/iu.UploadsManager(  746): End new media; added: 0, uploading: 0, time: 19 ms
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:293
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:316
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10817): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:251
D/dalvikvm(10817): GC_CONCURRENT freed 224K, 19% free 4463K/5460K, paused 3ms+1ms, total 6ms
D/dalvikvm(10817): GC_FOR_ALLOC freed 94K, 18% free 4480K/5460K, paused 3ms, total 3ms
I/dalvikvm-heap(10817): Grow heap (frag case) to 4.517MB for 87216-byte allocation
D/dalvikvm(10817): GC_FOR_ALLOC freed <1K, 18% free 4565K/5548K, paused 4ms, total 4ms
D/dalvikvm(10817): GC_FOR_ALLOC freed 66K, 19% free 4511K/5548K, paused 2ms, total 2ms
I/System.out(10817): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:91
I/System.out(10817): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:91
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:272
I/com.newrelic.agent.android(10817): Crash be5259c8-db55-a7b3-5a8d-f022c23915f2 successfully submitted.
I/System.out(10817): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10817): GC_CONCURRENT freed 656K, 23% free 4284K/5548K, paused 2ms+0ms, total 5ms
D/dalvikvm(10817): GC_CONCURRENT freed 385K, 23% free 4283K/5548K, paused 1ms+0ms, total 4ms
D/dalvikvm(10817): GC_CONCURRENT freed 376K, 23% free 4290K/5548K, paused 2ms+0ms, total 7ms
I/Process (  470): Sending signal. PID: 10817 SIG: 9
E/AndroidRuntime(10817): FATAL EXCEPTION: main
E/AndroidRuntime(10817): Process: com.mint, PID: 10817
E/AndroidRuntime(10817): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10817): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10817): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10817): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10817): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10817): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10817): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10817): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10817): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10817): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10817): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10817): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10817): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10817): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10817): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10817): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10817): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10817): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10817): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10817): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10817) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10868): ignoring registerObject request in thread=1
I/dalvikvm(10868): ignoring registerObject request in thread=1
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10868 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(10868): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10868): GC_CONCURRENT freed 177K, 8% free 3054K/3296K, paused 1ms+0ms, total 4ms
I/CrashlyticsCore(10868): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10868): GC_CONCURRENT freed 260K, 9% free 3304K/3628K, paused 2ms+2ms, total 10ms
D/dalvikvm(10868): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10868): GC_CONCURRENT freed 238K, 8% free 3542K/3848K, paused 1ms+2ms, total 9ms
D/dalvikvm(10868): GC_CONCURRENT freed 192K, 7% free 3834K/4100K, paused 2ms+0ms, total 4ms
I/dalvikvm(10868): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10868): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10868): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10868): GC_CONCURRENT freed 132K, 5% free 4087K/4296K, paused 2ms+0ms, total 6ms
I/dalvikvm(10868): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10868): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10868): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10868): GC_CONCURRENT freed 149K, 5% free 4437K/4660K, paused 1ms+7ms, total 10ms
D/dalvikvm(10868): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10868): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10868): VFY: unable to resolve instance field 38765
D/dalvikvm(10868): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10868): <init> androidContext: 'com.mint.app.MintApp@4a7b3c34' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(10868): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10868): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
D/dalvikvm(10868): GC_CONCURRENT freed 363K, 10% free 4479K/4936K, paused 1ms+0ms, total 4ms
I/dalvikvm(10868): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10868): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10868): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10868): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10868): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10868): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10868): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10868): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10868): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10868): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10868): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10868): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10868): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10868): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10868): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10868): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10868): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization(10868): getAuthorizationState
I/com.newrelic.agent.android(10868): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10868): Application state monitor has started
I/com.newrelic.agent.android(10868): Analytics Controller started.
I/com.newrelic.agent.android(10868): Measurement Engine initialized.
D/dalvikvm(10868): GC_CONCURRENT freed 1551K, 33% free 3384K/5012K, paused 1ms+2ms, total 6ms
I/com.newrelic.agent.android(10868): New Relic Agent v5.4.0
D/dalvikvm(10868): GC_FOR_ALLOC freed 171K, 33% free 3394K/5012K, paused 2ms, total 2ms
I/dalvikvm-heap(10868): Grow heap (frag case) to 3.412MB for 39950-byte allocation
D/dalvikvm(10868): GC_FOR_ALLOC freed <1K, 33% free 3433K/5052K, paused 4ms, total 4ms
D/dalvikvm(10868): GC_FOR_ALLOC freed 1K, 33% free 3434K/5052K, paused 8ms, total 8ms
I/dalvikvm-heap(10868): Grow heap (frag case) to 3.489MB for 79888-byte allocation
D/dalvikvm(10868): GC_FOR_ALLOC freed 0K, 32% free 3512K/5132K, paused 4ms, total 4ms
I/com.newrelic.agent.android(10868): Harvester: connected
I/com.newrelic.agent.android(10868): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10868): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10868): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10868): Harvester: Sending 0 analytics events.
D/dalvikvm(10868): GC_FOR_ALLOC freed 166K, 32% free 3521K/5132K, paused 3ms, total 4ms
D/dalvikvm(10868): GC_FOR_ALLOC freed 28K, 31% free 3582K/5132K, paused 4ms, total 4ms
I/dalvikvm-heap(10868): Grow heap (frag case) to 3.633MB for 79888-byte allocation
D/dalvikvm(10868): GC_FOR_ALLOC freed 16K, 31% free 3644K/5212K, paused 4ms, total 4ms
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/dalvikvm(10868): GC_CONCURRENT freed 123K, 23% free 4032K/5212K, paused 2ms+5ms, total 10ms
I/System.out(10868): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
D/dalvikvm(10868): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:1
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:1
I/System.out(10868): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/dalvikvm(10868): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10868): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10868): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10868): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
W/dalvikvm(10868): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10868): VFY: unable to resolve instance field 2423
D/dalvikvm(10868): VFY: replacing opcode 0x54 at 0x0000
D/dalvikvm(10868): GC_CONCURRENT freed 436K, 24% free 3979K/5212K, paused 2ms+0ms, total 7ms
I/System.out(10868): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm(10868): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10868): VFY: unable to resolve instance field 2423
D/dalvikvm(10868): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10868): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10868): VFY: unable to resolve instance field 2423
D/dalvikvm(10868): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10868): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10868): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10868): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d
I/System.out(10868): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10868): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10868): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10868): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10868): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
W/dalvikvm(10868): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10868): VFY: unable to resolve instance field 2423
D/dalvikvm(10868): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10868): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10868): VFY: unable to resolve instance field 2423
D/dalvikvm(10868): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(10868): Shutting down VM
W/dalvikvm(10868): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm(10868): GC_CONCURRENT freed 338K, 23% free 4027K/5212K, paused 1ms+1ms, total 6ms
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
D/dalvikvm(10868): GC_FOR_ALLOC freed 239K, 18% free 4299K/5212K, paused 4ms, total 4ms
D/dalvikvm(10868): GC_CONCURRENT freed 6K, 18% free 4293K/5212K, paused 2ms+1ms, total 6ms
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:8
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10868): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10868): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10868): GC_FOR_ALLOC freed 79K, 18% free 4323K/5212K, paused 5ms, total 5ms
I/dalvikvm-heap(10868): Grow heap (frag case) to 4.335MB for 58146-byte allocation
D/dalvikvm(10868): GC_FOR_ALLOC freed <1K, 17% free 4380K/5272K, paused 4ms, total 4ms
D/dalvikvm(10868): GC_FOR_ALLOC freed 44K, 18% free 4344K/5272K, paused 6ms, total 6ms
I/dalvikvm-heap(10868): Grow heap (frag case) to 4.383MB for 87216-byte allocation
D/dalvikvm(10868): GC_FOR_ALLOC freed 56K, 19% free 4372K/5360K, paused 3ms, total 3ms
D/dalvikvm(10868): GC_FOR_ALLOC freed 79K, 19% free 4367K/5360K, paused 5ms, total 5ms
I/dalvikvm-heap(10868): Grow heap (frag case) to 4.400MB for 79704-byte allocation
D/dalvikvm(10868): GC_FOR_ALLOC freed <1K, 19% free 4445K/5440K, paused 4ms, total 4ms
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10868): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:162
I/System.out(10868): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10868): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:169
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:1
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10868): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10868): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10868): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10868): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10868): GC_CONCURRENT freed 583K, 22% free 4269K/5440K, paused 2ms+0ms, total 8ms
D/dalvikvm(10868): GC_CONCURRENT freed 372K, 22% free 4281K/5440K, paused 1ms+0ms, total 5ms
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:236
D/dalvikvm(10868): GC_CONCURRENT freed 249K, 19% free 4420K/5440K, paused 3ms+0ms, total 7ms
D/dalvikvm(10868): GC_FOR_ALLOC freed 187K, 18% free 4497K/5440K, paused 3ms, total 3ms
I/dalvikvm-heap(10868): Grow heap (frag case) to 4.526MB for 79704-byte allocation
D/dalvikvm(10868): GC_FOR_ALLOC freed <1K, 18% free 4574K/5520K, paused 3ms, total 3ms
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:302
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:324
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10868): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10868): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm(10668): GC_FOR_ALLOC freed 849K, 20% free 7819K/9772K, paused 3ms, total 3ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 8.300MB for 635808-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed <1K, 19% free 8440K/10396K, paused 4ms, total 4ms
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
I/System.out(10868): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:86
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:86
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:272
I/com.newrelic.agent.android(10868): Crash ce4ab554-14d1-f003-e548-4537834a25ef successfully submitted.
I/System.out(10868): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10868): GC_CONCURRENT freed 748K, 23% free 4277K/5520K, paused 3ms+0ms, total 6ms
D/dalvikvm(10868): GC_CONCURRENT freed 385K, 23% free 4275K/5520K, paused 1ms+1ms, total 4ms
D/dalvikvm(10868): GC_CONCURRENT freed 376K, 23% free 4283K/5520K, paused 2ms+0ms, total 5ms
I/System.out(10868): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 10868 SIG: 9
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
E/AndroidRuntime(10868): FATAL EXCEPTION: main
E/AndroidRuntime(10868): Process: com.mint, PID: 10868
E/AndroidRuntime(10868): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10868): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10868): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10868): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10868): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10868): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10868): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10868): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10868): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10868): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10868): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10868): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10868): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10868): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10868): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10868): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10868): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10868): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10868): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10868): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 10868) has died.
W/ActivityManager(  470): Force removing ActivityRecord{4a8d9f00 u0 com.mint/.core.overview.LoginActivity$XLarge t61}: app died, no saved state
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
D/FirebaseApp(10668): Notifying background state change listeners.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation(10668): eglSurfaceAttrib not implemented 3093 12436
D/yeshen  (10668): launcher onpause
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=10918 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10918): ignoring registerObject request in thread=1
I/dalvikvm(10918): ignoring registerObject request in thread=1
D/dalvikvm(10918): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10918): GC_CONCURRENT freed 208K, 9% free 3022K/3296K, paused 1ms+0ms, total 4ms
I/CrashlyticsCore(10918): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10918): GC_CONCURRENT freed 173K, 7% free 3234K/3472K, paused 1ms+0ms, total 5ms
D/dalvikvm(10918): GC_CONCURRENT freed 193K, 7% free 3550K/3808K, paused 2ms+2ms, total 12ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10918): GC_CONCURRENT freed 149K, 6% free 3787K/4016K, paused 2ms+0ms, total 5ms
I/dalvikvm(10918): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10918): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10918): VFY: replacing opcode 0x6e at 0x00f0
I/dalvikvm(10918): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10918): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10918): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10918): GC_CONCURRENT freed 270K, 8% free 4021K/4364K, paused 1ms+0ms, total 7ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10918): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10918): VFY: unable to resolve instance field 38765
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10918): GC_CONCURRENT freed 201K, 7% free 4319K/4596K, paused 2ms+1ms, total 11ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/Authorization(10918): <init> androidContext: 'com.mint.app.MintApp@4a7b440c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(10918): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10918): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10918): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10918): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10918): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10918): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10918): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10918): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10918): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10918): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10918): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:1
I/System.out(10918): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10918): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10918): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10918): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10918): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10918): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10918): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(10918): GC_CONCURRENT freed 301K, 8% free 4509K/4892K, paused 1ms+1ms, total 9ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/Authorization(10918): getAuthorizationState
I/com.newrelic.agent.android(10918): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10918): Application state monitor has started
I/com.newrelic.agent.android(10918): Analytics Controller started.
I/com.newrelic.agent.android(10918): Measurement Engine initialized.
I/com.newrelic.agent.android(10918): New Relic Agent v5.4.0
D/dalvikvm(10918): GC_CONCURRENT freed 309K, 8% free 4702K/5084K, paused 1ms+7ms, total 18ms
I/com.newrelic.agent.android(10918): Harvester: connected
I/com.newrelic.agent.android(10918): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10918): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10918): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10918): Harvester: Sending 0 analytics events.
D/dalvikvm(10918): GC_CONCURRENT freed 1561K, 32% free 3634K/5268K, paused 3ms+1ms, total 8ms
D/dalvikvm(10918): GC_CONCURRENT freed 183K, 25% free 3962K/5268K, paused 2ms+1ms, total 7ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/dalvikvm(10918): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10918): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10918): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10918): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(10918): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
D/dalvikvm(10918): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm(10918): VFY: unable to resolve instance field 38470
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0005
D/Lifecycle(10918): onActivityCreated: core.overview.RouterActivity
D/dalvikvm(10918): GC_CONCURRENT freed 488K, 25% free 3986K/5268K, paused 2ms+1ms, total 10ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out(10918): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:5
I/System.out(10918): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10918): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:45
I/System.out(10918): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
W/dalvikvm(10918): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10918): VFY: unable to resolve instance field 2423
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10918): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10918): VFY: unable to resolve instance field 2423
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10918): WAIT_FOR_CONCURRENT_GC blocked 17ms
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10918): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
D/dalvikvm(10918): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm(10918): VFY: unable to resolve instance field 38747
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0007
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10918): GC_CONCURRENT freed 333K, 24% free 4038K/5268K, paused 0ms+0ms, total 5ms
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/Authorization(10918): getAuthorizationState
W/dalvikvm(10918): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10918): VFY: unable to resolve instance field 2423
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(10918): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10918): VFY: unable to resolve instance field 2423
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10918): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10918): VFY: unable to resolve instance field 2423
D/dalvikvm(10918): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10918): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10918): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 10918
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out(10918): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10918): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:3
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10918): GC_CONCURRENT freed 295K, 22% free 4154K/5268K, paused 2ms+0ms, total 8ms
I/System.out(10918): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:6
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10918): GC_CONCURRENT freed 363K, 21% free 4174K/5268K, paused 2ms+1ms, total 6ms
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:114
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:120
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
D/dalvikvm(10918): GC_CONCURRENT freed 368K, 21% free 4190K/5268K, paused 3ms+0ms, total 7ms
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:8
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): URLConn;%;1;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10918): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:1
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:138
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:139
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10918): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10918): URLConn;%;3;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a54c0b55-71dd-43f6-ab1d-3546a1669e9d;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10918): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10918): GC_CONCURRENT freed 391K, 20% free 4222K/5268K, paused 2ms+3ms, total 11ms
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:261
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:262
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/Choreographer(10668): Skipped 43 frames!  The application may be doing too much work on its main thread.
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:100
V/WebViewChromium(10918): Binding Chromium to the background looper Looper (main, tid 1) {4a7b0514}
I/chromium(10918): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(10918): Initializing chromium process, renderers=0
W/chromium(10918): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:124
D/dalvikvm(10918): GC_CONCURRENT freed 386K, 20% free 4226K/5268K, paused 0ms+0ms, total 10ms
D/libEGL  (10918): loaded /system/lib/egl/libEGL_adreno.so
D/        (10918): HostConnection::get() New Host Connection established 0xb8d319f0, tid 10918
D/libEGL  (10918): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (10918): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm(10918): GC_FOR_ALLOC freed 21K, 20% free 4234K/5268K, paused 3ms, total 3ms
I/dalvikvm-heap(10918): Grow heap (frag case) to 4.248MB for 56388-byte allocation
D/dalvikvm(10918): GC_FOR_ALLOC freed <1K, 20% free 4289K/5324K, paused 6ms, total 6ms
D/dalvikvm(10918): GC_FOR_ALLOC freed <1K, 20% free 4290K/5324K, paused 6ms, total 7ms
I/dalvikvm-heap(10918): Grow heap (frag case) to 4.854MB for 635808-byte allocation
D/dalvikvm(10918): GC_FOR_ALLOC freed 0K, 18% free 4911K/5948K, paused 5ms, total 5ms
D/dalvikvm(10918): GC_CONCURRENT freed <1K, 18% free 4913K/5948K, paused 2ms+0ms, total 8ms
D/yeshen  (10668): launcher onstop
E/ActivityThread(10918): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/FirebaseApp(10668): Notifying background state change listeners.
D/Tinker.DefaultAppLike(10668): onTrimMemory level:20
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
E/ActivityThread(10918): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
W/c.t.tdm.TrustDefenderMo(10918): Scan  already in progress or cancel requested, aborting
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=05a5419ee3384cc680a2d4a52669c293&osVersion=4.4.2
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/AndroidRuntime(10918): Shutting down VM
W/dalvikvm(10918): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm(10918): GC_CONCURRENT freed 301K, 13% free 5198K/5948K, paused 1ms+0ms, total 13ms
D/dalvikvm(10918): GC_FOR_ALLOC freed 135K, 13% free 5270K/6008K, paused 4ms, total 4ms
D/dalvikvm(10918): GC_FOR_ALLOC freed 63K, 14% free 5300K/6096K, paused 4ms, total 4ms
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm(10918): GC_CONCURRENT freed 774K, 16% free 5228K/6172K, paused 2ms+1ms, total 6ms
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:220
D/dalvikvm(10918): GC_FOR_ALLOC freed 192K, 13% free 5414K/6172K, paused 5ms, total 6ms
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10918): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10918): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:1
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:230
I/System.out(10918): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:231
D/dalvikvm(10918): GC_FOR_ALLOC freed 606K, 16% free 5372K/6336K, paused 11ms, total 11ms
I/System.out(10918): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10918): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:266
I/com.newrelic.agent.android(10918): Crash 66c070c1-563b-cfc6-3708-ed145dd57580 successfully submitted.
I/System.out(10918): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10918): GC_CONCURRENT freed 789K, 17% free 5301K/6336K, paused 2ms+0ms, total 6ms
I/Process (  470): Sending signal. PID: 10918 SIG: 9
E/AndroidRuntime(10918): FATAL EXCEPTION: main
E/AndroidRuntime(10918): Process: com.mint, PID: 10918
E/AndroidRuntime(10918): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10918): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10918): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10918): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10918): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10918): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10918): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10918): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10918): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10918): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10918): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10918): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10918): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10918): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10918): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10918): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10918): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10918): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10918): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10918): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 10918) has died.
D/dalvikvm(  166): GC_EXPLICIT freed 39K, 4% free 2845K/2952K, paused 1ms+2ms, total 6ms
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=10999 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2845K/2952K, paused 1ms+0ms, total 11ms
D/dalvikvm(  166): GC_EXPLICIT freed <1K, 4% free 2845K/2952K, paused 1ms+1ms, total 4ms
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(10999): ignoring registerObject request in thread=1
I/dalvikvm(10999): ignoring registerObject request in thread=1
D/dalvikvm(10999): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10999): GC_CONCURRENT freed 194K, 8% free 3164K/3420K, paused 1ms+3ms, total 6ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(10999): GC_CONCURRENT freed 221K, 8% free 3330K/3616K, paused 1ms+0ms, total 3ms
I/CrashlyticsCore(10999): Initializing Crashlytics 2.3.5.79
D/dalvikvm(10999): GC_CONCURRENT freed 169K, 7% free 3545K/3780K, paused 1ms+0ms, total 4ms
D/dalvikvm(10999): GC_CONCURRENT freed 101K, 5% free 3829K/4008K, paused 2ms+0ms, total 4ms
I/dalvikvm(10999): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(10999): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(10999): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(10999): GC_CONCURRENT freed 264K, 8% free 4061K/4404K, paused 2ms+1ms, total 9ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 9ms
I/dalvikvm(10999): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(10999): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10999): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(10999): GC_CONCURRENT freed 192K, 7% free 4255K/4528K, paused 1ms+0ms, total 5ms
D/dalvikvm(10999): GC_CONCURRENT freed 283K, 8% free 4355K/4724K, paused 2ms+1ms, total 5ms
D/dalvikvm(  470): GC_EXPLICIT freed 1136K, 50% free 17513K/34424K, paused 1ms+2ms, total 33ms
D/dalvikvm(10999): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(10999): VFY: unable to resolve instance field 38765
D/dalvikvm(10999): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(10999): <init> androidContext: 'com.mint.app.MintApp@4a7b4a84' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(10999): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10999): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10999): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10999): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10999): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10999): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10999): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10999): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10999): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10999): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10999): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(10999): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(10999): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(10999): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(10999): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(10999): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(10999): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10999): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(10999): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(10999): GC_CONCURRENT freed 1474K, 32% free 3297K/4828K, paused 2ms+0ms, total 6ms
I/Authorization(10999): getAuthorizationState
I/com.newrelic.agent.android(10999): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(10999): Application state monitor has started
I/com.newrelic.agent.android(10999): Analytics Controller started.
I/com.newrelic.agent.android(10999): Measurement Engine initialized.
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10999): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/com.newrelic.agent.android(10999): New Relic Agent v5.4.0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
D/dalvikvm(10999): GC_CONCURRENT freed 297K, 30% free 3384K/4828K, paused 1ms+0ms, total 5ms
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(10999): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(10999): GC_FOR_ALLOC freed 68K, 30% free 3423K/4828K, paused 4ms, total 4ms
I/dalvikvm-heap(10999): Grow heap (frag case) to 3.477MB for 79888-byte allocation
D/dalvikvm(10999): GC_FOR_ALLOC freed <1K, 29% free 3501K/4908K, paused 5ms, total 5ms
D/dalvikvm(10999): GC_FOR_ALLOC freed 11K, 29% free 3512K/4908K, paused 8ms, total 8ms
I/dalvikvm-heap(10999): Grow heap (frag case) to 3.526MB for 39950-byte allocation
D/dalvikvm(10999): GC_FOR_ALLOC freed 39K, 30% free 3512K/4948K, paused 4ms, total 4ms
D/dalvikvm(10999): GC_FOR_ALLOC freed 4K, 29% free 3513K/4948K, paused 6ms, total 6ms
I/dalvikvm-heap(10999): Grow heap (frag case) to 3.566MB for 79888-byte allocation
D/dalvikvm(10999): GC_FOR_ALLOC freed 39K, 30% free 3552K/5028K, paused 6ms, total 6ms
I/com.newrelic.agent.android(10999): Harvester: connected
I/com.newrelic.agent.android(10999): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(10999): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(10999): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(10999): Harvester: Sending 0 analytics events.
D/dalvikvm(10999): GC_CONCURRENT freed 175K, 23% free 3888K/5028K, paused 2ms+0ms, total 9ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:96
I/dalvikvm(10999): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(10999): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(10999): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(10999): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm(10999): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10999): VFY: unable to resolve instance field 2423
D/dalvikvm(10999): VFY: replacing opcode 0x54 at 0x0000
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
D/dalvikvm(10999): GC_CONCURRENT freed 398K, 21% free 3990K/5028K, paused 2ms+1ms, total 16ms
W/dalvikvm(10999): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10999): VFY: unable to resolve instance field 2423
D/dalvikvm(10999): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(10999): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10999): VFY: unable to resolve instance field 2423
D/dalvikvm(10999): VFY: replacing opcode 0x54 at 0x0002
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
W/dalvikvm(10999): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(10999): VFY: unable to resolve instance field 2423
D/dalvikvm(10999): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(10999): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(10999): VFY: unable to resolve instance field 2423
D/dalvikvm(10999): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(10999): Shutting down VM
W/dalvikvm(10999): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:1
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
D/dalvikvm(10999): GC_CONCURRENT freed 370K, 20% free 4033K/5028K, paused 1ms+1ms, total 8ms
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:1
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:1
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
D/dalvikvm(10999): GC_CONCURRENT freed 182K, 15% free 4284K/5028K, paused 1ms+1ms, total 8ms
D/dalvikvm(10999): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm-heap(10999): Grow heap (frag case) to 4.297MB for 58146-byte allocation
D/dalvikvm(10999): GC_FOR_ALLOC freed 38K, 16% free 4302K/5088K, paused 4ms, total 4ms
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10999): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10999): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10999): GC_FOR_ALLOC freed 26K, 16% free 4304K/5088K, paused 5ms, total 5ms
I/dalvikvm-heap(10999): Grow heap (frag case) to 4.345MB for 87216-byte allocation
D/dalvikvm(10999): GC_FOR_ALLOC freed 56K, 17% free 4332K/5176K, paused 3ms, total 3ms
D/dalvikvm(10999): GC_FOR_ALLOC freed 5K, 17% free 4334K/5176K, paused 4ms, total 4ms
I/dalvikvm-heap(10999): Grow heap (frag case) to 4.360MB for 72222-byte allocation
D/dalvikvm(10999): GC_FOR_ALLOC freed 202K, 20% free 4202K/5248K, paused 4ms, total 4ms
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10999): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(10999): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(10999): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(10999): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10999): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=64282cc4-48d7-4c76-a106-7e6f00e6b8e8
I/System.out(10999): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10999): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10999): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10999): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=64282cc4-48d7-4c76-a106-7e6f00e6b8e8
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10999): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(10999): GC_CONCURRENT freed 345K, 20% free 4240K/5248K, paused 2ms+1ms, total 5ms
D/dalvikvm(10999): GC_CONCURRENT freed 376K, 20% free 4248K/5248K, paused 2ms+0ms, total 6ms
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:160
I/System.out(10999): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10999): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=64282cc4-48d7-4c76-a106-7e6f00e6b8e8;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10999): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:162
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10999): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(10999): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=64282cc4-48d7-4c76-a106-7e6f00e6b8e8;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10999): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10999): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10999): GC_CONCURRENT freed 365K, 19% free 4266K/5248K, paused 2ms+0ms, total 6ms
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:229
D/dalvikvm(10999): GC_CONCURRENT freed 221K, 15% free 4481K/5248K, paused 2ms+0ms, total 5ms
D/dalvikvm(10999): GC_FOR_ALLOC freed 107K, 15% free 4474K/5248K, paused 5ms, total 5ms
I/dalvikvm-heap(10999): Grow heap (frag case) to 4.497MB for 72222-byte allocation
D/dalvikvm(10999): GC_FOR_ALLOC freed <1K, 15% free 4544K/5320K, paused 6ms, total 6ms
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:308
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:326
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10999): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10999): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:76
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:278
I/com.newrelic.agent.android(10999): Crash 2f67aea4-db04-d3bb-4b20-fd45607c0cdd successfully submitted.
I/System.out(10999): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10999): GC_CONCURRENT freed 714K, 20% free 4271K/5320K, paused 1ms+1ms, total 4ms
D/dalvikvm(10999): GC_CONCURRENT freed 385K, 20% free 4270K/5320K, paused 1ms+1ms, total 4ms
D/dalvikvm(10999): GC_CONCURRENT freed 378K, 20% free 4275K/5320K, paused 3ms+0ms, total 7ms
I/System.out(10999): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 10999 SIG: 9
E/AndroidRuntime(10999): FATAL EXCEPTION: main
E/AndroidRuntime(10999): Process: com.mint, PID: 10999
E/AndroidRuntime(10999): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(10999): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(10999): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(10999): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(10999): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(10999): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(10999): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(10999): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(10999): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(10999): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(10999): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(10999): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(10999): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10999): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10999): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(10999): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10999): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10999): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(10999): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(10999): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 10999) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(11049): ignoring registerObject request in thread=1
I/dalvikvm(11049): ignoring registerObject request in thread=1
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=11049 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(11049): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(11049): GC_CONCURRENT freed 167K, 7% free 3191K/3420K, paused 1ms+1ms, total 5ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/CrashlyticsCore(11049): Initializing Crashlytics 2.3.5.79
D/dalvikvm(11049): GC_CONCURRENT freed 285K, 10% free 3415K/3764K, paused 1ms+0ms, total 6ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11049): GC_CONCURRENT freed 176K, 7% free 3631K/3884K, paused 3ms+1ms, total 6ms
D/dalvikvm(11049): GC_CONCURRENT freed 243K, 8% free 3776K/4096K, paused 2ms+0ms, total 4ms
D/dalvikvm(11049): GC_CONCURRENT freed 216K, 7% free 3946K/4232K, paused 1ms+1ms, total 4ms
I/dalvikvm(11049): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
D/dalvikvm(11049): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(11049): VFY: unable to resolve instance field 38765
D/dalvikvm(11049): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(11049): <init> androidContext: 'com.mint.app.MintApp@4a7b028c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(11049): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(11049): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(11049): VFY: replacing opcode 0x6e at 0x00f0
W/dalvikvm(11049): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11049): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(11049): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(11049): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(11049): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(11049): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11049): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(11049): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(11049): VFY: replacing opcode 0x72 at 0x0006
I/System.out(11049): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(11049): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(11049): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(11049): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(11049): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(11049): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(11049): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(11049): GC_CONCURRENT freed 248K, 8% free 4196K/4520K, paused 2ms+1ms, total 7ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/System.out(11049): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(11049): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/dalvikvm(11049): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(11049): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(11049): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm(11049): GC_CONCURRENT freed 128K, 5% free 4460K/4672K, paused 1ms+0ms, total 4ms
I/Authorization(11049): getAuthorizationState
D/dalvikvm(11049): GC_CONCURRENT freed 325K, 9% free 4549K/4960K, paused 2ms+1ms, total 5ms
I/com.newrelic.agent.android(11049): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(11049): Application state monitor has started
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/com.newrelic.agent.android(11049): Analytics Controller started.
I/com.newrelic.agent.android(11049): Measurement Engine initialized.
I/System.out(11049): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(11049): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android(11049): New Relic Agent v5.4.0
D/dalvikvm(11049): GC_CONCURRENT freed 1491K, 31% free 3598K/5164K, paused 5ms+0ms, total 10ms
I/com.newrelic.agent.android(11049): Harvester: connected
I/com.newrelic.agent.android(11049): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(11049): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(11049): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(11049): Harvester: Sending 0 analytics events.
D/dalvikvm(11049): GC_CONCURRENT freed 201K, 27% free 3780K/5164K, paused 3ms+1ms, total 8ms
I/dalvikvm(11049): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(11049): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(11049): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(11049): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
D/dalvikvm(11049): GC_CONCURRENT freed 249K, 25% free 3914K/5164K, paused 2ms+0ms, total 5ms
W/dalvikvm(11049): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11049): VFY: unable to resolve instance field 2423
D/dalvikvm(11049): VFY: replacing opcode 0x54 at 0x0000
I/System.out(11049): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm(11049): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11049): VFY: unable to resolve instance field 2423
D/dalvikvm(11049): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(11049): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11049): VFY: unable to resolve instance field 2423
D/dalvikvm(11049): VFY: replacing opcode 0x54 at 0x0002
D/dalvikvm(10668): GC_CONCURRENT freed 1332K, 15% free 8871K/10384K, paused 0ms+1ms, total 5ms
I/System.out(11049): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(11049): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11049): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
W/dalvikvm(11049): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11049): VFY: unable to resolve instance field 2423
D/dalvikvm(11049): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(11049): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(11049): VFY: unable to resolve instance field 2423
D/dalvikvm(11049): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(11049): Shutting down VM
W/dalvikvm(11049): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
D/dalvikvm(11049): GC_CONCURRENT freed 173K, 21% free 4125K/5164K, paused 2ms+1ms, total 5ms
D/dalvikvm(11049): GC_FOR_ALLOC freed 94K, 19% free 4219K/5164K, paused 6ms, total 6ms
I/dalvikvm-heap(11049): Grow heap (frag case) to 4.235MB for 58146-byte allocation
D/dalvikvm(11049): GC_FOR_ALLOC freed 0K, 19% free 4276K/5224K, paused 4ms, total 4ms
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
D/dalvikvm(11049): GC_FOR_ALLOC freed 54K, 19% free 4244K/5224K, paused 12ms, total 12ms
I/dalvikvm-heap(11049): Grow heap (frag case) to 4.286MB for 87216-byte allocation
D/dalvikvm(11049): GC_FOR_ALLOC freed <1K, 19% free 4329K/5312K, paused 3ms, total 3ms
D/dalvikvm(11049): GC_FOR_ALLOC freed 74K, 20% free 4279K/5312K, paused 4ms, total 4ms
I/dalvikvm-heap(11049): Grow heap (frag case) to 4.311MB for 78024-byte allocation
D/dalvikvm(11049): GC_FOR_ALLOC freed <1K, 20% free 4355K/5392K, paused 4ms, total 4ms
I/System.out(11049): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:119
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11049): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11049): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11049): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11049): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:227
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11049): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11049): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(11049): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
D/dalvikvm(11049): GC_CONCURRENT freed 630K, 22% free 4237K/5392K, paused 2ms+1ms, total 12ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(11049): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 1727K, 17% free 9155K/10944K, paused 6ms, total 6ms
D/dalvikvm(10668): GC_CONCURRENT freed 128K, 17% free 9163K/10944K, paused 2ms+0ms, total 6ms
D/dalvikvm(11049): GC_CONCURRENT freed 370K, 22% free 4250K/5392K, paused 6ms+0ms, total 9ms
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:143
I/System.out(11049): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11049): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:145
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11049): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11049): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11049): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(11049): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10668): GC_CONCURRENT freed 2073K, 19% free 9126K/11264K, paused 9ms+0ms, total 14ms
D/dalvikvm(11049): GC_CONCURRENT freed 362K, 21% free 4271K/5392K, paused 1ms+0ms, total 10ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 1240K, 19% free 9223K/11264K, paused 4ms, total 4ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 9.978MB for 956556-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed 1K, 17% free 10155K/12200K, paused 3ms, total 3ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 10.888MB for 956556-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed <1K, 16% free 11089K/13136K, paused 4ms, total 4ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 151K, 16% free 11046K/13136K, paused 3ms, total 3ms
I/dalvikvm-heap(10668): Grow heap (frag case) to 11.758MB for 956556-byte allocation
D/dalvikvm(10668): GC_FOR_ALLOC freed <1K, 15% free 11980K/14072K, paused 4ms, total 4ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 170K, 14% free 12961K/15008K, paused 3ms, total 3ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 102K, 13% free 13894K/15944K, paused 3ms, total 4ms
D/dalvikvm(10668): GC_FOR_ALLOC freed 101K, 13% free 14828K/16880K, paused 4ms, total 4ms
D/dalvikvm(11049): GC_CONCURRENT freed 380K, 21% free 4275K/5392K, paused 2ms+0ms, total 5ms
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:338
D/dalvikvm(11049): GC_CONCURRENT freed 207K, 18% free 4452K/5392K, paused 4ms+0ms, total 7ms
D/dalvikvm(11049): GC_FOR_ALLOC freed 117K, 17% free 4503K/5392K, paused 3ms, total 3ms
I/dalvikvm-heap(11049): Grow heap (frag case) to 4.531MB for 78024-byte allocation
D/dalvikvm(11049): GC_FOR_ALLOC freed 0K, 17% free 4579K/5472K, paused 4ms, total 5ms
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:450
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:451
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11049): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11049): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:73
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:73
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:277
I/com.newrelic.agent.android(11049): Crash 0512acf0-0a55-4ecc-4435-08eeb5b6006c successfully submitted.
I/System.out(11049): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(11049): GC_CONCURRENT freed 753K, 22% free 4278K/5472K, paused 2ms+0ms, total 7ms
D/dalvikvm(11049): GC_CONCURRENT freed 386K, 22% free 4276K/5472K, paused 1ms+0ms, total 4ms
D/dalvikvm(11049): GC_CONCURRENT freed 372K, 22% free 4288K/5472K, paused 3ms+0ms, total 5ms
I/System.out(11049): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 11049 SIG: 9
E/AndroidRuntime(11049): FATAL EXCEPTION: main
E/AndroidRuntime(11049): Process: com.mint, PID: 11049
E/AndroidRuntime(11049): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(11049): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(11049): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(11049): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(11049): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(11049): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(11049): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(11049): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(11049): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(11049): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(11049): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(11049): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(11049): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(11049): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(11049): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(11049): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(11049): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(11049): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(11049): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(11049): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 11049) has died.
W/ActivityManager(  470): Force removing ActivityRecord{4abf084c u0 com.mint/.core.overview.LoginActivity$XLarge t62}: app died, no saved state
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/FirebaseApp(10668): Notifying background state change listeners.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.mint/.core.overview.RouterActivity} from pid 8296
W/EGL_emulation(10668): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm(10668): GC_FOR_ALLOC freed 732K, 10% free 17075K/18808K, paused 7ms, total 7ms
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
D/yeshen  (10668): launcher onpause
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.RouterActivity: pid=11102 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
I/dalvikvm(11102): ignoring registerObject request in thread=1
I/dalvikvm(11102): ignoring registerObject request in thread=1
D/dalvikvm(11102): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(11102): GC_CONCURRENT freed 143K, 7% free 3087K/3300K, paused 1ms+2ms, total 5ms
I/CrashlyticsCore(11102): Initializing Crashlytics 2.3.5.79
D/dalvikvm(11102): GC_CONCURRENT freed 235K, 9% free 3240K/3540K, paused 1ms+0ms, total 3ms
D/dalvikvm(11102): GC_CONCURRENT freed 185K, 7% free 3565K/3816K, paused 1ms+0ms, total 7ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm(11102): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(11102): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(11102): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(11102): GC_CONCURRENT freed 239K, 8% free 3832K/4140K, paused 2ms+1ms, total 10ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 9ms
D/dalvikvm(11102): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(11102): VFY: unable to resolve instance field 38765
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(11102): GC_CONCURRENT freed 249K, 8% free 4061K/4384K, paused 1ms+0ms, total 8ms
I/Authorization(11102): <init> androidContext: 'com.mint.app.MintApp@4a7b0a68' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
I/dalvikvm(11102): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(11102): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(11102): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(11102): GC_CONCURRENT freed 160K, 6% free 4400K/4636K, paused 2ms+0ms, total 10ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 6ms
W/dalvikvm(11102): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(11102): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11102): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(11102): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(11102): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(11102): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(11102): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11102): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(11102): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(11102): VFY: replacing opcode 0x72 at 0x0006
I/System.out(11102): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(11102): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(11102): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(11102): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(11102): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(11102): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(11102): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(11102): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 10ms
I/Authorization(11102): getAuthorizationState
D/dalvikvm(11102): GC_CONCURRENT freed 347K, 9% free 4555K/4984K, paused 1ms+1ms, total 8ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/com.newrelic.agent.android(11102): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(11102): Application state monitor has started
I/com.newrelic.agent.android(11102): Analytics Controller started.
I/com.newrelic.agent.android(11102): Measurement Engine initialized.
I/com.newrelic.agent.android(11102): New Relic Agent v5.4.0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/dalvikvm(11102): GC_CONCURRENT freed 366K, 9% free 4662K/5100K, paused 2ms+3ms, total 8ms
I/System.out(11102): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:1
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(11102): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm(11102): GC_FOR_ALLOC freed 1376K, 33% free 3557K/5260K, paused 6ms, total 7ms
I/dalvikvm-heap(11102): Grow heap (frag case) to 3.609MB for 79888-byte allocation
D/dalvikvm(11102): GC_FOR_ALLOC freed 1K, 32% free 3634K/5340K, paused 4ms, total 4ms
I/com.newrelic.agent.android(11102): Harvester: connected
I/com.newrelic.agent.android(11102): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(11102): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(11102): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(11102): Harvester: Sending 0 analytics events.
D/dalvikvm(11102): GC_CONCURRENT freed 153K, 28% free 3865K/5340K, paused 1ms+1ms, total 5ms
I/dalvikvm(11102): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(11102): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(11102): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(11102): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(11102): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
D/dalvikvm(11102): DexOpt: couldn't find field Lcom/mint/core/overview/RouterActivity;._nr_trace
W/dalvikvm(11102): VFY: unable to resolve instance field 38470
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0005
I/System.out(11102): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
D/Lifecycle(11102): onActivityCreated: core.overview.RouterActivity
I/System.out(11102): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11102): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c
D/dalvikvm(11102): GC_CONCURRENT freed 348K, 26% free 3986K/5340K, paused 1ms+2ms, total 12ms
W/dalvikvm(11102): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11102): VFY: unable to resolve instance field 2423
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(11102): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(11102): VFY: unable to resolve instance field 2423
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(11102): DexOpt: couldn't find field Lcom/mint/core/settings/MintPrefsActivity;._nr_trace
W/dalvikvm(11102): VFY: unable to resolve instance field 38747
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0007
I/System.out(11102): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(11102): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/Authorization(11102): getAuthorizationState
W/dalvikvm(11102): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11102): VFY: unable to resolve instance field 2423
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(11102): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11102): VFY: unable to resolve instance field 2423
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(11102): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11102): VFY: unable to resolve instance field 2423
D/dalvikvm(11102): VFY: replacing opcode 0x54 at 0x0002
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.mint/.core.overview.LoginActivity$XLarge} from pid 11102
D/dalvikvm(11102): GC_CONCURRENT freed 304K, 24% free 4066K/5340K, paused 1ms+0ms, total 5ms
I/System.out(11102): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:8
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setChunkedStreamingMode(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setChunkedStreamingMode(int)>($i0)	timediff:0
I/System.out(11102): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestMethod()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11102): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:1
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:48
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:111
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(11102): GC_CONCURRENT freed 310K, 21% free 4267K/5340K, paused 4ms+7ms, total 13ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(11102): GC_CONCURRENT freed 587K, 22% free 4192K/5340K, paused 1ms+1ms, total 11ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:113
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:117
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=7c6a2200-655e-4d01-890c-d3e440025b2c;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(11102): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
V/WebViewChromium(11102): Binding Chromium to the background looper Looper (main, tid 1) {4a7ab4cc}
I/chromium(11102): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(11102): Initializing chromium process, renderers=0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:162
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:189
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): URLConn;%;2;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11102): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.2/501820783190330?fields=supports_attribution%2Csupports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
W/chromium(11102): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
D/dalvikvm(11102): GC_CONCURRENT freed 434K, 21% free 4269K/5340K, paused 6ms+2ms, total 30ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 24ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 27ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 26ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 26ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 26ms
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11102): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:3
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
D/libEGL  (11102): loaded /system/lib/egl/libEGL_adreno.so
D/        (11102): HostConnection::get() New Host Connection established 0xb8e7d240, tid 11102
I/System.out(11102): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:27
D/libEGL  (11102): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (11102): loaded /system/lib/egl/libGLESv2_adreno.so
D/dalvikvm(11102): GC_CONCURRENT freed 451K, 21% free 4243K/5340K, paused 1ms+2ms, total 10ms
D/dalvikvm(11102): GC_FOR_ALLOC freed 7K, 21% free 4242K/5340K, paused 8ms, total 8ms
I/dalvikvm-heap(11102): Grow heap (frag case) to 4.254MB for 56388-byte allocation
D/dalvikvm(11102): GC_FOR_ALLOC freed <1K, 21% free 4297K/5396K, paused 5ms, total 5ms
D/dalvikvm(11102): GC_FOR_ALLOC freed <1K, 21% free 4297K/5396K, paused 6ms, total 6ms
I/dalvikvm-heap(11102): Grow heap (frag case) to 4.861MB for 635808-byte allocation
D/dalvikvm(11102): GC_FOR_ALLOC freed <1K, 19% free 4918K/6020K, paused 5ms, total 5ms
D/dalvikvm(11102): GC_CONCURRENT freed 2K, 19% free 4918K/6020K, paused 2ms+0ms, total 9ms
W/c.t.tdm.TrustDefenderMo(11102): Scan  already in progress or cancel requested, aborting
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.StringUtils: java.lang.String urlEncode(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: org.apache.http.client.methods.HttpUriRequest inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,org.apache.http.client.methods.HttpUriRequest)>	sig:$r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf?org_id=v60nf4oj&sdk_version=3.2-100&os=android&session_id=7546534bd8464fac961012f52146d948&osVersion=4.4.2
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://pf.intuit.com/fp/mobile/conf
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/AndroidRuntime(11102): Shutting down VM
W/dalvikvm(11102): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.threatmetrix.TrustDefenderMobile.ApacheURLConnectionImpl: java.lang.String getURL()>	sig:$r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>()	timediff:0
D/dalvikvm(11102): GC_CONCURRENT freed 438K, 17% free 5046K/6020K, paused 2ms+1ms, total 11ms
I/dalvikvm(11102): VMStack.getTraceBuf: threadObj 0x9512ec58 not active
D/yeshen  (10668): launcher onstop
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
E/ActivityThread(11102): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/FirebaseApp(10668): Notifying background state change listeners.
D/Tinker.DefaultAppLike(10668): onTrimMemory level:20
D/dalvikvm(11102): GC_FOR_ALLOC freed 176K, 13% free 5289K/6020K, paused 11ms, total 11ms
D/dalvikvm(11102): GC_FOR_ALLOC freed 110K, 14% free 5340K/6168K, paused 4ms, total 4ms
I/dalvikvm-heap(11102): Grow heap (frag case) to 5.352MB for 81748-byte allocation
D/dalvikvm(11102): GC_FOR_ALLOC freed 221K, 17% free 5199K/6248K, paused 8ms, total 8ms
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
E/ActivityThread(11102): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:637
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:638
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:78
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:78
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:225
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://graph.facebook.com/v2.2/501820783190330
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://pf.intuit.com/fp/mobile/conf
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm(11102): GC_CONCURRENT freed 581K, 14% free 5381K/6248K, paused 2ms+0ms, total 7ms
D/dalvikvm(11102): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(11102): GC_FOR_ALLOC freed 94K, 14% free 5423K/6248K, paused 3ms, total 3ms
D/dalvikvm(11102): GC_FOR_ALLOC freed 70K, 14% free 5450K/6336K, paused 6ms, total 6ms
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11102): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:1
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(11102): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:241
I/System.out(11102): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:243
I/System.out(11102): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11102): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://reports.crashlytics.com/spi/v1/platforms/android/apps/com.mint/reports
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:266
I/com.newrelic.agent.android(11102): Crash a34565bb-d288-844c-3eac-4f479f94ecec successfully submitted.
I/System.out(11102): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(11102): GC_CONCURRENT freed 895K, 17% free 5300K/6336K, paused 2ms+2ms, total 7ms
D/dalvikvm(11102): GC_CONCURRENT freed 695K, 17% free 5297K/6336K, paused 1ms+1ms, total 13ms
I/Process (  470): Sending signal. PID: 11102 SIG: 9
E/AndroidRuntime(11102): FATAL EXCEPTION: main
E/AndroidRuntime(11102): Process: com.mint, PID: 11102
E/AndroidRuntime(11102): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(11102): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(11102): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(11102): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(11102): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(11102): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(11102): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(11102): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(11102): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(11102): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(11102): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(11102): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(11102): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(11102): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(11102): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(11102): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(11102): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(11102): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(11102): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(11102): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 11102) has died.
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=11182 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(  746): GC_EXPLICIT freed 535K, 22% free 9169K/11636K, paused 1ms+2ms, total 23ms
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(11182): ignoring registerObject request in thread=1
I/dalvikvm(11182): ignoring registerObject request in thread=1
D/dalvikvm(11182): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(11182): GC_CONCURRENT freed 195K, 8% free 3053K/3312K, paused 1ms+1ms, total 7ms
W/ActivityManager(  470): Launch timeout has expired, giving up wake lock!
I/CrashlyticsCore(11182): Initializing Crashlytics 2.3.5.79
D/dalvikvm(11182): GC_CONCURRENT freed 183K, 8% free 3255K/3504K, paused 1ms+0ms, total 3ms
D/dalvikvm(11182): GC_CONCURRENT freed 158K, 7% free 3485K/3708K, paused 3ms+0ms, total 5ms
I/dalvikvm(11182): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(11182): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(11182): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(11182): GC_CONCURRENT freed 160K, 6% free 3714K/3948K, paused 2ms+2ms, total 8ms
I/dalvikvm(11182): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(11182): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(11182): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(11182): GC_CONCURRENT freed 169K, 6% free 3930K/4180K, paused 2ms+0ms, total 5ms
D/dalvikvm(11182): GC_FOR_ALLOC freed 175K, 6% free 4249K/4504K, paused 7ms, total 7ms
D/dalvikvm(11182): GC_CONCURRENT freed 309K, 9% free 4325K/4732K, paused 1ms+1ms, total 5ms
D/dalvikvm(11182): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(11182): VFY: unable to resolve instance field 38765
D/dalvikvm(11182): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(11182): <init> androidContext: 'com.mint.app.MintApp@4a7b10dc' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(11182): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(11182): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11182): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(11182): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(11182): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(11182): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(11182): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11182): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(11182): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(11182): VFY: replacing opcode 0x72 at 0x0006
I/System.out(11182): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(11182): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(11182): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(11182): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(11182): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(11182): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(11182): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11182): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(11182): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
D/dalvikvm(11182): GC_CONCURRENT freed 1412K, 30% free 3402K/4808K, paused 1ms+1ms, total 8ms
I/Authorization(11182): getAuthorizationState
I/com.newrelic.agent.android(11182): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/com.newrelic.agent.android(11182): Application state monitor has started
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11182): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:1
I/com.newrelic.agent.android(11182): Analytics Controller started.
I/com.newrelic.agent.android(11182): Measurement Engine initialized.
I/System.out(11182): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android(11182): New Relic Agent v5.4.0
D/dalvikvm(11182): GC_CONCURRENT freed 415K, 29% free 3431K/4808K, paused 1ms+2ms, total 6ms
D/dalvikvm(11182): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm-heap(11182): Grow heap (frag case) to 3.485MB for 79888-byte allocation
D/dalvikvm(11182): GC_FOR_ALLOC freed 48K, 30% free 3460K/4888K, paused 7ms, total 7ms
D/dalvikvm(11182): GC_FOR_ALLOC freed 71K, 28% free 3541K/4888K, paused 6ms, total 6ms
I/dalvikvm-heap(11182): Grow heap (frag case) to 3.592MB for 79888-byte allocation
D/dalvikvm(11182): GC_FOR_ALLOC freed 13K, 28% free 3606K/4968K, paused 4ms, total 5ms
I/com.newrelic.agent.android(11182): Harvester: connected
I/com.newrelic.agent.android(11182): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(11182): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(11182): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(11182): Harvester: Sending 0 analytics events.
D/dalvikvm(11182): GC_CONCURRENT freed 204K, 22% free 3911K/4968K, paused 2ms+1ms, total 9ms
D/dalvikvm(11182): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/dalvikvm(11182): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(11182): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(11182): VFY: replacing opcode 0x71 at 0x0030
D/MixpanelAPI.AL(11182): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
W/dalvikvm(11182): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11182): VFY: unable to resolve instance field 2423
D/dalvikvm(11182): VFY: replacing opcode 0x54 at 0x0000
D/dalvikvm(11182): GC_CONCURRENT freed 313K, 20% free 3985K/4968K, paused 2ms+0ms, total 5ms
I/System.out(11182): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm(11182): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11182): VFY: unable to resolve instance field 2423
D/dalvikvm(11182): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(11182): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11182): VFY: unable to resolve instance field 2423
D/dalvikvm(11182): VFY: replacing opcode 0x54 at 0x0002
I/System.out(11182): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(11182): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11182): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a57163ad-7142-40bb-ab0b-83f24b241cae
I/System.out(11182): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
W/dalvikvm(11182): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11182): VFY: unable to resolve instance field 2423
D/dalvikvm(11182): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(11182): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
W/dalvikvm(11182): VFY: unable to resolve instance field 2423
D/dalvikvm(11182): VFY: replacing opcode 0x54 at 0x0005
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11182): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11182): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:1
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11182): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a57163ad-7142-40bb-ab0b-83f24b241cae
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11182): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/AndroidRuntime(11182): Shutting down VM
W/dalvikvm(11182): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:111
D/dalvikvm(11182): GC_CONCURRENT freed 345K, 20% free 4023K/4968K, paused 3ms+0ms, total 6ms
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11182): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11182): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(11182): GC_CONCURRENT freed 356K, 19% free 4051K/4968K, paused 2ms+0ms, total 5ms
D/dalvikvm(11182): GC_CONCURRENT freed 117K, 13% free 4328K/4968K, paused 1ms+1ms, total 4ms
D/dalvikvm(11182): GC_FOR_ALLOC freed 69K, 13% free 4334K/4968K, paused 3ms, total 3ms
I/dalvikvm-heap(11182): Grow heap (frag case) to 4.346MB for 58146-byte allocation
D/dalvikvm(11182): GC_FOR_ALLOC freed 0K, 13% free 4391K/5028K, paused 5ms, total 5ms
D/dalvikvm(11182): GC_FOR_ALLOC freed 104K, 14% free 4357K/5028K, paused 4ms, total 4ms
I/dalvikvm-heap(11182): Grow heap (frag case) to 4.397MB for 87216-byte allocation
D/dalvikvm(11182): GC_FOR_ALLOC freed <1K, 14% free 4442K/5116K, paused 4ms, total 4ms
D/dalvikvm(11182): GC_FOR_ALLOC freed 66K, 15% free 4387K/5116K, paused 3ms, total 3ms
I/dalvikvm-heap(11182): Grow heap (frag case) to 4.423MB for 84388-byte allocation
D/dalvikvm(11182): GC_FOR_ALLOC freed <1K, 15% free 4470K/5200K, paused 4ms, total 4ms
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(11182): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:124
I/System.out(11182): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a57163ad-7142-40bb-ab0b-83f24b241cae;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11182): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:127
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11182): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11182): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=a57163ad-7142-40bb-ab0b-83f24b241cae;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11182): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(11182): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(11182): GC_CONCURRENT freed 600K, 18% free 4285K/5200K, paused 2ms+0ms, total 5ms
D/dalvikvm(11182): GC_CONCURRENT freed 370K, 18% free 4298K/5200K, paused 2ms+1ms, total 4ms
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:261
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:272
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11182): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:229
D/dalvikvm(11182): GC_CONCURRENT freed 276K, 12% free 4617K/5200K, paused 2ms+0ms, total 18ms
D/dalvikvm(11182): GC_FOR_ALLOC freed 202K, 14% free 4517K/5200K, paused 3ms, total 3ms
I/dalvikvm-heap(11182): Grow heap (frag case) to 4.550MB for 84388-byte allocation
D/dalvikvm(11182): GC_FOR_ALLOC freed <1K, 13% free 4599K/5284K, paused 4ms, total 4ms
I/System.out(11182): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:73
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:73
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:276
I/com.newrelic.agent.android(11182): Crash c011d86a-4073-f707-6258-576a16aaf904 successfully submitted.
I/System.out(11182): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(11182): GC_CONCURRENT freed 772K, 19% free 4287K/5284K, paused 1ms+0ms, total 5ms
D/dalvikvm(11182): GC_CONCURRENT freed 385K, 19% free 4286K/5284K, paused 1ms+0ms, total 4ms
I/System.out(11182): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/Process (  470): Sending signal. PID: 11182 SIG: 9
E/AndroidRuntime(11182): FATAL EXCEPTION: main
E/AndroidRuntime(11182): Process: com.mint, PID: 11182
E/AndroidRuntime(11182): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(11182): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(11182): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(11182): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(11182): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(11182): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(11182): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(11182): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(11182): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(11182): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(11182): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(11182): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(11182): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(11182): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(11182): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(11182): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(11182): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(11182): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(11182): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(11182): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
I/ActivityManager(  470): Process com.mint (pid 11182) has died.
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 1) failed with errno -13
I/dalvikvm(11234): ignoring registerObject request in thread=1
I/dalvikvm(11234): ignoring registerObject request in thread=1
I/ActivityManager(  470): Start proc com.mint for activity com.mint/.core.overview.LoginActivity$XLarge: pid=11234 uid=10055 gids={50055, 1028, 1015, 1023, 3003}
D/dalvikvm(11234): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(11234): GC_CONCURRENT freed 154K, 7% free 3077K/3296K, paused 2ms+0ms, total 4ms
D/dalvikvm(11234): GC_CONCURRENT freed 180K, 8% free 3285K/3540K, paused 2ms+0ms, total 4ms
I/CrashlyticsCore(11234): Initializing Crashlytics 2.3.5.79
D/dalvikvm(11234): GC_CONCURRENT freed 216K, 8% free 3577K/3860K, paused 1ms+1ms, total 6ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(11234): GC_CONCURRENT freed 202K, 7% free 3761K/4036K, paused 1ms+0ms, total 4ms
D/dalvikvm(11234): GC_CONCURRENT freed 151K, 6% free 4017K/4248K, paused 2ms+0ms, total 4ms
I/dalvikvm(11234): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(11234): VFY: unable to resolve virtual method 304: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(11234): VFY: replacing opcode 0x6e at 0x00f0
D/dalvikvm(11234): GC_CONCURRENT freed 198K, 7% free 4205K/4484K, paused 1ms+1ms, total 4ms
I/dalvikvm(11234): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzh
W/dalvikvm(11234): VFY: unable to resolve virtual method 592: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(11234): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(11234): GC_CONCURRENT freed 250K, 8% free 4345K/4688K, paused 1ms+1ms, total 4ms
D/dalvikvm(11234): DexOpt: couldn't find field Lcom/mint/core/settings/PasscodeBaseActivity;._nr_trace
W/dalvikvm(11234): VFY: unable to resolve instance field 38765
D/dalvikvm(11234): VFY: replacing opcode 0x54 at 0x0005
I/Authorization(11234): <init> androidContext: 'com.mint.app.MintApp@4a7b180c' envType: 'PROD' appToken: '9ybuQIWbWRe1CwTDNf6uIULnI4t25W50qKCdbiPmO2WrQeFdI2' authorizedIdentitySlot: '0' offeringId: 'Intuit.ifs.mint.2'
W/dalvikvm(11234): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
D/dalvikvm(11234): GC_CONCURRENT freed 307K, 8% free 4498K/4884K, paused 3ms+2ms, total 9ms
W/dalvikvm(11234): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11234): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(11234): VFY: unable to resolve virtual method 55455: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(11234): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(11234): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(11234): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(11234): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(11234): VFY: unable to resolve interface method 55449: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(11234): VFY: replacing opcode 0x72 at 0x0006
I/System.out(11234): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(11234): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://oauth.platform.intuit.com/
I/System.out(11234): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)	timediff:0
I/System.out(11234): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r9)###https://access.platform.intuit.com/
I/System.out(11234): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)	timediff:0
I/System.out(11234): <com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r10)###https://accounts.platform.intuit.com/
I/System.out(11234): body:<com.intuit.spc.authorization.AuthorizationClient: void init(android.content.Context,com.intuit.spc.authorization.dto.IdentityEnvironment,java.lang.String,int)>	sig:$r10 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11234): body:<com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(11234): <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobileCore: boolean setFPServer(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5)###https://pf.intuit.com
I/Authorization(11234): getAuthorizationState
I/com.newrelic.agent.android(11234): Loaded configuration: HarvestConfiguration{collect_network_errors=true, cross_process_id='UA4OVVFWGwEGVFRVDgY=', data_report_period=60, data_token=[2605797, 18691585], error_limit=50, report_max_transaction_age=600, report_max_transaction_count=1000, response_body_limit=2048, server_timestamp=1492823156, stack_trace_limit=100, activity_trace_max_size=65534, activity_trace_max_report_attempts=1, activity_trace_min_utilization=0.30000001192092896, at_capture=ActivityTraceConfiguration{maxTotalTraceCount=1}}
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11234): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(11234): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/com.newrelic.agent.android(11234): Application state monitor has started
D/dalvikvm(11234): GC_CONCURRENT freed 1477K, 31% free 3470K/5024K, paused 1ms+0ms, total 5ms
I/com.newrelic.agent.android(11234): Analytics Controller started.
I/com.newrelic.agent.android(11234): Measurement Engine initialized.
I/com.newrelic.agent.android(11234): New Relic Agent v5.4.0
D/dalvikvm(11234): GC_FOR_ALLOC freed 152K, 31% free 3516K/5024K, paused 3ms, total 3ms
I/dalvikvm-heap(11234): Grow heap (frag case) to 3.569MB for 79888-byte allocation
D/dalvikvm(11234): GC_FOR_ALLOC freed <1K, 30% free 3594K/5104K, paused 6ms, total 6ms
I/com.newrelic.agent.android(11234): Harvester: connected
I/com.newrelic.agent.android(11234): Harvester: Sending 0 HTTP transactions.
I/com.newrelic.agent.android(11234): Harvester: Sending 0 HTTP errors.
I/com.newrelic.agent.android(11234): Harvester: Sending 0 activity traces.
I/com.newrelic.agent.android(11234): Harvester: Sending 0 analytics events.
D/dalvikvm(11234): GC_CONCURRENT freed 205K, 27% free 3773K/5104K, paused 2ms+1ms, total 5ms
I/dalvikvm(11234): Could not find method com.google.android.gms.gcm.GoogleCloudMessaging.getInstance, referenced from method com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler.runGCMRegistration
W/dalvikvm(11234): VFY: unable to resolve static method 23273: Lcom/google/android/gms/gcm/GoogleCloudMessaging;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/gcm/GoogleCloudMessaging;
D/dalvikvm(11234): VFY: replacing opcode 0x71 at 0x0030
D/dalvikvm(11234): GC_CONCURRENT freed 247K, 24% free 3912K/5104K, paused 1ms+1ms, total 4ms
D/MixpanelAPI.AL(11234): Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.
I/System.out(11234): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
W/dalvikvm(11234): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11234): VFY: unable to resolve instance field 2423
D/dalvikvm(11234): VFY: replacing opcode 0x54 at 0x0000
W/dalvikvm(11234): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11234): VFY: unable to resolve instance field 2423
D/dalvikvm(11234): VFY: replacing opcode 0x54 at 0x0002
W/dalvikvm(11234): DexOpt: resolve class illegal access: Lcom/mint/core/overview/LoginActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11234): VFY: unable to resolve instance field 2423
D/dalvikvm(11234): VFY: replacing opcode 0x54 at 0x0002
I/System.out(11234): body:<com.mixpanel.android.mpmetrics.DecideChecker: java.lang.String getDecideResponseFromServer(java.lang.String,java.lang.String,com.mixpanel.android.util.RemoteService)>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8")	timediff:0
I/System.out(11234): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11234): <com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>###specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=efb05787-0249-47a6-a89b-aa8944487e44
W/dalvikvm(11234): DexOpt: resolve class illegal access: Landroid/support/v7/app/AppCompatActivity; -> Landroid/support/v4/app/BaseFragmentActivityDonut;
W/dalvikvm(11234): VFY: unable to resolve instance field 2423
D/dalvikvm(11234): VFY: replacing opcode 0x54 at 0x0005
D/dalvikvm(11234): DexOpt: couldn't find field Landroid/support/v4/app/BaseFragmentActivityDonut;._nr_trace
W/dalvikvm(11234): VFY: unable to resolve instance field 2423
D/dalvikvm(11234): VFY: replacing opcode 0x54 at 0x0005
D/AndroidRuntime(11234): Shutting down VM
W/dalvikvm(11234): threadid=1: thread exiting with uncaught exception (group=0x94c8eb20)
I/System.out(11234): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r15 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:24
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11234): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setReadTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11234): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11234): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=efb05787-0249-47a6-a89b-aa8944487e44
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11234): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://decide.mixpanel.com/decide
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:117
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void <init>(javax.net.ssl.HttpsURLConnection)>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void setCrossProcessHeader(java.net.HttpURLConnection)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestMethod(java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:1
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setUseCaches(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setConnectTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setRequestProperty(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(11234): GC_CONCURRENT freed 279K, 21% free 4036K/5104K, paused 2ms+1ms, total 6ms
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void setDoOutput(boolean)>	sig:virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:5
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getRequestProperty(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1)	timediff:0
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrument(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11234): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11234): <com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionState: void setUrl(java.lang.String)>	sig:$r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>()	timediff:0
D/dalvikvm(11234): GC_CONCURRENT freed 266K, 17% free 4282K/5104K, paused 2ms+4ms, total 8ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11234): GC_FOR_ALLOC freed 92K, 16% free 4300K/5104K, paused 5ms, total 5ms
I/dalvikvm-heap(11234): Grow heap (frag case) to 4.313MB for 58146-byte allocation
D/dalvikvm(11234): GC_FOR_ALLOC freed 0K, 16% free 4356K/5164K, paused 3ms, total 3ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 13ms
D/dalvikvm(11234): GC_FOR_ALLOC freed 241K, 17% free 4324K/5164K, paused 5ms, total 5ms
I/dalvikvm-heap(11234): Grow heap (frag case) to 4.365MB for 87216-byte allocation
D/dalvikvm(11234): GC_FOR_ALLOC freed 1K, 17% free 4408K/5252K, paused 3ms, total 3ms
D/dalvikvm(11234): GC_FOR_ALLOC freed 109K, 18% free 4351K/5252K, paused 5ms, total 5ms
I/dalvikvm-heap(11234): Grow heap (frag case) to 4.383MB for 79104-byte allocation
D/dalvikvm(11234): GC_FOR_ALLOC freed 5K, 18% free 4423K/5332K, paused 4ms, total 4ms
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(11234): <com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r3)###https://mobile-crash.newrelic.com/mobile_crash
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r8 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>()	timediff:141
I/System.out(11234): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): URLConn;%;0;%;<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getInputStream()>;%;$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=efb05787-0249-47a6-a89b-aa8944487e44;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11234): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:143
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.net.URL getURL()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: boolean getDoOutput()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.lang.String getHeaderField(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-NewRelic-App-Data")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.TransactionStateUtil: void inspectAndInstrumentResponse(com.newrelic.agent.android.instrumentation.TransactionState,java.net.HttpURLConnection)>	sig:$i2 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11234): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11234): URLConn;%;1;%;<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>;%;$r19 = virtualinvoke $r16.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://decide.mixpanel.com/decide?version=1&lib=android&token=fc39d387bca67e1fe92b84dc07e627d0&distinct_id=efb05787-0249-47a6-a89b-aa8944487e44;%;false;%;Not found;%;no-cache, no-store;%;Not found;%;Not found;%;Not found
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$1: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$i2 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: int getContentLength()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11234): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://decide.mixpanel.com/decide
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: void disconnect()>	sig:virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(11234): body:<com.mixpanel.android.util.HttpService: byte[] performRequest(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>	sig:virtualinvoke $r16.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(11234): GC_CONCURRENT freed 578K, 20% free 4275K/5332K, paused 2ms+0ms, total 6ms
D/dalvikvm(11234): GC_CONCURRENT freed 370K, 20% free 4289K/5332K, paused 2ms+0ms, total 5ms
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:$r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:233
D/dalvikvm(11234): GC_CONCURRENT freed 335K, 19% free 4337K/5332K, paused 2ms+0ms, total 4ms
D/dalvikvm(11234): GC_CONCURRENT freed 211K, 15% free 4558K/5332K, paused 1ms+0ms, total 8ms
D/dalvikvm(11234): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/dalvikvm-heap(11234): Grow heap (frag case) to 4.585MB for 79104-byte allocation
D/dalvikvm(11234): GC_FOR_ALLOC freed 187K, 18% free 4448K/5412K, paused 3ms, total 3ms
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.OutputStream getOutputStream()>	sig:$r5 = virtualinvoke $r3.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>()	timediff:303
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:323
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension$2: void streamComplete(com.newrelic.agent.android.instrumentation.io.StreamCompleteEvent)>	sig:$r5 = virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)>("content-length")	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11234): <com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0)###https://e.crashlytics.com/spi/v2/events
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.util.Util: java.lang.String sanitizeUrl(java.lang.String)>	sig:$r0 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11234): body:<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: int getResponseCode()>	sig:$i0 = virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>()	timediff:80
I/System.out(11234): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:80
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: boolean requestWasSuccessful(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:270
I/com.newrelic.agent.android(11234): Crash 04cef1a5-4fea-f70b-d49f-84fd612cc00f successfully submitted.
I/System.out(11234): body:<com.newrelic.agent.android.crashes.CrashReporter$CrashSender: void run()>	sig:virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(11234): GC_CONCURRENT freed 577K, 21% free 4280K/5412K, paused 1ms+0ms, total 4ms
D/dalvikvm(11234): GC_CONCURRENT freed 385K, 21% free 4279K/5412K, paused 2ms+0ms, total 5ms
I/Process (  470): Sending signal. PID: 11234 SIG: 9
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10055, 0) failed with errno -13
E/AndroidRuntime(11234): FATAL EXCEPTION: main
E/AndroidRuntime(11234): Process: com.mint, PID: 11234
E/AndroidRuntime(11234): java.lang.IllegalAccessError: tried to access class android.support.v4.app.BaseFragmentActivityDonut from class android.support.v7.app.AppCompatActivity
E/AndroidRuntime(11234): 	at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java)
E/AndroidRuntime(11234): 	at com.oneMint.base.OneMintBaseActivity.onCreate(OneMintBaseActivity.java:17)
E/AndroidRuntime(11234): 	at com.mint.core.base.MintBaseActivity.onCreate(MintBaseActivity.java:113)
E/AndroidRuntime(11234): 	at com.mint.core.base.AbstractFlipperActivity.onCreate(AbstractFlipperActivity.java:61)
E/AndroidRuntime(11234): 	at com.mint.core.overview.LoginActivity.onCreate(LoginActivity.java:225)
E/AndroidRuntime(11234): 	at android.app.Activity.performCreate(Activity.java:5231)
E/AndroidRuntime(11234): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1104)
E/AndroidRuntime(11234): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2157)
E/AndroidRuntime(11234): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)
E/AndroidRuntime(11234): 	at android.app.ActivityThread.access$800(ActivityThread.java:135)
E/AndroidRuntime(11234): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
E/AndroidRuntime(11234): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(11234): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(11234): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/AndroidRuntime(11234): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(11234): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(11234): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(11234): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(11234): 	at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager(  470): Force-killing crashed app com.mint at watcher's request
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9642 com.android.server.am.ActivityManagerService.handleApplicationCrash:9616 android.app.ActivityManagerNative.onTransact:1311 com.android.server.am.ActivityManagerService.onTransact:2071 
I/ActivityManager(  470): Process com.mint (pid 11234) has died.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/ActivityManager(  470): Force removing ActivityRecord{4a98ad5c u0 com.mint/.core.overview.LoginActivity$XLarge t63}: app died, no saved state
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
D/FirebaseApp(10668): Notifying background state change listeners.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
I/InputDispatcher(  470): Dropping event because there is no focused window or focused application.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/EGL_emulation(10668): eglSurfaceAttrib not implemented 3093 12436
W/Binder  (  656): Caught a RuntimeException from the binder stub implementation.
W/Binder  (  656): java.lang.NullPointerException
W/Binder  (  656): 	at android.inputmethodservice.IInputMethodWrapper.setSessionEnabled(IInputMethodWrapper.java:280)
W/Binder  (  656): 	at com.android.internal.view.IInputMethod$Stub.onTransact(IInputMethod.java:129)
W/Binder  (  656): 	at android.os.Binder.execTransact(Binder.java:404)
W/Binder  (  656): 	at dalvik.system.NativeStart.run(Native Method)
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/InputMethodManagerService(  470): Got RemoteException sending setActive(false) notification to pid 6059 uid 1000
W/PropertyValuesHolder(10668): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder(10668): Method getBrightness() with type int not found on target class class ml
E/FastMixer(  168): did not receive expected priority boost
W/PropertyValuesHolder(10668): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder(10668): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.vphone.helper/.MainActivity bnds=[946,174][1150,301] (has extras)} from pid 10668
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.startActivity:1020 android.content.ContextWrapper.startActivity:311 android.content.ContextWrapper.startActivity:311 com.vphone.launcher.utils.AppUtil.a:1506 com.vphone.launcher.utils.AppUtil.onQsbClicked:1486 
W/ContextImpl(10668): Calling a method in the system process without a qualified user: android.app.ContextImpl.startActivity:1032 android.app.ContextImpl.startActivity:1021 android.content.ContextWrapper.startActivity:311 android.content.ContextWrapper.startActivity:311 com.vphone.launcher.utils.AppUtil.a:1506 
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {flg=0x10000000 cmp=com.vphone.launcher/.game.SearchActivity} from pid 10668
W/Launcher(10668): No global search activity found.
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/InputManager(  470): Input event injection from pid 8296 failed.
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 10668
W/DebugConnManager(10668): getNetworkInfo() on networkType 1
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 10668
D/dalvikvm(10668): GC_CONCURRENT freed 2899K, 14% free 18923K/21884K, paused 3ms+5ms, total 15ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(10668): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/AndroidRuntime( 8296): VM exiting with result code 0.
