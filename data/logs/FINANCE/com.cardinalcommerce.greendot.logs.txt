--------- beginning of /dev/log/main
I/Icing   (  746): Indexing 9EBFE84EABD9270B25A97439CA522B4FC49A4875 from com.google.android.gms
I/Icing   (  746): Indexing done 9EBFE84EABD9270B25A97439CA522B4FC49A4875
D/AndroidRuntime( 6907): 
D/AndroidRuntime( 6907): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime( 6907): CheckJNI is OFF
D/dalvikvm( 6907): Using executionMode 2
D/dalvikvm( 6907): Trying to load lib libjavacore.so 0x0
D/dalvikvm( 6907): Added shared lib libjavacore.so 0x0
D/dalvikvm( 6907): Trying to load lib libnativehelper.so 0x0
D/dalvikvm( 6907): Added shared lib libnativehelper.so 0x0
D/dalvikvm( 6907): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm( 6907): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack( 6907): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug( 6907): failed to load memtrack module: -2
D/AndroidRuntime( 6907): Calling main entry com.android.commands.monkey.Monkey
--------- beginning of /dev/log/system
W/BroadcastQueue(  470): Skipping deliver [background] BroadcastRecord{4acc0868 u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4a8efee8 6907 (unknown name)/0/u-1 remote:4aa6cc0c}: process crashing
D/yeshen  ( 6059): launcher onpause
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
I/ActivityManager(  470): Start proc com.cardinalcommerce.greendot for activity com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity: pid=6917 uid=10051 gids={50051, 3003, 1028, 1015, 1023}
E/SurfaceFlinger(  165): glCheckFramebufferStatusOES error 36054
E/SurfaceFlinger(  165): got GL_FRAMEBUFFER_COMPLETE_OES error while taking screenshot
D/SurfaceFlinger(  165): setOrientation, mFbdev=0xb8e13050, mFbDev->setOrientation=0xb694cce0, orientation=3
I/gralloc_nox(  165): setOrientation: orientation=3
D/Tinker.DefaultAppLike( 6059): onConfigurationChanged:{1.0 310mcc16mnc ja_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.37}
I/ActivityManager(  470): Config changes=480 {1.0 310mcc16mnc ja_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.37}
I/InputReader(  470): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  470): Device reconfigured: id=1, name='seamless mouse', size 1280x720, orientation 3, mode 1, display id 0
I/InputReader(  470): Device reconfigured: id=3, name='Android Input', size 1280x720, orientation 3, mode 1, display id 0
I/InputReader(  470): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  470): Device reconfigured: id=8, name='VirtualBox USB Tablet', size 1280x720, orientation 3, mode 1, display id 0
D/Sensors (  470): Client connection accepted (183)
D/PhoneStatusBar(  556): mSettingsPanelGravity = 55
W/SurfaceFlinger(  165): setTransactionState timed out!
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10051, 1) failed with errno -13
I/WearableService(  668): Wearable Services stopping
I/dalvikvm( 6917): ignoring registerObject request in thread=1
I/dalvikvm( 6917): ignoring registerObject request in thread=1
D/yeshen  ( 6059): launcher onstop
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/dalvikvm(  556): GC_FOR_ALLOC freed 6449K, 53% free 9323K/19764K, paused 3ms, total 83ms
I/dalvikvm-heap(  556): Grow heap (frag case) to 15.416MB for 6553612-byte allocation
D/dalvikvm( 6059): GC_FOR_ALLOC freed 4314K, 8% free 58625K/63660K, paused 19ms, total 19ms
D/dalvikvm(  556): GC_FOR_ALLOC freed 3K, 21% free 15719K/19764K, paused 36ms, total 36ms
D/dalvikvm(  556): GC_CONCURRENT freed <1K, 21% free 15719K/19764K, paused 1ms+0ms, total 5ms
D/dalvikvm( 6059): GC_FOR_ALLOC freed 417K, 8% free 61325K/66468K, paused 10ms, total 10ms
E/FlurryAgent( 6917): Listener cannot be null
D/dalvikvm( 6917): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 6917): GC_CONCURRENT freed 215K, 9% free 3026K/3304K, paused 1ms+1ms, total 4ms
I/dalvikvm( 6917): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.zze.zzs
W/dalvikvm( 6917): VFY: unable to resolve virtual method 1628: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 6917): VFY: replacing opcode 0x6e at 0x001a
I/System.out( 6917): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out( 6917): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out( 6917): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out( 6917): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_MD5", 0, "SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA", 1, "SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_EXPORT_WITH_RC4_40_MD5", 2, "SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_RC4_128_MD5", 3, "SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_RC4_128_SHA", 4, "SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_EXPORT_WITH_DES40_CBC_SHA", 5, "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_DES_CBC_SHA", 6, "SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_3DES_EDE_CBC_SHA", 7, "SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 8, "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_DES_CBC_SHA", 9, "SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 10, "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 11, "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_DES_CBC_SHA", 12, "SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 13, "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_EXPORT_WITH_RC4_40_MD5", 14, "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_RC4_128_MD5", 15, "SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 16, "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_DES_CBC_SHA", 17, "SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_3DES_EDE_CBC_SHA", 18, "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 19, "TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 20, "TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_SHA", 21, "TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 22, "TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 23, "TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_MD5", 24, "TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 25, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 26, "TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 27, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 28, "TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, 2147483647)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 29, "TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 30, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 31, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 32, "TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 33, "TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 34, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 35, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 36, "TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA256", 37, "TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 38, "TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 39, "TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 40, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 41, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 42, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 43, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 44, "TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 45, "TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 46, "TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 47, "TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21)	timediff:1
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 48, "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 49, "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 50, "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 51, "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 52, "TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 53, "TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 54, "TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 55, "TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 56, "TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 57, "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 58, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 59, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 60, "TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 61, "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 62, "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 63, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 64, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 65, "TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 66, "TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 67, "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 68, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 69, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 70, "TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 71, "TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 72, "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 73, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 74, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 75, "TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 76, "TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 77, "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 78, "TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 79, "TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 80, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21)	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 232K, 9% free 3179K/3476K, paused 2ms+1ms, total 4ms
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 81, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 82, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 83, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 84, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 85, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 86, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 87, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 88, "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 89, "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 90, "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 91, "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 92, "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 93, "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 94, "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 95, "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 0, "TLSv1.2")	timediff:0
I/System.out( 6917): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 1, "TLSv1.1")	timediff:0
I/System.out( 6917): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 2, "TLSv1")	timediff:0
I/System.out( 6917): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 3, "SSLv3")	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:10
I/System.out( 6917): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r2 = staticinvoke <okhttp3.CertificatePinner$Builder: java.util.List access$000(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner$Builder: okhttp3.internal.tls.TrustRootIndex access$100(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder,okhttp3.CertificatePinner$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.RouteDatabase: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void <init>(java.lang.String,com.greendotcorp.core.data.UserState)>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:11
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void <init>(java.lang.String,com.greendotcorp.core.data.UserState)>	sig:$r5 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(5L, $r3)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void <init>(java.lang.String,com.greendotcorp.core.data.UserState)>	sig:$r5 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(90L, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 185K, 8% free 3377K/3636K, paused 2ms+0ms, total 4ms
I/System.out( 6917): body:<okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>	sig:specialinvoke $r1.<okhttp3.internal.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>	sig:specialinvoke $r4.<okhttp3.internal.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void <init>(java.lang.Class,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.Platform: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>	sig:specialinvoke $r7.<okhttp3.internal.Platform$Android: void <init>(java.lang.Class,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod)>($r0, $r1, $r4, $r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>()	timediff:5
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r15 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:6
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)>	sig:$r3 = staticinvoke <okhttp3.internal.Platform$Android: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)>($r1, $r2, "sslParameters")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)>($r0, class "java/lang/Object", "delegate")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform$Android: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)>($r3, class "javax/net/ssl/X509TrustManager", "x509TrustManager")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform$Android: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)>($r3, class "javax/net/ssl/X509TrustManager", "trustManager")	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r15.<okhttp3.internal.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)>($r13)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r15 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.tls.AndroidTrustRootIndex: okhttp3.internal.tls.TrustRootIndex get(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r4.<okhttp3.internal.tls.AndroidTrustRootIndex: void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)>($r0, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: okhttp3.internal.tls.TrustRootIndex trustRootIndex(javax.net.ssl.X509TrustManager)>	sig:$r2 = staticinvoke <okhttp3.internal.tls.AndroidTrustRootIndex: okhttp3.internal.tls.TrustRootIndex get(javax.net.ssl.X509TrustManager)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = virtualinvoke $r15.<okhttp3.internal.Platform: okhttp3.internal.tls.TrustRootIndex trustRootIndex(javax.net.ssl.X509TrustManager)>($r16)	timediff:1
I/System.out( 6917): body:<okhttp3.CertificatePinner$Builder: void <init>(okhttp3.CertificatePinner)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: java.util.List access$200(okhttp3.CertificatePinner)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner$Builder: void <init>(okhttp3.CertificatePinner)>	sig:$r5 = staticinvoke <okhttp3.CertificatePinner: okhttp3.internal.tls.TrustRootIndex access$300(okhttp3.CertificatePinner)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner$Builder: void <init>(okhttp3.CertificatePinner)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r25 = virtualinvoke $r24.<okhttp3.CertificatePinner: okhttp3.CertificatePinner$Builder newBuilder()>()	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r25 = virtualinvoke $r25.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder trustRootIndex(okhttp3.internal.tls.TrustRootIndex)>($r14)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r2 = staticinvoke <okhttp3.CertificatePinner$Builder: java.util.List access$000(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner$Builder: okhttp3.internal.tls.TrustRootIndex access$100(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder,okhttp3.CertificatePinner$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r24 = virtualinvoke $r25.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:51
I/System.out( 6917): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:51
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void <init>(java.lang.String,com.greendotcorp.core.data.UserState)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:51
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.lang.String)>	sig:specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.lang.String)>	sig:specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r1)	timediff:0
E/SQLiteLog( 6917): (14) cannot open file at line 30191 of [00bb9c9ce4]
E/SQLiteLog( 6917): (14) os_unix.c:30191: (2) open(/data/data/com.cardinalcommerce.greendot/databases/zipcodes.jpg) - 
E/SQLiteDatabase( 6917): Failed to open database '/data/data/com.cardinalcommerce.greendot/databases/zipcodes.jpg'.
E/SQLiteDatabase( 6917): android.database.sqlite.SQLiteCantOpenDatabaseException: unknown error (code 14): Could not open database
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteConnection.nativeOpen(Native Method)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:209)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:193)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteConnectionPool.openConnectionLocked(SQLiteConnectionPool.java:463)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:185)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:177)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteDatabase.openInner(SQLiteDatabase.java:804)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteDatabase.open(SQLiteDatabase.java:789)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:694)
E/SQLiteDatabase( 6917): 	at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:669)
E/SQLiteDatabase( 6917): 	at com.greendotcorp.core.provider.ZipCodeDbHelper.c(SourceFile:94)
E/SQLiteDatabase( 6917): 	at com.greendotcorp.core.provider.ZipCodeDbHelper.a(SourceFile:61)
E/SQLiteDatabase( 6917): 	at com.greendotcorp.core.service.CoreServices.<init>(SourceFile:121)
E/SQLiteDatabase( 6917): 	at com.greendotcorp.core.LooptApplication.onCreate(SourceFile:1087)
E/SQLiteDatabase( 6917): 	at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1024)
E/SQLiteDatabase( 6917): 	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4346)
E/SQLiteDatabase( 6917): 	at android.app.ActivityThread.access$1500(ActivityThread.java:135)
E/SQLiteDatabase( 6917): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1256)
E/SQLiteDatabase( 6917): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/SQLiteDatabase( 6917): 	at android.os.Looper.loop(Looper.java:136)
E/SQLiteDatabase( 6917): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
E/SQLiteDatabase( 6917): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/SQLiteDatabase( 6917): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/SQLiteDatabase( 6917): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/SQLiteDatabase( 6917): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/SQLiteDatabase( 6917): 	at dalvik.system.NativeStart.main(Native Method)
D/dalvikvm( 6917): GC_CONCURRENT freed 278K, 9% free 3484K/3828K, paused 3ms+1ms, total 6ms
I/Crittercism( 6917): Initializing Crittercism 5.0.6 for App ID b41b7d4c74204052a92723f17a30281100555300
I/System.out( 6917): body:<a.a.aa: void a(android.content.Context,java.lang.String,com.crittercism.app.CrittercismConfig)>	sig:specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r6)	timediff:0
I/System.out( 6917): <a.a.aa: void a(android.content.Context,java.lang.String,com.crittercism.app.CrittercismConfig)>###specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r6)###https://apm.crittercism.com/api/apm/network
I/System.out( 6917): body:<a.a.fb: void <clinit>()>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>("https://www.google.com")	timediff:0
I/System.out( 6917): <a.a.fb: void <clinit>()>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>("https://www.google.com")###https://www.google.com
I/System.out( 6917): body:<a.a.d$1: void <init>()>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.fb: boolean g()>	sig:specialinvoke $r6.<java.net.Socket: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.fb: boolean g()>	sig:staticinvoke <java.net.Socket: void setSocketImplFactory(java.net.SocketImplFactory)>($r11)	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 311K, 10% free 3560K/3936K, paused 2ms+0ms, total 5ms
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] A fresh start of Root Activity
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Go to pre-login screen
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity} from pid 6917
D/dalvikvm( 6917): GC_FOR_ALLOC freed 185K, 7% free 3743K/4012K, paused 4ms, total 4ms
I/dalvikvm-heap( 6917): Grow heap (frag case) to 4.320MB for 635808-byte allocation
D/dalvikvm( 6917): GC_FOR_ALLOC freed <1K, 6% free 4363K/4636K, paused 4ms, total 4ms
D/dalvikvm( 6917): GC_CONCURRENT freed 2K, 6% free 4362K/4636K, paused 2ms+0ms, total 7ms
I/System.out( 6917): body:<com.a.a.be: boolean a(java.lang.String)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): <com.a.a.be: boolean a(java.lang.String)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)###https://assets.adobedtm.com/b213090c5204bf94318f4ef0539a38b487d10368/scripts/satellite-57c8aff764746d4d3e00a305.json
I/System.out( 6917): body:<com.a.a.bf: java.net.HttpURLConnection a(java.lang.String)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): <com.a.a.bf: java.net.HttpURLConnection a(java.lang.String)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)###https://assets.adobedtm.com/b213090c5204bf94318f4ef0539a38b487d10368/scripts/satellite-57c8aff764746d4d3e00a305.json
I/System.out( 6917): body:<com.a.a.bf: java.net.HttpURLConnection a(java.lang.String)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.be: boolean a(java.lang.String)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): <com.a.a.be: boolean a(java.lang.String)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)###https://assets.adobedtm.com/b213090c5204bf94318f4ef0539a38b487d10368/scripts/satellite-57c8aff864746d192c009668.json
I/System.out( 6917): body:<com.a.a.bf: java.net.HttpURLConnection a(java.lang.String)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): <com.a.a.bf: java.net.HttpURLConnection a(java.lang.String)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)###https://assets.adobedtm.com/b213090c5204bf94318f4ef0539a38b487d10368/scripts/satellite-57c8aff864746d192c009668.json
I/System.out( 6917): body:<com.a.a.bf: java.net.HttpURLConnection a(java.lang.String)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): <com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r4)###https://greendot.sc.omtrdc.net/id
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:$r12 = virtualinvoke $r11.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setConnectTimeout(int)>(2000)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r14)	timediff:1
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r14)	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 337K, 9% free 4490K/4892K, paused 2ms+1ms, total 15ms
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Initializing session...
D/dalvikvm( 6917): GC_CONCURRENT freed 81K, 5% free 4833K/5060K, paused 1ms+0ms, total 5ms
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Clearing session and data...
I/System.out( 6917): body:<a.a.dv: java.net.URL a()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): <a.a.dv: java.net.URL a()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r3)###https://appload.ingest.crittercism.com/v0/appload/
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:$r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>($z0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r4 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>()	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 416K, 9% free 4955K/5436K, paused 1ms+0ms, total 4ms
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:6
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:12
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:12
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:13
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)	timediff:13
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r4 = virtualinvoke $r0.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>($r0, $r6)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r19 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r18, $r4)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r14 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r15 = virtualinvoke $r13.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r14)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r4 = virtualinvoke $r2.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r5 = virtualinvoke $r4.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$l1 = virtualinvoke $r2.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.http.HttpEngine$1: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r6.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r7, $r1, 0, 0, $z0, null, null, null)	timediff:2
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:1
I/System.out( 6917): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>(2147483647, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:8
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:8
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r1 = virtualinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:10
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 508K, 11% free 5065K/5640K, paused 2ms+5ms, total 10ms
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.OutputStream getOutputStream()>	sig:$r3 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.InputStream getInputStream()>	sig:$r4 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.net.InetAddress getLocalAddress()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.net.InetAddress getLocalAddress()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.OutputStream getOutputStream()>	sig:$r3 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.InputStream getInputStream()>	sig:$r4 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.net.InetAddress getLocalAddress()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.net.InetAddress getLocalAddress()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void connect()>()	timediff:156
D/dalvikvm( 6917): GC_CONCURRENT freed 716K, 14% free 5090K/5868K, paused 2ms+0ms, total 12ms
D/dalvikvm( 6917): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void connect()>()	timediff:174
D/dalvikvm( 6917): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out( 6917): body:<a.a.b: a.a.ci a(boolean)>	sig:$r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: java.net.InetAddress getInetAddress()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: a.a.ci a(boolean)>	sig:$r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: java.net.InetAddress getInetAddress()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
D/dalvikvm( 6917): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:8
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$l1 = virtualinvoke $r10.<java.net.HttpURLConnection: long getLastModified()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$r6 = virtualinvoke $r10.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("ETag")	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$r19 = virtualinvoke $r10.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): URLConn;%;0;%;<com.a.a.bf: void run()>;%;$r19 = virtualinvoke $r10.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://assets.adobedtm.com/b213090c5204bf94318f4ef0539a38b487d10368/scripts/satellite-57c8aff764746d4d3e00a305.json;%;false;%;16;%;max-age=3600;%;Sat, 14 Apr 2018 06:19:49 GMT;%;Not found;%;Not found
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: int getSoTimeout()>	sig:$i0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: int getSoTimeout()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:14
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$l1 = virtualinvoke $r10.<java.net.HttpURLConnection: long getLastModified()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$r6 = virtualinvoke $r10.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("ETag")	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:$r19 = virtualinvoke $r10.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): URLConn;%;1;%;<com.a.a.bf: void run()>;%;$r19 = virtualinvoke $r10.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://assets.adobedtm.com/b213090c5204bf94318f4ef0539a38b487d10368/scripts/satellite-57c8aff864746d192c009668.json;%;false;%;Not found;%;max-age=3600;%;Sat, 14 Apr 2018 06:19:49 GMT;%;Not found;%;Not found
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: int getSoTimeout()>	sig:$i0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: int getSoTimeout()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.ez: void a(a.a.ci)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6917): body:<a.a.ez: void a(a.a.ci)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bf: void run()>	sig:virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.ed: void a()>	sig:$r7 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:143
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:116
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:116
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:117
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:117
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:117
I/System.out( 6917): body:<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.framed.FramedConnection$Listener: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r1, $r3)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:11
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:11
W/dalvikvm( 6917): VFY: unable to find class referenced in signature (Ljava/nio/file/Path;)
W/dalvikvm( 6917): VFY: unable to find class referenced in signature ([Ljava/nio/file/OpenOption;)
I/dalvikvm( 6917): Could not find method java.nio.file.Files.newOutputStream, referenced from method okio.Okio.sink
W/dalvikvm( 6917): VFY: unable to resolve static method 43656: Ljava/nio/file/Files;.newOutputStream (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
D/dalvikvm( 6917): VFY: replacing opcode 0x71 at 0x000a
W/dalvikvm( 6917): VFY: unable to find class referenced in signature (Ljava/nio/file/Path;)
W/dalvikvm( 6917): VFY: unable to find class referenced in signature ([Ljava/nio/file/OpenOption;)
I/dalvikvm( 6917): Could not find method java.nio.file.Files.newInputStream, referenced from method okio.Okio.source
W/dalvikvm( 6917): VFY: unable to resolve static method 43655: Ljava/nio/file/Files;.newInputStream (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
D/dalvikvm( 6917): VFY: replacing opcode 0x71 at 0x000a
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.ed: void a()>	sig:$i0 = virtualinvoke $r5.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:30
I/System.out( 6917): body:<a.a.ed: void a()>	sig:$r9 = virtualinvoke $r5.<java.net.URLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): URLConn;%;2;%;<a.a.ed: void a()>;%;$r9 = virtualinvoke $r5.<java.net.URLConnection: java.io.InputStream getInputStream()>();%;https://appload.ingest.crittercism.com/v0/appload/;%;true;%;371;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.ed: void a()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.OutputStream getOutputStream()>	sig:$r3 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.InputStream getInputStream()>	sig:$r4 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.net.InetAddress getLocalAddress()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.net.InetAddress getLocalAddress()>()	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 687K, 13% free 5155K/5904K, paused 2ms+3ms, total 12ms
D/dalvikvm( 6917): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 6917): body:<a.a.b: a.a.ci a(boolean)>	sig:$r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: java.net.InetAddress getInetAddress()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
D/dalvikvm( 6917): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
D/dalvikvm( 6917): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<a.a.dv: java.net.URL a()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): <a.a.dv: java.net.URL a()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r3)###https://api.crittercism.com/android_v2/update_user_metadata
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:$r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r12, $r11)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>($z0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 6917): body:<a.a.dw: java.net.HttpURLConnection a()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:8
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:8
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:8
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r13.<okhttp3.internal.http.RouteException: void <init>(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:$i1 = virtualinvoke $r13.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:258
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:$r7 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): URLConn;%;3;%;<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>;%;$r7 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://greendot.sc.omtrdc.net/id;%;false;%;43;%;Not found;%;Not found;%;Not found;%;s_vi=[CS]v1|2D68C7BA85030419-600011812000BB12[CE]; Expires=Mon, 13 Apr 2020 05:19:49 GMT; Domain=omtrdc.net; Path=/
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.ez: void a(a.a.ci)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: int getSoTimeout()>	sig:$i0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: int getSoTimeout()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] b(java.lang.String,int,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:18
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:18
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r2, "TLS_FALLBACK_SCSV")	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:1
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: java.net.HttpURLConnection a(java.lang.String)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): <com.a.a.bi: java.net.HttpURLConnection a(java.lang.String)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)###https://greendot.sc.omtrdc.net/b/ss/gdc-mobile-native-production/0/JAVA-4.12.0-AN/s41437696
I/System.out( 6917): body:<com.a.a.bi: java.net.HttpURLConnection a(java.lang.String)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setReadTimeout(int)>(5000)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded")	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r0, $r11)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r0, $r11)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: int getSoTimeout()>	sig:$i0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: int getSoTimeout()>()	timediff:1
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:1
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:2
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 641K, 14% free 5165K/5968K, paused 1ms+4ms, total 9ms
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:3
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:$r15 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:19
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteException: void addSuppressedIfPossible(java.io.IOException,java.io.IOException)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:virtualinvoke $r13.<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:virtualinvoke $r11.<okhttp3.internal.RouteDatabase: void failed(okhttp3.Route)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:virtualinvoke $r5.<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>($r4, $r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<a.a.b: a.a.ci a(boolean)>	sig:$r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: java.net.InetAddress getInetAddress()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$r8 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.RouteSelector: boolean hasNext()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>	sig:$z2 = virtualinvoke $r3.<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>($r1, $r2)	timediff:2
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r8, null)	timediff:2
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>	sig:virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>(null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r12 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r12.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.Call)>($r0)	timediff:0
E/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f035c0: Failure in SSL library, usually a protocol error
E/GreendotCorp( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000) Error executing request '0'
W/System.err( 6917): javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f035c0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectTls(SourceFile:195)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectSocket(SourceFile:148)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connect(SourceFile:111)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findConnection(SourceFile:188)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findHealthyConnection(SourceFile:127)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.newStream(SourceFile:97)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.connect(SourceFile:289)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.sendRequest(SourceFile:241)
W/System.err( 6917): 	at okhttp3.RealCall.getResponse(SourceFile:240)
W/System.err( 6917): 	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(SourceFile:198)
W/System.err( 6917): 	at okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:160)
W/System.err( 6917): 	at okhttp3.RealCall.execute(SourceFile:57)
W/System.err( 6917): 	at com.greendotcorp.core.network.HttpClientGdcProvider.a(SourceFile:150)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider.a(SourceFile:3099)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider$1.run(SourceFile:213)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
W/System.err( 6917): 	at java.lang.Thread.run(Thread.java:841)
W/System.err( 6917): 	Suppressed: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f035c0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		... 19 more
W/System.err( 6917): 	Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f035c0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 		at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 		... 18 more
W/System.err( 6917): Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f035c0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 	... 18 more
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	sig:$r16 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:35
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): URLConn;%;4;%;<com.a.a.bi: byte[] a(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>;%;$r16 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://greendot.sc.omtrdc.net/b/ss/gdc-mobile-native-production/0/JAVA-4.12.0-AN/s41437696;%;false;%;1;%;no-cache, no-store, max-age=0, no-transform, private;%;Fri, 13 Apr 2018 05:19:49 GMT;%;Not found;%;Not found
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.ez: void a(a.a.ci)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: int getSoTimeout()>	sig:$i0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: int getSoTimeout()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:1
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 625K, 14% free 5190K/5968K, paused 3ms+0ms, total 6ms
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.ed: void a()>	sig:$r7 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:143
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.ed: void a()>	sig:$i0 = virtualinvoke $r5.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:18
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.ed: void a()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>()	timediff:1
W/ActivityManager(  470): Launch timeout has expired, giving up wake lock!
W/WindowManager(  470): Window freeze timeout expired.
W/WindowManager(  470): Force clearing orientation change: Window{4a9639a4 u0 StatusBar}
W/WindowManager(  470): Force clearing orientation change: Window{4b146ad0 u0 com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity}
W/WindowManager(  470): Force clearing orientation change: Window{4aaa222c u0 Starting com.cardinalcommerce.greendot}
W/WindowManager(  470): Force clearing orientation change: Window{4a997784 u0 com.android.systemui.ImageWallpaper}
W/WindowManager(  470): App freeze timeout expired.
E/WindowManager(  470): Starting window AppWindowToken{4aaa1484 token=Token{4aa2bcb4 ActivityRecord{4aaa0c34 u0 com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity t42}}} timed out
D/libEGL  ( 6917): loaded /system/lib/egl/libEGL_adreno.so
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/FirebaseApp( 6059): Notifying background state change listeners.
I/Choreographer( 6059): Skipped 602 frames!  The application may be doing too much work on its main thread.
D/Tinker.DefaultAppLike( 6059): onTrimMemory level:20
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): <com.flurry.sdk.ku: void i()>###specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r1)###https://data.flurry.com/aap.do
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:$r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z0)	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r1, $r13)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.OutputStream getOutputStream()>	sig:$r3 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.io.InputStream getInputStream()>	sig:$r4 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<a.a.b: java.net.InetAddress getLocalAddress()>	sig:$r2 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: java.net.InetAddress getLocalAddress()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:$r15 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:166
I/System.out( 6917): body:<a.a.b: a.a.ci a(boolean)>	sig:$r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: java.net.InetAddress getInetAddress()>()	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.ez: void a(a.a.ci)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:$i0 = virtualinvoke $r4.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:44
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:$r19 = virtualinvoke $r4.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>()	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void i()>	sig:$r24 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6917): URLConn;%;5;%;<com.flurry.sdk.ku: void i()>;%;$r24 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://data.flurry.com/aap.do;%;true;%;Not found;%;Not found;%;Not found;%;0;%;Not found
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: int getSoTimeout()>	sig:$i0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: int getSoTimeout()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: int getSoTimeout()>	sig:$i0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: int getSoTimeout()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isClosed()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isClosed()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isInputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: boolean isOutputShutdown()>	sig:$z0 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6917): body:<a.a.b: void close()>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void close()>()	timediff:1
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<a.a.b: void setSoTimeout(int)>	sig:virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out( 6917): body:<com.flurry.sdk.ku: void j()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 650K, 13% free 5197K/5912K, paused 3ms+1ms, total 6ms
D/        ( 6917): HostConnection::get() New Host Connection established 0xb8f31790, tid 6917
D/libEGL  ( 6917): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 6917): loaded /system/lib/egl/libGLESv2_adreno.so
I/WindowManager(  470): Screen frozen for +25s169ms due to Window{4aaa222c u0 Starting com.cardinalcommerce.greendot}
W/BroadcastQueue(  470): Timeout of broadcast BroadcastRecord{4ac60e48 u-1 android.intent.action.TIME_TICK} - receiver=android.os.BinderProxy@4a95c728, started 10006ms ago
I/ActivityManager(  470): Skipping duplicate ANR: ProcessRecord{4a94d0a8 556:com.android.systemui/u0a10} Broadcast of Intent { act=android.intent.action.TIME_TICK flg=0x50000014 (has extras) }
W/BroadcastQueue(  470): Receiver during timeout: BroadcastFilter{4a95ca8c u0 ReceiverList{4a95ca5c 556 com.android.systemui/10010/u0 remote:4a95c728}}
W/InputManager(  470): Input event injection from pid 6907 timed out.
I/InputDispatcher(  470): Dropped event because it is stale.
I/InputDispatcher(  470): Dropped event because it is stale.
I/InputDispatcher(  470): Dropped event because it is stale.
I/InputDispatcher(  470): Dropped event because it is stale.
I/Choreographer(  470): Skipped 1202 frames!  The application may be doing too much work on its main thread.
I/Choreographer(  556): Skipped 1809 frames!  The application may be doing too much work on its main thread.
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(  556): eglSurfaceAttrib not implemented 3093 12436
D/OpenGLRenderer( 6917): Enabling debug mode 0
D/dalvikvm( 6917): GC_FOR_ALLOC freed 33K, 12% free 5205K/5912K, paused 5ms, total 5ms
I/dalvikvm-heap( 6917): Grow heap (frag case) to 5.722MB for 608412-byte allocation
D/dalvikvm( 6917): GC_FOR_ALLOC freed <1K, 11% free 5799K/6508K, paused 12ms, total 12ms
D/dalvikvm(  598): GC_EXPLICIT freed 292K, 14% free 3127K/3636K, paused 1ms+0ms, total 43ms
D/dalvikvm( 6917): GC_FOR_ALLOC freed 4K, 11% free 5811K/6508K, paused 3ms, total 4ms
I/dalvikvm-heap( 6917): Grow heap (frag case) to 6.314MB for 608412-byte allocation
D/dalvikvm( 6917): GC_FOR_ALLOC freed <1K, 10% free 6405K/7104K, paused 11ms, total 11ms
D/dalvikvm( 6917): GC_FOR_ALLOC freed <1K, 10% free 6414K/7104K, paused 9ms, total 9ms
I/dalvikvm-heap( 6917): Grow heap (frag case) to 6.903MB for 608412-byte allocation
D/dalvikvm( 6917): GC_FOR_ALLOC freed <1K, 9% free 7008K/7700K, paused 4ms, total 4ms
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219416, downTime=1219416, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219578, downTime=1219578, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219580, downTime=1219580, deviceId=-1, source=0x101 }
I/Choreographer( 6917): Skipped 1489 frames!  The application may be doing too much work on its main thread.
V/FlingTracker(  556): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  556): java.lang.Throwable
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  556): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  556): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  556): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  556): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  556): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  556): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  556): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  556): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  556): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  556): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  556): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  556): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  556): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  556): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/PanelView(  556): animationTick called with dtms=-5; nothing to do (h=0.0 v=0.0)
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_EMAIL]}} from pid 470
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219583, downTime=1219583, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_SUBTRACT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219585, downTime=1219585, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219593, downTime=1219593, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MEDIA_PLAY, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219601, downTime=1219601, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219747, downTime=1219747, deviceId=-1, source=0x101 }
I/ActivityManager(  470): Displayed com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity: +25s116ms (total +30s576ms)
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219749, downTime=1219749, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219752, downTime=1219752, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_SELECT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219754, downTime=1219754, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219754, downTime=1219754, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219765, downTime=1219765, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219786, downTime=1219786, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=4.0, y[0]=-2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=19, eventTime=1219765, downTime=-1, deviceId=0, source=0x10004 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/IInputConnectionWrapper( 6059): showStatusIcon on inactive InputConnection
E/FastMixer(  168): did not receive expected priority boost
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl( 6917): Dropping event due to root view being removed: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1219833, downTime=1219833, deviceId=-1, source=0x101 }
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_CALENDAR]}} from pid 470
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac63c00 attribute=android.view.inputmethod.EditorInfo@4ada0094, token = android.os.BinderProxy@4ae8e550
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 cmp=com.android.browser/.BrowserActivity sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_BROWSER]}} from pid 470
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Initializing session...
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Clearing session and data...
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r4 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>()	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220082, downTime=1220082, deviceId=-1, source=0x101 }
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:5
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:8
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:3
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:11
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)	timediff:11
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r4 = virtualinvoke $r0.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>($r0, $r6)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r19 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r18, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:1
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r19)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r14 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r15 = virtualinvoke $r13.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r14)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r4 = virtualinvoke $r2.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r5 = virtualinvoke $r4.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$l1 = virtualinvoke $r2.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 414K, 6% free 7856K/8336K, paused 1ms+2ms, total 9ms
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:9
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r5)	timediff:9
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding")	timediff:5
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:3
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:3
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:3
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:3
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r6.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r7, $r1, 0, 0, $z0, null, null, null)	timediff:4
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r2, null, null)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:1
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r1 = virtualinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:1
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: okhttp3.Route nextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220108, downTime=1220108, deviceId=-1, source=0x101 }
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220135, downTime=1220135, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220137, downTime=1220137, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220138, downTime=1220138, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_AVR_INPUT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220139, downTime=1220139, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220140, downTime=1220140, deviceId=-1, source=0x101 }
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:37
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:19
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:19
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:3
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:4
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:4
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:2
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:4
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:4
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:4
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:10
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:8
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:8
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/ActivityManager(  470): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 6917
W/PhoneFallbackEventHandler( 6917): No activity found for android.intent.action.CALL_BUTTON.
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r13.<okhttp3.internal.http.RouteException: void <init>(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:26
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:26
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r2, "TLS_FALLBACK_SCSV")	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:1
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteException: void addSuppressedIfPossible(java.io.IOException,java.io.IOException)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:virtualinvoke $r13.<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:virtualinvoke $r11.<okhttp3.internal.RouteDatabase: void failed(okhttp3.Route)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:virtualinvoke $r5.<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>($r4, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$r8 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.RouteSelector: boolean hasNext()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>	sig:$z2 = virtualinvoke $r3.<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r8, null)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>	sig:virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>(null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r12 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r12.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.Call)>($r0)	timediff:0
E/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f809a0: Failure in SSL library, usually a protocol error
E/GreendotCorp( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000) Error executing request '1'
W/System.err( 6917): javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f809a0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectTls(SourceFile:195)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectSocket(SourceFile:148)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connect(SourceFile:111)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findConnection(SourceFile:188)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findHealthyConnection(SourceFile:127)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.newStream(SourceFile:97)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.connect(SourceFile:289)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.sendRequest(SourceFile:241)
W/System.err( 6917): 	at okhttp3.RealCall.getResponse(SourceFile:240)
W/System.err( 6917): 	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(SourceFile:198)
W/System.err( 6917): 	at okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:160)
W/System.err( 6917): 	at okhttp3.RealCall.execute(SourceFile:57)
W/System.err( 6917): 	at com.greendotcorp.core.network.HttpClientGdcProvider.a(SourceFile:150)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider.a(SourceFile:3099)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider$1.run(SourceFile:213)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
W/System.err( 6917): 	at java.lang.Thread.run(Thread.java:841)
W/System.err( 6917): 	Suppressed: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f85580: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		... 19 more
W/System.err( 6917): 	Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f85580: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 		at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 		... 18 more
W/System.err( 6917): Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f809a0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 	... 18 more
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MEDIA_CLOSE, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220346, downTime=1220346, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220354, downTime=1220354, deviceId=-1, source=0x101 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220358, downTime=1220358, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_ENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220379, downTime=1220379, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aceba44 attribute=android.view.inputmethod.EditorInfo@4acbd830, token = android.os.BinderProxy@4ae8e550
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl( 6917): Dropping event due to root view being removed: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_WINDOW, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220495, downTime=1220495, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac05b84 attribute=null, token = android.os.BinderProxy@4ae8e550
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220539, downTime=1220539, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220542, downTime=1220542, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220543, downTime=1220543, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220545, downTime=1220545, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BACK, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220546, downTime=1220546, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_EISU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220548, downTime=1220548, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220549, downTime=1220549, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220550, downTime=1220550, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_R2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220554, downTime=1220554, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220555, downTime=1220555, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220556, downTime=1220556, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_L2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220558, downTime=1220558, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_V, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220561, downTime=1220561, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220564, downTime=1220564, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220568, downTime=1220568, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220569, downTime=1220569, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220570, downTime=1220570, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220572, downTime=1220572, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220574, downTime=1220574, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220580, downTime=1220580, deviceId=-1, source=0x101 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/SurfaceFlinger(  165): couldn't log to binary event log: overflow.
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Initializing session...
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Clearing session and data...
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r4 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r4 = virtualinvoke $r0.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>($r0, $r6)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r19 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r18, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_F2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220588, downTime=1220588, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_7, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220629, downTime=1220629, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MOVE_HOME, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220629, downTime=1220629, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220630, downTime=1220630, deviceId=-1, source=0x101 }
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:6
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:6
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r14 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:6
I/System.out( 6917): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r15 = virtualinvoke $r13.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r14)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r4 = virtualinvoke $r2.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r5 = virtualinvoke $r4.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$l1 = virtualinvoke $r2.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:3
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:3
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r6.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r7, $r1, 0, 0, $z0, null, null, null)	timediff:4
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:1
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:1
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:3
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r1 = virtualinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: okhttp3.Route nextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:13
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:13
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:21
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:21
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:21
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:21
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:21
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:21
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:10
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:10
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:10
D/dalvikvm( 6917): GC_CONCURRENT freed 1464K, 17% free 7954K/9480K, paused 2ms+5ms, total 12ms
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r13.<okhttp3.internal.http.RouteException: void <init>(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:12
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:12
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r2, "TLS_FALLBACK_SCSV")	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/InputManager(  470): Input event injection from pid 6907 failed.
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteException: void addSuppressedIfPossible(java.io.IOException,java.io.IOException)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:virtualinvoke $r13.<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:virtualinvoke $r11.<okhttp3.internal.RouteDatabase: void failed(okhttp3.Route)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:virtualinvoke $r5.<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>($r4, $r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$r8 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.RouteSelector: boolean hasNext()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>	sig:$z2 = virtualinvoke $r3.<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>($r1, $r2)	timediff:2
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r8, null)	timediff:2
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>	sig:virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>(null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r12 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r12.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.Call)>($r0)	timediff:0
E/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8feed60: Failure in SSL library, usually a protocol error
E/GreendotCorp( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000) Error executing request '2'
W/System.err( 6917): javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8feed60: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectTls(SourceFile:195)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectSocket(SourceFile:148)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connect(SourceFile:111)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findConnection(SourceFile:188)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findHealthyConnection(SourceFile:127)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.newStream(SourceFile:97)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.connect(SourceFile:289)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.sendRequest(SourceFile:241)
W/System.err( 6917): 	at okhttp3.RealCall.getResponse(SourceFile:240)
W/System.err( 6917): 	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(SourceFile:198)
W/System.err( 6917): 	at okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:160)
W/System.err( 6917): 	at okhttp3.RealCall.execute(SourceFile:57)
W/System.err( 6917): 	at com.greendotcorp.core.network.HttpClientGdcProvider.a(SourceFile:150)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider.a(SourceFile:3099)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider$1.run(SourceFile:213)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
W/System.err( 6917): 	at java.lang.Thread.run(Thread.java:841)
W/System.err( 6917): 	Suppressed: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fea110: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		... 19 more
W/System.err( 6917): 	Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fea110: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 		at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 		... 18 more
W/System.err( 6917): Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8feed60: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 	... 18 more
W/SurfaceFlinger(  165): couldn't log to binary event log: overflow.
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_R, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220789, downTime=1220789, deviceId=-1, source=0x101 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa55244 attribute=null, token = android.os.BinderProxy@4ae8e550
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b09a89c attribute=android.view.inputmethod.EditorInfo@4acba208, token = android.os.BinderProxy@4ae8e550
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220847, downTime=1220847, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=2.0, y[0]=-2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1220854, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1220854, downTime=1220850, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220854, downTime=1220854, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_RIGHT_BRACKET, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220858, downTime=1220858, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=4.0, y[0]=-1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1220862, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1220862, downTime=1220860, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220862, downTime=1220862, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_3, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220863, downTime=1220863, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220863, downTime=1220863, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220864, downTime=1220864, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_SHIFT_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220866, downTime=1220866, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1220866, downTime=1220866, deviceId=-1, source=0x101 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aaed130 attribute=android.view.inputmethod.EditorInfo@4acb9a98, token = android.os.BinderProxy@4ae8e550
W/SurfaceFlinger(  165): couldn't log to binary event log: overflow.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221115, downTime=1221115, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_PERIOD, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221121, downTime=1221121, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_FUNCTION, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221123, downTime=1221123, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=2.0, y[0]=-1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1221126, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1221126, downTime=1221124, deviceId=0, source=0x10004 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/ActivityManager(  470): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 6917
W/PhoneFallbackEventHandler( 6917): No activity found for android.intent.action.CALL_BUTTON.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/ViewRootImpl( 6917): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-1.0, y[0]=-2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1221232, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to root view being removed: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1221232, downTime=1221231, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1221232, downTime=1221231, deviceId=0, source=0x10004 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221246, downTime=1221246, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221276, downTime=1221276, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221279, downTime=1221279, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BACKSLASH, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221280, downTime=1221280, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221282, downTime=1221282, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221284, downTime=1221284, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_CHANNEL_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221286, downTime=1221286, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221287, downTime=1221287, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221289, downTime=1221289, deviceId=-1, source=0x101 }
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae606f0 attribute=null, token = android.os.BinderProxy@4ae8e550
D/dalvikvm(  470): GC_FOR_ALLOC freed 5040K, 48% free 17052K/32384K, paused 12ms, total 13ms
D/dalvikvm(  470): GC_CONCURRENT freed 247K, 48% free 17019K/32384K, paused 2ms+3ms, total 23ms
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ab8d44c attribute=android.view.inputmethod.EditorInfo@4acb849c, token = android.os.BinderProxy@4ae8e550
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221396, downTime=1221396, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_SWITCH_CHARSET, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221399, downTime=1221399, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221401, downTime=1221401, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_V, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221403, downTime=1221403, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221407, downTime=1221407, deviceId=-1, source=0x101 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa0eac0 attribute=android.view.inputmethod.EditorInfo@4aa0bf14, token = android.os.BinderProxy@4ae8e550
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221487, downTime=1221487, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_L2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221505, downTime=1221505, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_B, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221505, downTime=1221505, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BACK, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221505, downTime=1221505, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221506, downTime=1221506, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221508, downTime=1221508, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=3.0, y[0]=-3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1221510, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1221510, downTime=1221509, deviceId=0, source=0x10004 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/qtaguid (  746): Tagging socket 79 with tag 3000020000000000(805306880) for uid 10007 failed errno=-13
I/NetworkManagementSocketTagger(  746): tagSocketFd(79, 805306880, 10007) failed with errno-13
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_VOLUME_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221740, downTime=1221740, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9bcc88 attribute=android.view.inputmethod.EditorInfo@4b08b9e8, token = android.os.BinderProxy@4ae8e550
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_H, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221748, downTime=1221748, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221752, downTime=1221752, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221754, downTime=1221754, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221760, downTime=1221760, deviceId=-1, source=0x101 }
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_FOCUS, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221762, downTime=1221762, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221764, downTime=1221764, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221766, downTime=1221766, deviceId=-1, source=0x101 }
I/qtaguid (  746): Untagging socket 79 failed errno=-13
W/NetworkManagementSocketTagger(  746): untagSocket(79) failed with errno -13
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221768, downTime=1221768, deviceId=-1, source=0x101 }
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Initializing session...
W/InputManager(  470): Input event injection from pid 6907 failed.
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Clearing session and data...
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r4 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:9
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:9
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:12
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:2
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:14
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)	timediff:14
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r4 = virtualinvoke $r0.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>($r0, $r6)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r19 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r18, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r14 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r15 = virtualinvoke $r13.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r14)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r4 = virtualinvoke $r2.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r5 = virtualinvoke $r4.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$l1 = virtualinvoke $r2.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r6.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r7, $r1, 0, 0, $z0, null, null, null)	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r1 = virtualinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: okhttp3.Route nextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:14
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:14
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:4
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r13.<okhttp3.internal.http.RouteException: void <init>(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:29
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:31
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r2, "TLS_FALLBACK_SCSV")	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteException: void addSuppressedIfPossible(java.io.IOException,java.io.IOException)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:virtualinvoke $r13.<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:virtualinvoke $r11.<okhttp3.internal.RouteDatabase: void failed(okhttp3.Route)>($r1)	timediff:3
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:virtualinvoke $r5.<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>($r4, $r1)	timediff:3
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$r8 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>($r1)	timediff:4
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.RouteSelector: boolean hasNext()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>	sig:$z2 = virtualinvoke $r3.<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>($r1, $r2)	timediff:4
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r8, null)	timediff:5
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>	sig:virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>(null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r12 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r12.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.Call)>($r0)	timediff:0
E/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fa0410: Failure in SSL library, usually a protocol error
E/GreendotCorp( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000) Error executing request '3'
W/System.err( 6917): javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fa0410: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectTls(SourceFile:195)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectSocket(SourceFile:148)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connect(SourceFile:111)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findConnection(SourceFile:188)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findHealthyConnection(SourceFile:127)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.newStream(SourceFile:97)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.connect(SourceFile:289)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.sendRequest(SourceFile:241)
W/System.err( 6917): 	at okhttp3.RealCall.getResponse(SourceFile:240)
W/System.err( 6917): 	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(SourceFile:198)
W/System.err( 6917): 	at okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:160)
W/System.err( 6917): 	at okhttp3.RealCall.execute(SourceFile:57)
W/System.err( 6917): 	at com.greendotcorp.core.network.HttpClientGdcProvider.a(SourceFile:150)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider.a(SourceFile:3099)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider$1.run(SourceFile:213)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
W/System.err( 6917): 	at java.lang.Thread.run(Thread.java:841)
W/System.err( 6917): 	Suppressed: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fa0650: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		... 19 more
W/System.err( 6917): 	Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fa0650: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 		at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 		... 18 more
W/System.err( 6917): Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fa0410: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 	... 18 more
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1221996, downTime=1221996, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_R, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222005, downTime=1222005, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222006, downTime=1222006, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-1.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1222009, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1222010, downTime=1222008, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_N, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222010, downTime=1222010, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222014, downTime=1222014, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222016, downTime=1222016, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222019, downTime=1222019, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222021, downTime=1222021, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4abad2d0 attribute=null, token = android.os.BinderProxy@4ae8e550
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl( 6917): Dropping event due to root view being removed: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=520.0, y[0]=337.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1222078, downTime=1222078, deviceId=0, source=0x1002 }
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl( 6917): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=519.24786, y[0]=340.5592, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1222078, downTime=1222078, deviceId=0, source=0x1002 }
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aaf60d4 attribute=android.view.inputmethod.EditorInfo@4a9a8704, token = android.os.BinderProxy@4ae8e550
D/dalvikvm( 6917): GC_CONCURRENT freed 2116K, 23% free 7419K/9600K, paused 2ms+1ms, total 8ms
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222116, downTime=1222116, deviceId=-1, source=0x101 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222128, downTime=1222128, deviceId=-1, source=0x101 }
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a92ee78 attribute=android.view.inputmethod.EditorInfo@4ac995a4, token = android.os.BinderProxy@4ae8e550
W/SurfaceFlinger(  165): couldn't log to binary event log: overflow.
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_PROG_BLUE, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222269, downTime=1222269, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_ZOOM_OUT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222272, downTime=1222272, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222275, downTime=1222275, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222276, downTime=1222276, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222276, downTime=1222276, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_VOLUME_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222277, downTime=1222277, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222279, downTime=1222279, deviceId=-1, source=0x101 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ab004d4 attribute=null, token = android.os.BinderProxy@4ae8e550
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Exiting the whole application
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Clearing session and data...
D/FirebaseApp( 6059): Notifying background state change listeners.
W/Launcher( 6059): setApplicationContext called twice! old=com.vphone.launcher.LauncherApplicationEx@4a7b2304 new=com.vphone.launcher.LauncherApplicationEx@4a7b2304
W/ResourceType( 6059): Attempt to retrieve bag 0x7f0b0001 which is invalid or in a cycle.
D/Launcher( 6059): 11683562 - bindAddScreens()
D/Launcher( 6059): 11683562 -   orderedScreenIds: 1
D/Launcher.Workspace( 6059): 11683562 - insertNewWorkspaceScreen(): 1 at index: 0
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.startService:1492 android.content.ContextWrapper.startService:494 com.vphone.launcher.Launcher.h:664 com.vphone.launcher.Launcher.b:180 com.vphone.launcher.Launcher$11.run:646 
D/Sensors (  470): Client connection accepted (195)
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm( 6059): GC_FOR_ALLOC freed 1605K, 5% free 66239K/69276K, paused 12ms, total 12ms
W/ViewRootImpl( 6059): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=3.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1222639, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222639, downTime=1222639, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222679, downTime=1222679, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222682, downTime=1222682, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222685, downTime=1222685, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222688, downTime=1222688, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_11, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222689, downTime=1222689, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222689, downTime=1222689, deviceId=-1, source=0x101 }
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_GRAVE, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222695, downTime=1222695, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_W, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222704, downTime=1222704, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=3.0, y[0]=3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1222707, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1222707, downTime=1222706, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222708, downTime=1222708, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222712, downTime=1222712, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222713, downTime=1222713, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_F5, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222714, downTime=1222714, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1222730, downTime=1222730, deviceId=-1, source=0x101 }
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.vphone.helper/.MainActivity bnds=[572,388][713,618] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
V/PanelView(  556): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.android.contacts/.activities.PeopleActivity bnds=[290,388][431,618] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.android.browser/.BrowserActivity bnds=[8,388][149,618] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
E/SurfaceFlinger(  165): glCheckFramebufferStatusOES error 36054
E/SurfaceFlinger(  165): got GL_FRAMEBUFFER_COMPLETE_OES error while taking screenshot
D/SurfaceFlinger(  165): setOrientation, mFbdev=0xb8e13050, mFbDev->setOrientation=0xb694cce0, orientation=0
I/gralloc_nox(  165): setOrientation: orientation=0
I/ActivityManager(  470): Config changes=480 {1.0 310mcc16mnc ja_US ldltr sw480dp w853dp h454dp 240dpi lrg long land finger qwerty/v/v dpad/v s.38}
D/Sensors (  470): Client connection accepted (191)
I/InputReader(  470): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  470): Device reconfigured: id=1, name='seamless mouse', size 1280x720, orientation 0, mode 1, display id 0
I/InputReader(  470): Device reconfigured: id=3, name='Android Input', size 1280x720, orientation 0, mode 1, display id 0
I/InputReader(  470): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  470): Device reconfigured: id=8, name='VirtualBox USB Tablet', size 1280x720, orientation 0, mode 1, display id 0
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/SurfaceFlinger(  165): couldn't log to binary event log: overflow.
I/ActivityManager(  470): START u0 {cmp=com.vphone.launcher/.game.GpLoadingActivity (has extras)} from pid 6059
I/PlayCommon(  920): [54] com.google.android.play.b.h.e(263): Preparing logs for uploading
W/PlayCommon(  920): [54] com.google.android.play.b.h.a(675): No account for auth token provided
I/PlayCommon(  920): [54] com.google.android.play.b.h.a(522): Connecting to server: https://play.googleapis.com/play/log?format=raw&proto_v2=true
I/PlayCommon(  920): [54] com.google.android.play.b.h.a(579): Successfully uploaded logs.
W/WindowManager(  470): Window freeze timeout expired.
W/WindowManager(  470): Force clearing orientation change: Window{4a9639a4 u0 StatusBar}
W/WindowManager(  470): Force clearing orientation change: Window{4ac62494 u0 Toast}
W/WindowManager(  470): Force clearing orientation change: Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}
W/WindowManager(  470): Force clearing orientation change: Window{4a997784 u0 com.android.systemui.ImageWallpaper}
I/WindowManager(  470): Screen frozen for +2s20ms due to Window{4a9639a4 u0 StatusBar}
W/ActivityManager(  470): Launch timeout has expired, giving up wake lock!
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/ActivityManager(  470): Activity destroy timeout for ActivityRecord{4aaa0c34 u0 com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity t42 f}
I/Choreographer(  556): Skipped 1215 frames!  The application may be doing too much work on its main thread.
I/InputDispatcher(  470): Dropped event because it is stale.
I/InputDispatcher(  470): Dropped event because it is stale.
I/InputDispatcher(  470): Dropped event because it is stale.
I/InputDispatcher(  470): Dropped event because it is stale.
W/InputManager(  470): Input event injection from pid 6907 failed.
I/InputDispatcher(  470): Application is not responding: AppWindowToken{4a9809a0 token=Token{4a97fec0 ActivityRecord{4a97fd84 u0 com.vphone.launcher/.Launcher t1}}} - Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}.  It has been 5006.7ms since event, 5005.6ms since wait started.  Reason: Waiting because the focused window has not finished processing the input events that were previously delivered to it.
W/SurfaceFlinger(  165): setTransactionState timed out waiting for previous animation frame
I/Choreographer(  470): Skipped 299 frames!  The application may be doing too much work on its main thread.
D/Tinker.DefaultAppLike( 6059): onConfigurationChanged:{1.0 310mcc16mnc ja_US ldltr sw480dp w853dp h454dp 240dpi lrg long land finger qwerty/v/v dpad/v s.38}
D/yeshen  ( 6059): launcher onpause
D/yeshen  ( 6059): launcher onstop
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25357.7ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (-2.0, -3.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25357.6ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (0.0, 1.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25357.5ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (1.0, -1.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25357.4ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (-1.0, -4.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25357.3ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (2.0, 2.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25357.1ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (-3.0, 3.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25356.9ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (-1.0, -5.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25356.7ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (4.0, -3.0)]), policyFlags=0x4b000000
I/InputDispatcher(  470): Window 'Window{4aa9da3c u0 com.vphone.launcher/com.vphone.launcher.Launcher}' spent 25356.5ms processing the last input event: MotionEvent(deviceId=0, source=0x00010004, action=2, flags=0x00000000, metaState=0x00000000, buttonState=0x00000000, edgeFlags=0x00000000, xPrecision=1.0, yPrecision=1.0, displayId=0, pointers=[0: (3.0, 1.0)]), policyFlags=0x4b000000
I/WindowManager(  470): Input event dispatching timed out sending to com.vphone.launcher/com.vphone.launcher.Launcher.  Reason: Waiting because the focused window has not finished processing the input events that were previously delivered to it.
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/Launcher( 6059): setApplicationContext called twice! old=com.vphone.launcher.LauncherApplicationEx@4a7b2304 new=com.vphone.launcher.LauncherApplicationEx@4a7b2304
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
I/ActivityManager(  470): Skipping duplicate ANR: ProcessRecord{4aa8fb58 6059:com.vphone.launcher/1000} Input dispatching timed out (Waiting because the focused window has not finished processing the input events that were previously delivered to it.)
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.hideSoftInput:1843 com.android.internal.view.IInputMethodManager$Stub.onTransact:194 com.android.server.InputMethodManagerService.onTransact:818 
D/PhoneStatusBar(  556): mSettingsPanelGravity = 55
W/ResourceType( 6059): Attempt to retrieve bag 0x7f0b0001 which is invalid or in a cycle.
D/Launcher( 6059): 11683562 - bindAddScreens()
D/Launcher( 6059): 11683562 -   orderedScreenIds: 1
D/Launcher.Workspace( 6059): 11683562 - insertNewWorkspaceScreen(): 1 at index: 0
D/dalvikvm(  556): GC_FOR_ALLOC freed 8890K, 53% free 9327K/19764K, paused 56ms, total 61ms
I/dalvikvm-heap(  556): Grow heap (frag case) to 15.419MB for 6553612-byte allocation
D/dalvikvm(  556): GC_CONCURRENT freed 8K, 21% free 15718K/19764K, paused 2ms+0ms, total 5ms
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.startService:1492 android.content.ContextWrapper.startService:494 com.vphone.launcher.Launcher.h:664 com.vphone.launcher.Launcher.b:180 com.vphone.launcher.Launcher$11.run:646 
W/EGL_emulation(  556): eglSurfaceAttrib not implemented 3093 12436
I/Choreographer( 6059): Skipped 1528 frames!  The application may be doing too much work on its main thread.
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
W/EGL_emulation( 6059): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1248393, downTime=1248393, deviceId=-1, source=0x101 }
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/ViewRootImpl( 6059): Dropping event due to root view being removed: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1248379, downTime=1248379, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to root view being removed: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1248379, downTime=1248379, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to root view being removed: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1248379, downTime=1248379, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to root view being removed: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1248379, downTime=1248379, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to root view being removed: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1248379, downTime=1248379, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to root view being removed: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1248379, downTime=1248379, deviceId=-1, source=0x101 }
D/dalvikvm( 6059): GC_CONCURRENT freed 4567K, 7% free 69751K/74384K, paused 1ms+3ms, total 21ms
D/dalvikvm( 6059): WAIT_FOR_CONCURRENT_GC blocked 14ms
I/qtaguid ( 6059): Untagging socket 67 failed errno=-13
W/ViewRootImpl( 6059): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=3.0, y[0]=1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=29, eventTime=1248656, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1248656, downTime=1248656, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1248699, downTime=1248699, deviceId=-1, source=0x101 }
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/ViewRootImpl( 6059): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1248703, downTime=1248703, deviceId=-1, source=0x101 }
W/PropertyValuesHolder( 6059): Method setBrightness() with type int not found on target class class ml
W/PropertyValuesHolder( 6059): Method getBrightness() with type int not found on target class class ml
W/NetworkManagementSocketTagger( 6059): untagSocket(67) failed with errno -13
I/qtaguid ( 6059): Tagging socket 67 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger( 6059): tagSocketFd(67, 1239581248, -1) failed with errno-13
I/qtaguid ( 6059): Tagging socket 105 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger( 6059): tagSocketFd(105, 1239581248, -1) failed with errno-13
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
E/FastMixer(  168): did not receive expected priority boost
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10051, 0) failed with errno -13
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.android.camera/.Camera bnds=[742,174][946,301] (has extras)} from pid 6059
W/ContextImpl( 6059): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3163 com.vphone.launcher.Launcher.onClickAppShortcut:3115 
W/Launcher( 6059): No global search activity found.
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
I/InputDispatcher(  470): Dropped event because of pending overdue app switch.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
D/yeshen  ( 6059): launcher onpause
E/SurfaceFlinger(  165): glCheckFramebufferStatusOES error 36054
E/SurfaceFlinger(  165): got GL_FRAMEBUFFER_COMPLETE_OES error while taking screenshot
D/SurfaceFlinger(  165): setOrientation, mFbdev=0xb8e13050, mFbDev->setOrientation=0xb694cce0, orientation=3
I/gralloc_nox(  165): setOrientation: orientation=3
I/ActivityManager(  470): Config changes=480 {1.0 310mcc16mnc ja_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.39}
D/Sensors (  470): Client connection accepted (191)
D/PhoneStatusBar(  556): mSettingsPanelGravity = 55
W/NetworkManagementSocketTagger(  470): setKernelCountSet(10051, 1) failed with errno -13
I/InputReader(  470): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  470): Device reconfigured: id=1, name='seamless mouse', size 1280x720, orientation 3, mode 1, display id 0
I/InputReader(  470): Device reconfigured: id=3, name='Android Input', size 1280x720, orientation 3, mode 1, display id 0
I/InputReader(  470): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  470): Device reconfigured: id=8, name='VirtualBox USB Tablet', size 1280x720, orientation 3, mode 1, display id 0
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] A fresh start of Root Activity
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Go to pre-login screen
I/ActivityManager(  470): START u0 {flg=0x4000000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity} from pid 6917
D/dalvikvm(  556): GC_FOR_ALLOC freed 6511K, 53% free 9321K/19764K, paused 8ms, total 11ms
I/dalvikvm-heap(  556): Grow heap (frag case) to 15.414MB for 6553612-byte allocation
D/dalvikvm(  556): GC_CONCURRENT freed 3K, 21% free 15717K/19764K, paused 1ms+0ms, total 5ms
W/SurfaceFlinger(  165): setTransactionState timed out waiting for previous animation frame
W/ActivityManager(  470): Launch timeout has expired, giving up wake lock!
W/WindowManager(  470): Window freeze timeout expired.
W/WindowManager(  470): Force clearing orientation change: Window{4a9639a4 u0 StatusBar}
W/WindowManager(  470): Force clearing orientation change: Window{4a997784 u0 com.android.systemui.ImageWallpaper}
W/WindowManager(  470): App freeze timeout expired.
E/WindowManager(  470): Starting window AppWindowToken{4aa7f350 token=Token{4ab102dc ActivityRecord{4ab1022c u0 com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity t43}}} timed out
D/Tinker.DefaultAppLike( 6059): onConfigurationChanged:{1.0 310mcc16mnc ja_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.39}
I/Choreographer( 6059): Skipped 603 frames!  The application may be doing too much work on its main thread.
I/WindowManager(  470): Screen frozen for +10s131ms due to Window{4a9639a4 u0 StatusBar}
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Initializing session...
I/InputDispatcher(  470): Dropped event because it is stale.
W/InputManager(  470): Input event injection from pid 6907 failed.
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Clearing session and data...
I/Choreographer(  556): Skipped 607 frames!  The application may be doing too much work on its main thread.
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r4 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)	timediff:1
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r4 = virtualinvoke $r0.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>($r0, $r6)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r19 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r18, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=4.0, y[0]=-2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=17, eventTime=1259089, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1259090, downTime=1259081, deviceId=0, source=0x10004 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1259090, downTime=1259090, deviceId=-1, source=0x101 }
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1259095, downTime=1259095, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_F1, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1259096, downTime=1259096, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1259098, downTime=1259098, deviceId=-1, source=0x101 }
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r14 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:1
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r15 = virtualinvoke $r13.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r14)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r4 = virtualinvoke $r2.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r5 = virtualinvoke $r4.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r5)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$l1 = virtualinvoke $r2.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r5)	timediff:1
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:2
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:2
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:5
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:5
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:5
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:3
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:3
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:7
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:7
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:3
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:4
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:6
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:6
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:6
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r6.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r7, $r1, 0, 0, $z0, null, null, null)	timediff:13
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r4, 0)	timediff:2
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:6
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r1 = virtualinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:75
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:75
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:75
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:75
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:75
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:5
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:5
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r13.<okhttp3.internal.http.RouteException: void <init>(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:5
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:5
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 2759K, 37% free 6058K/9600K, paused 1ms+1ms, total 6ms
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:2
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r2, "TLS_FALLBACK_SCSV")	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:1
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:4
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:1
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteException: void addSuppressedIfPossible(java.io.IOException,java.io.IOException)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:virtualinvoke $r13.<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:virtualinvoke $r11.<okhttp3.internal.RouteDatabase: void failed(okhttp3.Route)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:virtualinvoke $r5.<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>($r4, $r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$r8 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.RouteSelector: boolean hasNext()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>	sig:$z2 = virtualinvoke $r3.<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>($r1, $r2)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r8, null)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>	sig:virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>(null)	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r12 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r12.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.Call)>($r0)	timediff:0
E/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f88e30: Failure in SSL library, usually a protocol error
E/GreendotCorp( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000) Error executing request '4'
W/System.err( 6917): javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f88e30: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectTls(SourceFile:195)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectSocket(SourceFile:148)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connect(SourceFile:111)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findConnection(SourceFile:188)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findHealthyConnection(SourceFile:127)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.newStream(SourceFile:97)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.connect(SourceFile:289)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.sendRequest(SourceFile:241)
W/System.err( 6917): 	at okhttp3.RealCall.getResponse(SourceFile:240)
W/System.err( 6917): 	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(SourceFile:198)
W/System.err( 6917): 	at okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:160)
W/System.err( 6917): 	at okhttp3.RealCall.execute(SourceFile:57)
W/System.err( 6917): 	at com.greendotcorp.core.network.HttpClientGdcProvider.a(SourceFile:150)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider.a(SourceFile:3099)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider$1.run(SourceFile:213)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
W/System.err( 6917): 	at java.lang.Thread.run(Thread.java:841)
W/System.err( 6917): 	Suppressed: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fad9b0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		... 19 more
W/System.err( 6917): 	Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fad9b0: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 		at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 		... 18 more
W/System.err( 6917): Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8f88e30: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 	... 18 more
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
I/InputDispatcher(  470): Application is not responding: AppWindowToken{4ac83bb0 token=Token{4ac9a238 ActivityRecord{4aaf72d4 u0 com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity t43}}} - Window{4aae9110 u0 com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity}.  It has been 5007.1ms since event, 5006.0ms since wait started.  Reason: Waiting because the focused window has not finished processing the input events that were previously delivered to it.
W/SurfaceFlinger(  165): setTransactionState timed out waiting for previous animation frame
I/Choreographer(  470): Skipped 299 frames!  The application may be doing too much work on its main thread.
D/dalvikvm( 6059): GC_FOR_ALLOC freed 4766K, 8% free 71645K/77268K, paused 11ms, total 11ms
D/dalvikvm( 6059): GC_FOR_ALLOC freed 394K, 5% free 75392K/79140K, paused 22ms, total 23ms
W/SurfaceFlinger(  165): setTransactionState timed out waiting for previous animation frame
I/InputDispatcher(  470): Dropped event because it is stale.
I/WindowManager(  470): Input event dispatching timed out sending to com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity.  Reason: Waiting because the focused window has not finished processing the input events that were previously delivered to it.
W/InputManager(  470): Input event injection from pid 6907 failed.
I/Process (  470): Sending signal. PID: 6917 SIG: 3
I/dalvikvm( 6917): threadid=3: reacting to signal 3
W/EGL_emulation(  556): eglSurfaceAttrib not implemented 3093 12436
I/Choreographer(  556): Skipped 622 frames!  The application may be doing too much work on its main thread.
D/dalvikvm(  470): GC_EXPLICIT freed 3133K, 48% free 16882K/32384K, paused 0ms+2ms, total 129ms
I/dalvikvm( 6917): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  470): Sending signal. PID: 470 SIG: 3
I/dalvikvm(  470): threadid=3: reacting to signal 3
I/dalvikvm(  470): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  470): Sending signal. PID: 680 SIG: 3
I/dalvikvm(  680): threadid=3: reacting to signal 3
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/dalvikvm(  680): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  470): Sending signal. PID: 556 SIG: 3
I/dalvikvm(  556): threadid=3: reacting to signal 3
I/dalvikvm(  556): Wrote stack traces to '/data/anr/traces.txt'
D/dalvikvm( 6917): GC_FOR_ALLOC freed 279K, 32% free 6602K/9596K, paused 5ms, total 6ms
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/InputDispatcher(  470): Window 'Window{4aae9110 u0 com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity}' spent 10542.8ms processing the last input event: KeyEvent(deviceId=-1, source=0x00000101, action=0, flags=0x00000008, keyCode=82, scanCode=0, metaState=0x00000000, repeatCount=0), policyFlags=0x4b000000
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1259104, downTime=1259104, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269438, downTime=1269438, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269648, downTime=1269648, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269648, downTime=1269648, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269649, downTime=1269649, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_SUBTRACT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269651, downTime=1269651, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269652, downTime=1269652, deviceId=-1, source=0x101 }
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
D/dalvikvm(  470): GC_EXPLICIT freed 963K, 49% free 16816K/32384K, paused 1ms+2ms, total 21ms
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269680, downTime=1269680, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269888, downTime=1269888, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269889, downTime=1269889, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_F3, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269893, downTime=1269893, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269894, downTime=1269894, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269895, downTime=1269895, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_J, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269896, downTime=1269896, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269896, downTime=1269896, deviceId=-1, source=0x101 }
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cardinalcommerce.greendot/com.greendotcorp.core.activity.RootActivity} from pid 6907
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269897, downTime=1269897, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269898, downTime=1269898, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=0.0, y[0]=3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=19, eventTime=1269680, downTime=-1, deviceId=0, source=0x10004 }
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
W/IInputConnectionWrapper( 6059): showStatusIcon on inactive InputConnection
W/ContextImpl(  470): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
E/FastMixer(  168): did not receive expected priority boost
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Initializing session...
I/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] Clearing session and data...
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r4 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1269903, downTime=1269903, deviceId=-1, source=0x101 }
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:8
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:9
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)	timediff:9
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r4 = virtualinvoke $r0.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>($r0, $r6)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r19 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r18, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:1
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r19)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:1
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(java.util.List,okhttp3.Request$Builder)>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r14 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6917): body:<com.greendotcorp.core.network.HttpClientGdcProvider: void a(com.greendotcorp.core.network.packets.GdcPacket)>	sig:$r15 = virtualinvoke $r13.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r14)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r4 = virtualinvoke $r2.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r5 = virtualinvoke $r4.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$l1 = virtualinvoke $r2.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:10
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:11
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6917): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r6.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r7, $r1, 0, 0, $z0, null, null, null)	timediff:11
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r4, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
D/dalvikvm( 6917): GC_CONCURRENT freed 395K, 23% free 7461K/9596K, paused 2ms+5ms, total 14ms
D/dalvikvm( 6917): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6917): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:6
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:7
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6917): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r1 = virtualinvoke $r3.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:2
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: okhttp3.Route nextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r1, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:11
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:11
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r13.<okhttp3.internal.http.RouteException: void <init>(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r18 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void setOption(int,java.lang.Object)>	sig:virtualinvoke $r2.<java.net.SocketImpl: void setOption(int,java.lang.Object)>($i0, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:7
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r5.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r2, $r6, $i0)	timediff:7
I/System.out( 6917): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6917): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r2.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6917): body:<a.a.d: void <init>(a.a.ep,a.a.dr,java.net.SocketImpl)>	sig:specialinvoke $r0.<java.net.SocketImpl: void <init>()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r2, "TLS_FALLBACK_SCSV")	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6917): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:1
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
I/System.out( 6917): body:<a.a.d: java.lang.Object getOption(int)>	sig:$r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>($i0)	timediff:0
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r4)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r16)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteException: void addSuppressedIfPossible(java.io.IOException,java.io.IOException)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:virtualinvoke $r13.<okhttp3.internal.http.RouteException: void addConnectException(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r4.<okhttp3.internal.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)>($r19)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6917): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.Address: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6)	timediff:0
I/System.out( 6917): body:<okhttp3.Route: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:virtualinvoke $r11.<okhttp3.internal.RouteDatabase: void failed(okhttp3.Route)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:virtualinvoke $r5.<okhttp3.internal.http.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>($r4, $r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out( 6917): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$r8 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r8)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>($r1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.RouteSelector: boolean hasNext()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>	sig:$z2 = virtualinvoke $r3.<okhttp3.internal.http.StreamAllocation: boolean recover(java.io.IOException,okio.Sink)>($r1, $r2)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r8, null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r8 = virtualinvoke $r13.<okhttp3.internal.http.RouteException: java.io.IOException getLastConnectException()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(1, 0, 1)	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>	sig:virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: void connectionFailed(java.io.IOException)>(null)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r12 = virtualinvoke $r6.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.StreamAllocation close()>()	timediff:0
I/System.out( 6917): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r12.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6917): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.Call)>($r0)	timediff:0
E/GreendotCorp( 6917): [D0-H1-P-B24][828703dd-e56e-45d6-b406-a9c3a192a2c5] javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fd3c30: Failure in SSL library, usually a protocol error
E/GreendotCorp( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000) Error executing request '5'
W/System.err( 6917): javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fd3c30: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectTls(SourceFile:195)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connectSocket(SourceFile:148)
W/System.err( 6917): 	at okhttp3.internal.io.RealConnection.connect(SourceFile:111)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findConnection(SourceFile:188)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.findHealthyConnection(SourceFile:127)
W/System.err( 6917): 	at okhttp3.internal.http.StreamAllocation.newStream(SourceFile:97)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.connect(SourceFile:289)
W/System.err( 6917): 	at okhttp3.internal.http.HttpEngine.sendRequest(SourceFile:241)
W/System.err( 6917): 	at okhttp3.RealCall.getResponse(SourceFile:240)
W/System.err( 6917): 	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(SourceFile:198)
W/System.err( 6917): 	at okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:160)
W/System.err( 6917): 	at okhttp3.RealCall.execute(SourceFile:57)
W/System.err( 6917): 	at com.greendotcorp.core.network.HttpClientGdcProvider.a(SourceFile:150)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider.a(SourceFile:3099)
W/System.err( 6917): 	at com.greendotcorp.core.network.NetworkProvider$1.run(SourceFile:213)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
W/System.err( 6917): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
W/System.err( 6917): 	at java.lang.Thread.run(Thread.java:841)
W/System.err( 6917): 	Suppressed: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fd3c30: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		... 19 more
W/System.err( 6917): 	Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fd3c30: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 		at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 		at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 		... 18 more
W/System.err( 6917): Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb8fd3c30: Failure in SSL library, usually a protocol error
W/System.err( 6917): error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x83bce770:0x00000000)
W/System.err( 6917): 	at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
W/System.err( 6917): 	at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)
W/System.err( 6917): 	... 18 more
I/ActivityManager(  470): Displayed com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity: +21s87ms (total +21s165ms)
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputManager(  470): Input event injection from pid 6907 failed.
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1270107, downTime=1270107, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1270114, downTime=1270114, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_SEMICOLON, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1270115, downTime=1270115, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1270115, downTime=1270115, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6917): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1270116, downTime=1270116, deviceId=-1, source=0x101 }
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 470
W/EGL_emulation( 6917): eglSurfaceAttrib not implemented 3093 12436
I/ActivityManager(  470): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_MUSIC]}} from pid 470
W/InputEventReceiver( 6917): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputMethodManagerService(  470): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa5dfdc attribute=android.view.inputmethod.EditorInfo@4ac9a1ac, token = android.os.BinderProxy@4aa816a8
I/Process (  470): Sending signal. PID: 6059 SIG: 3
I/dalvikvm( 6059): threadid=3: reacting to signal 3
W/SurfaceFlinger(  165): couldn't log to binary event log: overflow.
I/dalvikvm( 6059): Wrote stack traces to '/data/anr/traces.txt'
E/ActivityManager(  470): ANR in com.cardinalcommerce.greendot (com.cardinalcommerce.greendot/com.greendotcorp.core.activity.prelogin.PreLoginWelcomeActivity)
E/ActivityManager(  470): PID: 6917
E/ActivityManager(  470): Reason: Input dispatching timed out (Waiting because the focused window has not finished processing the input events that were previously delivered to it.)
E/ActivityManager(  470): Load: 3.45 / 2.71 / 2.0
E/ActivityManager(  470): CPU usage from 5565ms to 0ms ago:
E/ActivityManager(  470):   2.3% 6059/com.vphone.launcher: 2.3% user + 0% kernel / faults: 1042 minor
E/ActivityManager(  470):   0.3% 470/system_server: 0.3% user + 0% kernel / faults: 155 minor
E/ActivityManager(  470):   0.1% 6917/com.cardinalcommerce.greendot: 0% user + 0.1% kernel / faults: 3 minor
E/ActivityManager(  470): 2.7% TOTAL: 2.7% user + 0% kernel
E/ActivityManager(  470): CPU usage from 402ms to 905ms later:
E/ActivityManager(  470):   20% 470/system_server: 16% user + 4% kernel / faults: 249 minor
E/ActivityManager(  470):     4% 496/InputDispatcher: 4% user + 0% kernel
E/ActivityManager(  470):     2% 470/system_server: 2% user + 0% kernel
E/ActivityManager(  470):     2% 479/Binder_1: 0% user + 2% kernel
E/ActivityManager(  470):     2% 482/WindowManager: 2% user + 0% kernel
E/ActivityManager(  470):     2% 487/android.ui: 0% user + 2% kernel
E/ActivityManager(  470):     2% 512/AudioService: 2% user + 0% kernel
E/ActivityManager(  470):     2% 614/Binder_4: 2% user + 0% kernel
E/ActivityManager(  470):     2% 880/Binder_6: 2% user + 0% kernel
E/ActivityManager(  470):     2% 1387/Binder_9: 2% user + 0% kernel
E/ActivityManager(  470):     2% 1388/Binder_A: 2% user + 0% kernel
E/ActivityManager(  470):     2% 1446/Binder_D: 2% user + 0% kernel
E/ActivityManager(  470):     2% 1987/Binder_10: 2% user + 0% kernel
E/ActivityManager(  470):    +0% 7065/AudioTrack: 0% user + 0% kernel
E/ActivityManager(  470):    +0% 7067/AudioTrack: 0% user + 0% kernel
E/ActivityManager(  470):    +0% 7069/AudioTrack: 0% user + 0% kernel
E/ActivityManager(  470):    +0% 7070/AudioTrack: 0% user + 0% kernel
E/ActivityManager(  470):   15% 6917/com.cardinalcommerce.greendot: 7.5% user + 7.5% kernel / faults: 94 minor
E/ActivityManager(  470):     11% 6917/mmerce.greendot: 5.6% user + 5.6% kernel
E/ActivityManager(  470):     1.8% 6920/GC: 1.8% user + 0% kernel
E/ActivityManager(  470):     1.8% 6991/pool-2-thread-2: 0% user + 1.8% kernel
E/ActivityManager(  470):   5.4% 165/surfaceflinger: 0% user + 5.4% kernel / faults: 105 minor
E/ActivityManager(  470):     3.6% 165/surfaceflinger: 0% user + 3.6% kernel
E/ActivityManager(  470):   5.6% 6905/logcat: 0% user + 5.6% kernel / faults: 108 minor
E/ActivityManager(  470):   3.7% 6907/com.android.commands.monkey: 1.8% user + 1.8% kernel / faults: 22 minor
E/ActivityManager(  470):     1.8% 6907/commands.monkey: 0% user + 1.8% kernel
E/ActivityManager(  470):   1.8% 1//init: 1.8% user + 0% kernel
E/ActivityManager(  470):   1.8% 70/adbd: 0% user + 1.8% kernel
E/ActivityManager(  470):   1.8% 168/mediaserver: 0% user + 1.8% kernel / faults: 2 minor
E/ActivityManager(  470):     1.8% 549/FastMixer: 0% user + 1.8% kernel
E/ActivityManager(  470):   1.8% 556/com.android.systemui: 1.8% user + 0% kernel / faults: 371 minor
E/ActivityManager(  470):   1.8% 6059/com.vphone.launcher: 0% user + 1.8% kernel
E/ActivityManager(  470): 55% TOTAL: 27% user + 25% kernel + 2.1% softirq
D/yeshen  ( 6059): launcher onstop
W/DebugConnManager( 6059): getNetworkInfo() on networkType 1
W/SurfaceFlinger(  165): couldn't log to binary event log: overflow.
I/AndroidRuntime( 6907): VM exiting with result code 2611.
