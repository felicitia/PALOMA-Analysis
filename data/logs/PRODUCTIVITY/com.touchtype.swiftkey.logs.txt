--------- beginning of /dev/log/main
I/Icing   (  788): Indexing F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0 from com.google.android.gms
I/Icing   (  788): Indexing done F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0
D/AndroidRuntime(10376): 
D/AndroidRuntime(10376): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime(10376): CheckJNI is OFF
D/dalvikvm(10376): Using executionMode 2
D/dalvikvm(10376): Trying to load lib libjavacore.so 0x0
D/dalvikvm(10376): Added shared lib libjavacore.so 0x0
D/dalvikvm(10376): Trying to load lib libnativehelper.so 0x0
D/dalvikvm(10376): Added shared lib libnativehelper.so 0x0
D/dalvikvm(10376): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm(10376): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack(10376): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug(10376): failed to load memtrack module: -2
D/AndroidRuntime(10376): Calling main entry com.android.commands.monkey.Monkey
--------- beginning of /dev/log/system
W/BroadcastQueue(  496): Skipping deliver [background] BroadcastRecord{4b200418 u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4aaf1a4c 10376 (unknown name)/0/u-1 remote:4af4dc44}: process crashing
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): Start proc com.touchtype.swiftkey for activity com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon: pid=10386 uid=10046 gids={50046, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  496): setKernelCountSet(10046, 1) failed with errno -13
I/dalvikvm(10386): ignoring registerObject request in thread=1
I/dalvikvm(10386): ignoring registerObject request in thread=1
I/Finsky  ( 1107): [1] com.google.android.finsky.cg.a.onTrimMemory(5): Memory trim requested to level 20
I/Finsky  ( 1107): [1] com.google.android.finsky.cg.a.onTrimMemory(11): Flushing in-memory image cache
W/NetworkManagementSocketTagger(  496): setKernelCountSet(10012, 0) failed with errno -13
I/Crashlytics(10386): Initializing Crashlytics 1.1.10.12
D/dalvikvm(10386): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(10386): GC_CONCURRENT freed 293K, 11% free 2973K/3332K, paused 1ms+1ms, total 5ms
W/dalvikvm(10386): VFY: unable to find class referenced in signature (Lokhttp3/Request;)
W/dalvikvm(10386): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10386): Could not find method okhttp3.Response.headers, referenced from method empirical.HelperClass.printOkHttpInfo
W/dalvikvm(10386): VFY: unable to resolve virtual method 51833: Lokhttp3/Response;.headers ()Lokhttp3/Headers;
D/dalvikvm(10386): VFY: replacing opcode 0x6e at 0x0006
W/dalvikvm(10386): VFY: unable to find class referenced in signature (Lokhttp3/Call;)
W/dalvikvm(10386): VFY: unable to find class referenced in signature (Lokhttp3/Response;)
I/dalvikvm(10386): Could not find method okhttp3.Call.request, referenced from method empirical.HelperClass.printOkHttpInfoFromCall
W/dalvikvm(10386): VFY: unable to resolve interface method 51827: Lokhttp3/Call;.request ()Lokhttp3/Request;
D/dalvikvm(10386): VFY: replacing opcode 0x72 at 0x0006
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10386): <com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.touchtype.swiftkey/settings?instance=449ad307fde65cbe391f09ffb0f2b8893393de86&source=1&build_version=814220178&icon_hash=07a00294bb7c5590cbdea8eaaa59b527e7d5c673&display_version=6.4.8.57
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10386): <com.a.a.a.bu: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.touchtype.swiftkey/settings?instance=449ad307fde65cbe391f09ffb0f2b8893393de86&source=1&build_version=814220178&icon_hash=07a00294bb7c5590cbdea8eaaa59b527e7d5c673&display_version=6.4.8.57
D/dalvikvm(10386): GC_CONCURRENT freed 254K, 9% free 3148K/3460K, paused 2ms+0ms, total 4ms
I/System.out(10386): body:<com.a.a.a.aa: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:29
I/System.out(10386): body:<com.a.a.a.bu: java.net.HttpURLConnection e()>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r4)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(10386): GC_CONCURRENT freed 305K, 10% free 3261K/3624K, paused 2ms+2ms, total 7ms
E/ActivityThread(10386): Failed to find provider info for com.swiftkey.swiftkeyconfigurator
I/ActivityManager(  496): START u0 {flg=0x10000000 cmp=com.touchtype.swiftkey/com.touchtype.installer.core.InstallerActivity} from pid 10386
D/dalvikvm(10386): DexOpt: couldn't find static field Landroid/util/DisplayMetrics;.DENSITY_DEVICE_STABLE
W/dalvikvm(10386): VFY: unable to resolve static field 6791 (DENSITY_DEVICE_STABLE) in Landroid/util/DisplayMetrics;
D/dalvikvm(10386): VFY: replacing opcode 0x60 at 0x000a
I/dalvikvm(10386): Could not find method android.content.res.Configuration.getLocales, referenced from method com.touchtype.util.android.e.n
W/dalvikvm(10386): VFY: unable to resolve virtual method 678: Landroid/content/res/Configuration;.getLocales ()Landroid/os/LocaleList;
D/dalvikvm(10386): VFY: replacing opcode 0x6e at 0x0008
D/dalvikvm(10386): DexOpt: couldn't find static field Landroid/util/DisplayMetrics;.DENSITY_DEVICE_STABLE
I/dalvikvm(10386): DexOpt: unable to optimize static field ref 0x1a87 at 0x0f in Lcom/touchtype/util/android/e;.a
I/dalvikvm(10386): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.o.a
W/dalvikvm(10386): VFY: unable to resolve virtual method 649: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(10386): VFY: replacing opcode 0x6e at 0x001a
D/dalvikvm(10386): GC_CONCURRENT freed 316K, 10% free 3382K/3756K, paused 1ms+1ms, total 6ms
D/dalvikvm(10386): GC_CONCURRENT freed 364K, 12% free 3405K/3828K, paused 1ms+0ms, total 4ms
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String a(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:334
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String d(java.lang.String)>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>("Content-Length", -1)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.io.InputStream f()>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): URLConn;%;0;%;<com.a.a.a.bu: java.io.InputStream f()>;%;$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.touchtype.swiftkey/settings?instance=449ad307fde65cbe391f09ffb0f2b8893393de86&source=1&build_version=814220178&icon_hash=07a00294bb7c5590cbdea8eaaa59b527e7d5c673&display_version=6.4.8.57;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String a(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
D/dalvikvm(10386): GC_CONCURRENT freed 445K, 13% free 3444K/3948K, paused 0ms+0ms, total 3ms
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(10386): <com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.lang.String c(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(10386): <com.a.a.a.bu: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://e.crashlytics.com/spi/v2/events
I/System.out(10386): body:<com.a.a.a.aa: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: java.net.HttpURLConnection e()>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r4)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu i()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu i()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/dalvikvm(10386): Could not find method android.view.Window$Callback.onProvideKeyboardShortcuts, referenced from method android.support.v7.view.j.onProvideKeyboardShortcuts
W/dalvikvm(10386): VFY: unable to resolve interface method 13127: Landroid/view/Window$Callback;.onProvideKeyboardShortcuts (Ljava/util/List;Landroid/view/Menu;I)V
D/dalvikvm(10386): VFY: replacing opcode 0x72 at 0x0002
W/dalvikvm(10386): VFY: unable to find class referenced in signature (Landroid/view/SearchEvent;)
I/dalvikvm(10386): Could not find method android.view.Window$Callback.onSearchRequested, referenced from method android.support.v7.view.j.onSearchRequested
W/dalvikvm(10386): VFY: unable to resolve interface method 13129: Landroid/view/Window$Callback;.onSearchRequested (Landroid/view/SearchEvent;)Z
D/dalvikvm(10386): VFY: replacing opcode 0x72 at 0x0002
I/dalvikvm(10386): Could not find method android.view.Window$Callback.onWindowStartingActionMode, referenced from method android.support.v7.view.j.onWindowStartingActionMode
W/dalvikvm(10386): VFY: unable to resolve interface method 13133: Landroid/view/Window$Callback;.onWindowStartingActionMode (Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm(10386): VFY: replacing opcode 0x72 at 0x0002
D/dalvikvm(10386): Trying to load lib /data/app-lib/com.touchtype.swiftkey-1/libswiftkeysdk-java-internal.so 0x94f5bf58
I/dalvikvm(10386): Could not find method android.view.Window.setStatusBarColor, referenced from method com.touchtype.installer.core.t.b
W/dalvikvm(10386): VFY: unable to resolve virtual method 13148: Landroid/view/Window;.setStatusBarColor (I)V
D/dalvikvm(10386): VFY: replacing opcode 0x6e at 0x009a
D/dalvikvm(10386): GC_CONCURRENT freed 311K, 10% free 3645K/4012K, paused 2ms+14ms, total 18ms
I/dalvikvm(10386): Could not find method android.content.res.Resources.getDrawable, referenced from method android.support.v7.widget.cv.getDrawable
W/dalvikvm(10386): VFY: unable to resolve virtual method 698: Landroid/content/res/Resources;.getDrawable (ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(10386): VFY: replacing opcode 0x6e at 0x0002
I/dalvikvm(10386): Could not find method android.content.res.Resources.getDrawableForDensity, referenced from method android.support.v7.widget.cv.getDrawableForDensity
W/dalvikvm(10386): VFY: unable to resolve virtual method 700: Landroid/content/res/Resources;.getDrawableForDensity (IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(10386): VFY: replacing opcode 0x6e at 0x0002
D/dalvikvm(10386): GC_FOR_ALLOC freed 45K, 10% free 3626K/4012K, paused 2ms, total 2ms
I/dalvikvm-heap(10386): Grow heap (frag case) to 4.216MB for 653412-byte allocation
D/dalvikvm(10386): GC_CONCURRENT freed <1K, 9% free 4264K/4652K, paused 1ms+0ms, total 3ms
D/dalvikvm(10386): WAIT_FOR_CONCURRENT_GC blocked 2ms
E/dalvikvm(10386): Could not find class 'android.graphics.drawable.RippleDrawable', referenced from method android.support.v7.widget.y.a
W/dalvikvm(10386): VFY: unable to resolve instanceof 199 (Landroid/graphics/drawable/RippleDrawable;) in Landroid/support/v7/widget/y;
D/dalvikvm(10386): VFY: replacing opcode 0x20 at 0x000c
I/dalvikvm(10386): Could not find method android.content.Context.getColorStateList, referenced from method android.support.v7.c.a.b.a
W/dalvikvm(10386): VFY: unable to resolve virtual method 493: Landroid/content/Context;.getColorStateList (I)Landroid/content/res/ColorStateList;
D/dalvikvm(10386): VFY: replacing opcode 0x6e at 0x0006
I/System.out(10386): body:<com.a.a.a.bu: com.a.a.a.bu i()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:237
D/dalvikvm(10386): GC_CONCURRENT freed 295K, 8% free 4458K/4812K, paused 3ms+3ms, total 15ms
E/ActivityThread(10386): Failed to find provider info for com.swiftkey.languageprovider
D/dalvikvm(10386): GC_FOR_ALLOC freed 206K, 8% free 4653K/5040K, paused 17ms, total 17ms
I/System.out(10386): body:<com.a.a.a.bu: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:83
D/dalvikvm(10386): GC_FOR_ALLOC freed 137K, 10% free 4712K/5228K, paused 3ms, total 3ms
D/dalvikvm(10386): GC_CONCURRENT freed 317K, 8% free 4980K/5392K, paused 2ms+6ms, total 11ms
E/PreinstalledLanguagePackJsonBuilder(10386): Unable to create preinstalled JSON - no files in preinstall directory /system/com.touchtype
D/dalvikvm(10386): Added shared lib /data/app-lib/com.touchtype.swiftkey-1/libswiftkeysdk-java-internal.so 0x94f5bf58
E/ActivityThread(10386): Failed to find provider info for com.swiftkey.languageprovider
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=358440, downTime=358440, deviceId=-1, source=0x101 }
W/ContextImpl(  496): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
D/dalvikvm(10386): GC_CONCURRENT freed 224K, 5% free 5449K/5728K, paused 8ms+0ms, total 11ms
D/dalvikvm(10386): GC_CONCURRENT freed 601K, 11% free 5617K/6284K, paused 2ms+1ms, total 7ms
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
D/        (10386): HostConnection::get() New Host Connection established 0xb7d23d70, tid 10386
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
D/dalvikvm(10386): GC_FOR_ALLOC freed 732K, 13% free 5703K/6492K, paused 9ms, total 9ms
D/dalvikvm(10386): GC_FOR_ALLOC freed 257K, 12% free 5944K/6720K, paused 27ms, total 27ms
D/dalvikvm(10386): GC_FOR_ALLOC freed 25K, 12% free 6146K/6948K, paused 5ms, total 5ms
I/ActivityManager(  496): Displayed com.touchtype.swiftkey/com.touchtype.installer.core.InstallerActivity: +499ms (total +14s87ms)
D/dalvikvm(10386): GC_CONCURRENT freed 356K, 6% free 6846K/7260K, paused 2ms+0ms, total 6ms
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.d.b.b: net.swiftkey.a.a.d.b.a a(java.lang.String,java.util.List)>	sig:specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.d.b.b$b: boolean a(java.net.URI)>	sig:$r3 = virtualinvoke $r1.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.b.f: boolean a(java.lang.String)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(10386): <net.swiftkey.a.b.f: boolean a(java.lang.String)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)###https://skslm.swiftkey.net/swiftkey/sksdk-3.0/sk-6.4.8/languagePacksSSL.json
I/System.out(10386): body:<net.swiftkey.a.b.f: boolean a(java.lang.String)>	sig:$r0 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.URL l()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(10386): <net.swiftkey.a.a.c.d: java.net.URL l()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://skslm.swiftkey.net/swiftkey/sksdk-3.0/sk-6.4.8/languagePacksSSL.json
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
D/dalvikvm(10386): GC_CONCURRENT freed 1102K, 15% free 7102K/8260K, paused 2ms+1ms, total 7ms
D/dalvikvm(10386): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(10386): GC_FOR_ALLOC freed 960K, 22% free 6456K/8260K, paused 6ms, total 6ms
I/dalvikvm-heap(10386): Grow heap (frag case) to 6.963MB for 635808-byte allocation
D/dalvikvm(10386): GC_FOR_ALLOC freed <1K, 21% free 7077K/8884K, paused 10ms, total 10ms
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=359648, downTime=359648, deviceId=-1, source=0x101 }
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:2
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void connect()>()	timediff:77
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.URL l()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(10386): <net.swiftkey.a.a.c.d: java.net.URL l()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://skslm.swiftkey.net/swiftkey/sksdk-3.0/sk-6.4.8/languagePacksSSL.json
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:$r15 = virtualinvoke $r5.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.URL l()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(10386): <net.swiftkey.a.a.c.d: java.net.URL l()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://skslm.swiftkey.net/swiftkey/sksdk-3.0/sk-6.4.8/languagePacksSSL.json
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r10)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z0)	timediff:0
E/SyncLoggingListener(10386): /data/data/com.touchtype.swiftkey/files/access-stack-auth_1.json: open failed: ENOENT (No such file or directory)
I/System.out(10386): body:<net.swiftkey.a.a.c.d: int e()>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:51
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.io.InputStream c()>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(10386): URLConn;%;1;%;<net.swiftkey.a.a.c.d: java.io.InputStream c()>;%;$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://skslm.swiftkey.net/swiftkey/sksdk-3.0/sk-6.4.8/languagePacksSSL.json;%;false;%;31909;%;max-age=3600;%;Not found;%;1212;%;Not found
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.lang.String j()>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentType()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.lang.String k()>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: int i()>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>()	timediff:1
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.lang.String a(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: void b()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(10386): GC_CONCURRENT freed 1075K, 17% free 7434K/8884K, paused 2ms+5ms, total 17ms
D/dalvikvm(10386): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm(10386): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(10386): WAIT_FOR_CONCURRENT_GC blocked 14ms
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
E/dalvikvm(10386): dlopen("/system/vendor/lib/libllvm.so") failed: dlopen failed: library "/system/vendor/lib/libllvm.so" not found
E/dalvikvm(10386): dlopen("/system/vendor/lib/libPVROCL.so") failed: dlopen failed: library "/system/vendor/lib/libPVROCL.so" not found
E/dalvikvm(10386): dlopen("/system/vendor/lib/egl/libGLES_mali.so") failed: dlopen failed: library "/system/vendor/lib/egl/libGLES_mali.so" not found
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:2
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<com.touchtype.common.languagepacks.AvailableLanguagePack: boolean isPreinstalled()>	sig:$r1 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>()	timediff:0
E/dalvikvm(10386): dlopen("/system/lib/libOpenCL.so") failed: dlopen failed: library "/system/lib/libOpenCL.so" not found
D/dalvikvm(10386): GC_CONCURRENT freed 1399K, 17% free 7504K/9012K, paused 0ms+1ms, total 10ms
E/dalvikvm(10386): dlopen("/system/vendor/lib/libOpenCL.so") failed: dlopen failed: library "/system/vendor/lib/libOpenCL.so" not found
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b1fb110 attribute=android.view.inputmethod.EditorInfo@4afafc54, token = android.os.BinderProxy@4aa69f68
I/System.out(10386): body:<net.swiftkey.a.b.f: boolean a(java.lang.String)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(10386): <net.swiftkey.a.b.f: boolean a(java.lang.String)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0)###https://telemetry.api.swiftkey.com/v1/bark-logs
I/System.out(10386): body:<net.swiftkey.a.b.f: boolean a(java.lang.String)>	sig:$r0 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.URL l()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(10386): <net.swiftkey.a.a.c.d: java.net.URL l()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://telemetry.api.swiftkey.com/v1/bark-logs
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=360128, downTime=360128, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=360139, downTime=360139, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=360168, downTime=360168, deviceId=-1, source=0x101 }
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputManager(  496): Input event injection from pid 10376 failed.
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=139.32458, y[0]=258.54248, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=1, eventTime=360173, downTime=360172, deviceId=0, source=0x1002 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=360174, downTime=360174, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=360181, downTime=360181, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a97285c attribute=null, token = android.os.BinderProxy@4aa69f68
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void connect()>()	timediff:433
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.URL l()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(10386): <net.swiftkey.a.a.c.d: java.net.URL l()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://telemetry.api.swiftkey.com/v1/bark-logs
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:$r15 = virtualinvoke $r5.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.g: boolean m()>	sig:virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void disconnect()>()	timediff:1
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.URL l()>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(10386): <net.swiftkey.a.a.c.d: java.net.URL l()>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://telemetry.api.swiftkey.com/v1/bark-logs
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r10)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r10)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r10)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.net.HttpURLConnection m()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z0)	timediff:0
I/System.out(10386): body:<net.swiftkey.a.a.c.d: java.io.OutputStream d()>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:267
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
W/NetworkManagementSocketTagger(  496): setKernelCountSet(10007, 0) failed with errno -13
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://www.swiftkey.com/en/keyboard-terms?_src=an cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 496
I/System.out(10386): body:<net.swiftkey.a.a.c.d: int e()>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:311
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/System.out(10386): body:<net.swiftkey.a.a.c.d: void b()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/WearableService(  661): Wearable Services stopping
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361142, downTime=361142, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361145, downTime=361145, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361146, downTime=361146, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361147, downTime=361147, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_1, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361148, downTime=361148, deviceId=-1, source=0x101 }
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=407.07648, y[0]=314.7973, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=361218, downTime=361218, deviceId=0, source=0x1002 }
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b1beed4 attribute=android.view.inputmethod.EditorInfo@4afa90d0, token = android.os.BinderProxy@4aa69f68
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000 (has extras)} from pid 10386
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361481, downTime=361481, deviceId=-1, source=0x101 }
I/InputDispatcher(  496): Dropped event because of pending overdue app switch.
W/InputManager(  496): Input event injection from pid 10376 failed.
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b1cf0f4 attribute=android.view.inputmethod.EditorInfo@4afa6ba8, token = android.os.BinderProxy@4aa69f68
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361949, downTime=361949, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000 (has extras)} from pid 10386
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361978, downTime=361978, deviceId=-1, source=0x101 }
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=361986, downTime=361986, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=424.26007, y[0]=343.60175, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=1, eventTime=361985, downTime=361985, deviceId=0, source=0x1002 }
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=427.13763, y[0]=349.85565, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=361985, downTime=361985, deviceId=0, source=0x1002 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=362002, downTime=362002, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b1eb834 attribute=null, token = android.os.BinderProxy@4aa69f68
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://www.swiftkey.com/en/keyboard-terms?_src=an cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://www.swiftkey.com/en/keyboard-terms?_src=an cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://www.swiftkey.com/en/keyboard-terms?_src=an cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
D/dalvikvm(10386): GC_CONCURRENT freed 1821K, 21% free 7132K/9012K, paused 1ms+1ms, total 12ms
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
W/WindowManager(  496): updateFocusedWindowLocked, focusedAppToken is null.
W/ViewRootImpl(  496): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_L1, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=362658, downTime=362658, deviceId=-1, source=0x101 }
W/ViewRootImpl(  496): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=362659, downTime=362659, deviceId=-1, source=0x101 }
W/ViewRootImpl(  496): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=362662, downTime=362662, deviceId=-1, source=0x101 }
W/ViewRootImpl(  496): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=362662, downTime=362662, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b1e2bb0 attribute=android.view.inputmethod.EditorInfo@4af92330, token = android.os.BinderProxy@4aa69f68
W/ViewRootImpl(  496): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=-59.08963, y[0]=-141.50835, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=362702, downTime=362702, deviceId=0, source=0x1002 }
W/ViewRootImpl(  496): Dropping event due to root view being removed: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=618.0, y[0]=426.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=362703, downTime=362703, deviceId=0, source=0x1002 }
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
V/FlingTracker(  558): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  558): java.lang.Throwable
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  558): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  558): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  558): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  558): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  558): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  558): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  558): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  558): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  558): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  558): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  558): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  558): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  558): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  496): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(  496): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=632.28564, y[0]=434.93225, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=362703, downTime=362703, deviceId=0, source=0x1002 }
W/ViewRootImpl(  496): Dropping event due to root view being removed: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=291.0, y[0]=43.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=362703, downTime=362703, deviceId=0, source=0x1002 }
W/ViewRootImpl(  496): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=248.81122, y[0]=-13.721466, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=4, eventTime=362705, downTime=362703, deviceId=0, source=0x1002 }
W/ViewRootImpl(  496): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=237.87521, y[0]=-16.159592, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=362705, downTime=362703, deviceId=0, source=0x1002 }
W/ViewRootImpl(  496): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-2.0, y[0]=-2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=19, eventTime=362701, downTime=-1, deviceId=0, source=0x10004 }
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000 (has extras)} from pid 10386
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=362752, downTime=362752, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae164f4 attribute=android.view.inputmethod.EditorInfo@4af8f498, token = android.os.BinderProxy@4aa69f68
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://www.swiftkey.com/en/keyboard-terms?_src=an cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363006, downTime=363006, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
W/ViewRootImpl(10386): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-5.0, y[0]=-3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=363011, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_AVR_INPUT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363011, downTime=363011, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363017, downTime=363017, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_ALT_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363019, downTime=363019, deviceId=-1, source=0x101 }
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(10386): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_POINTER_DOWN(1), id[0]=0, x[0]=1002.2041, y[0]=-212.31676, toolType[0]=TOOL_TYPE_UNKNOWN, id[1]=1, x[1]=-17.0, y[1]=86.0, toolType[1]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=2, historySize=0, eventTime=363089, downTime=363088, deviceId=0, source=0x1002 }
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=1011.58105, y[0]=-214.97742, toolType[0]=TOOL_TYPE_UNKNOWN, id[1]=1, x[1]=6.7464905, y[1]=83.925995, toolType[1]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=2, historySize=0, eventTime=363089, downTime=363088, deviceId=0, source=0x1002 }
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_POINTER_UP(1), id[0]=0, x[0]=1011.95056, y[0]=-218.7306, toolType[0]=TOOL_TYPE_UNKNOWN, id[1]=1, x[1]=30.29181, y[1]=81.25885, toolType[1]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=2, historySize=0, eventTime=363089, downTime=363088, deviceId=0, source=0x1002 }
W/ViewRootImpl(10386): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=1018.90784, y[0]=-222.95387, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=363090, downTime=363088, deviceId=0, source=0x1002 }
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b0015f0 attribute=android.view.inputmethod.EditorInfo@4af8a948, token = android.os.BinderProxy@4aa69f68
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
W/WindowManager(  496): updateFocusedWindowLocked, focusedAppToken is null.
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363509, downTime=363509, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363510, downTime=363510, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363510, downTime=363510, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363511, downTime=363511, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363512, downTime=363512, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363513, downTime=363513, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363513, downTime=363513, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_V, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363514, downTime=363514, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363516, downTime=363516, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_TAB, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363517, downTime=363517, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363536, downTime=363536, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363538, downTime=363538, deviceId=-1, source=0x101 }
W/BackupManagerService(  496): dataChanged but no participant pkg='com.android.providers.settings' uid=10010
W/ContextImpl(  496): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/InputMethodManagerService(  496): Starting input on non-focused client com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa6ed98 (uid=10046 pid=10386)
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputEventReceiver(  558): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  558): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  558): Attempted to finish an input event but the input event receiver has already been disposed.
W/ContextImpl(  496): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(  558): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=225.47095, y[0]=-207.62396, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=2, eventTime=363545, downTime=363545, deviceId=0, source=0x1002 }
W/ViewRootImpl(  558): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=227.5072, y[0]=-213.99403, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=363546, downTime=363545, deviceId=0, source=0x1002 }
W/InputEventReceiver(  558): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(  558): Dropping event due to root view being removed: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=363542, downTime=363542, deviceId=-1, source=0x101 }
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://swiftkey.com/en/app/privacy cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://www.swiftkey.com/en/keyboard-terms?_src=an cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.VIEW dat=https://www.swiftkey.com/en/keyboard-terms?_src=an cmp=com.android.browser/.BrowserActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
V/FlingTracker(  558): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  558): java.lang.Throwable
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  558): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  558): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  558): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  558): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  558): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  558): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  558): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  558): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  558): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  558): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  558): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  558): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  558): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000 (has extras)} from pid 10386
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=365048, downTime=365048, deviceId=-1, source=0x101 }
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=365058, downTime=365058, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae80d98 attribute=android.view.inputmethod.EditorInfo@4af6a554, token = android.os.BinderProxy@4aa69f68
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=0.0 v=4500.0)
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=0.0 v=4500.0)
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
W/WindowManager(  496): updateFocusedWindowLocked, focusedAppToken is null.
W/EGL_emulation(  558): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=365234, downTime=365234, deviceId=-1, source=0x101 }
W/ViewRootImpl(  558): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=365280, downTime=365280, deviceId=-1, source=0x101 }
V/FlingTracker(  558): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  558): java.lang.Throwable
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  558): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  558): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  558): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  558): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  558): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  558): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  558): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  558): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  558): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  558): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  558): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  558): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  558): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  558): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  558): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  558): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  558): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=378.0 v=0.0)
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=378.0 v=-3000.0)
V/PanelView(  558): animationTick called with dtms=0; nothing to do (h=378.0 v=-3000.0)
V/PanelView(  558): animationTick called with dtms=-10; nothing to do (h=378.0 v=-3000.0)
W/ViewRootImpl(10386): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=365310, downTime=365310, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  496): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae33a08 attribute=null, token = android.os.BinderProxy@4aa69f68
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputManager(  496): Input event injection from pid 10376 failed.
W/EGL_emulation(  558): eglSurfaceAttrib not implemented 3093 12436
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputManager(  496): Input event injection from pid 10376 failed.
W/InputManager(  496): Input event injection from pid 10376 failed.
I/ActivityManager(  496): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.touchtype.swiftkey/com.touchtype.LauncherActivity-Icon} from pid 10376
I/ActivityManager(  496): START u0 {act=android.settings.INPUT_METHOD_SETTINGS cmp=com.android.settings/.Settings$InputMethodAndLanguageSettingsActivity (has extras)} from pid 10386
I/AndroidRuntime(10376): VM exiting with result code 0.
W/WindowManager(  496): updateFocusedWindowLocked, focusedAppToken is null.
W/EGL_emulation(  558): eglSurfaceAttrib not implemented 3093 12436
